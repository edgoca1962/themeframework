/*! For license information please see main.js.LICENSE.txt */
(() => { var t = { 455: function (t) { t.exports = function () { "use strict"; const t = "SweetAlert2:", e = t => t.charAt(0).toUpperCase() + t.slice(1), i = t => Array.prototype.slice.call(t), s = e => { console.warn("".concat(t, " ").concat("object" == typeof e ? e.join(" ") : e)) }, n = e => { console.error("".concat(t, " ").concat(e)) }, o = [], a = (t, e) => { var i; i = '"'.concat(t, '" is deprecated and will be removed in the next major release. Please use "').concat(e, '" instead.'), o.includes(i) || (o.push(i), s(i)) }, r = t => "function" == typeof t ? t() : t, l = t => t && "function" == typeof t.toPromise, c = t => l(t) ? t.toPromise() : Promise.resolve(t), h = t => t && Promise.resolve(t) === t, d = { title: "", titleText: "", text: "", html: "", footer: "", icon: void 0, iconColor: void 0, iconHtml: void 0, template: void 0, toast: !1, showClass: { popup: "swal2-show", backdrop: "swal2-backdrop-show", icon: "swal2-icon-show" }, hideClass: { popup: "swal2-hide", backdrop: "swal2-backdrop-hide", icon: "swal2-icon-hide" }, customClass: {}, target: "body", color: void 0, backdrop: !0, heightAuto: !0, allowOutsideClick: !0, allowEscapeKey: !0, allowEnterKey: !0, stopKeydownPropagation: !0, keydownListenerCapture: !1, showConfirmButton: !0, showDenyButton: !1, showCancelButton: !1, preConfirm: void 0, preDeny: void 0, confirmButtonText: "OK", confirmButtonAriaLabel: "", confirmButtonColor: void 0, denyButtonText: "No", denyButtonAriaLabel: "", denyButtonColor: void 0, cancelButtonText: "Cancel", cancelButtonAriaLabel: "", cancelButtonColor: void 0, buttonsStyling: !0, reverseButtons: !1, focusConfirm: !0, focusDeny: !1, focusCancel: !1, returnFocus: !0, showCloseButton: !1, closeButtonHtml: "&times;", closeButtonAriaLabel: "Close this dialog", loaderHtml: "", showLoaderOnConfirm: !1, showLoaderOnDeny: !1, imageUrl: void 0, imageWidth: void 0, imageHeight: void 0, imageAlt: "", timer: void 0, timerProgressBar: !1, width: void 0, padding: void 0, background: void 0, input: void 0, inputPlaceholder: "", inputLabel: "", inputValue: "", inputOptions: {}, inputAutoTrim: !0, inputAttributes: {}, inputValidator: void 0, returnInputValueOnDeny: !1, validationMessage: void 0, grow: !1, position: "center", progressSteps: [], currentProgressStep: void 0, progressStepsDistance: void 0, willOpen: void 0, didOpen: void 0, didRender: void 0, willClose: void 0, didClose: void 0, didDestroy: void 0, scrollbarPadding: !0 }, u = ["allowEscapeKey", "allowOutsideClick", "background", "buttonsStyling", "cancelButtonAriaLabel", "cancelButtonColor", "cancelButtonText", "closeButtonAriaLabel", "closeButtonHtml", "color", "confirmButtonAriaLabel", "confirmButtonColor", "confirmButtonText", "currentProgressStep", "customClass", "denyButtonAriaLabel", "denyButtonColor", "denyButtonText", "didClose", "didDestroy", "footer", "hideClass", "html", "icon", "iconColor", "iconHtml", "imageAlt", "imageHeight", "imageUrl", "imageWidth", "preConfirm", "preDeny", "progressSteps", "returnFocus", "reverseButtons", "showCancelButton", "showCloseButton", "showConfirmButton", "showDenyButton", "text", "title", "titleText", "willClose"], p = {}, f = ["allowOutsideClick", "allowEnterKey", "backdrop", "focusConfirm", "focusDeny", "focusCancel", "returnFocus", "heightAuto", "keydownListenerCapture"], g = t => Object.prototype.hasOwnProperty.call(d, t), m = t => -1 !== u.indexOf(t), b = t => p[t], _ = t => { g(t) || s('Unknown parameter "'.concat(t, '"')) }, y = t => { f.includes(t) && s('The parameter "'.concat(t, '" is incompatible with toasts')) }, w = t => { b(t) && a(t, b(t)) }, v = t => { const e = {}; for (const i in t) e[t[i]] = "swal2-" + t[i]; return e }, x = v(["container", "shown", "height-auto", "iosfix", "popup", "modal", "no-backdrop", "no-transition", "toast", "toast-shown", "show", "hide", "close", "title", "html-container", "actions", "confirm", "deny", "cancel", "default-outline", "footer", "icon", "icon-content", "image", "input", "file", "range", "select", "radio", "checkbox", "label", "textarea", "inputerror", "input-label", "validation-message", "progress-steps", "active-progress-step", "progress-step", "progress-step-line", "loader", "loading", "styled", "top", "top-start", "top-end", "top-left", "top-right", "center", "center-start", "center-end", "center-left", "center-right", "bottom", "bottom-start", "bottom-end", "bottom-left", "bottom-right", "grow-row", "grow-column", "grow-fullscreen", "rtl", "timer-progress-bar", "timer-progress-bar-container", "scrollbar-measure", "icon-success", "icon-warning", "icon-info", "icon-question", "icon-error"]), k = v(["success", "warning", "info", "question", "error"]), E = () => document.body.querySelector(".".concat(x.container)), C = t => { const e = E(); return e ? e.querySelector(t) : null }, A = t => C(".".concat(t)), M = () => A(x.popup), S = () => A(x.icon), O = () => A(x.title), P = () => A(x["html-container"]), T = () => A(x.image), L = () => A(x["progress-steps"]), D = () => A(x["validation-message"]), I = () => C(".".concat(x.actions, " .").concat(x.confirm)), B = () => C(".".concat(x.actions, " .").concat(x.deny)), R = () => C(".".concat(x.loader)), z = () => C(".".concat(x.actions, " .").concat(x.cancel)), j = () => A(x.actions), N = () => A(x.footer), F = () => A(x["timer-progress-bar"]), V = () => A(x.close), H = () => { const t = i(M().querySelectorAll('[tabindex]:not([tabindex="-1"]):not([tabindex="0"])')).sort(((t, e) => { const i = parseInt(t.getAttribute("tabindex")), s = parseInt(e.getAttribute("tabindex")); return i > s ? 1 : i < s ? -1 : 0 })), e = i(M().querySelectorAll('\n  a[href],\n  area[href],\n  input:not([disabled]),\n  select:not([disabled]),\n  textarea:not([disabled]),\n  button:not([disabled]),\n  iframe,\n  object,\n  embed,\n  [tabindex="0"],\n  [contenteditable],\n  audio[controls],\n  video[controls],\n  summary\n')).filter((t => "-1" !== t.getAttribute("tabindex"))); return (t => { const e = []; for (let i = 0; i < t.length; i++)-1 === e.indexOf(t[i]) && e.push(t[i]); return e })(t.concat(e)).filter((t => at(t))) }, W = () => Y(document.body, x.shown) && !Y(document.body, x["toast-shown"]) && !Y(document.body, x["no-backdrop"]), $ = () => M() && Y(M(), x.toast), q = { previousBodyPadding: null }, U = (t, e) => { if (t.textContent = "", e) { const s = (new DOMParser).parseFromString(e, "text/html"); i(s.querySelector("head").childNodes).forEach((e => { t.appendChild(e) })), i(s.querySelector("body").childNodes).forEach((e => { t.appendChild(e) })) } }, Y = (t, e) => { if (!e) return !1; const i = e.split(/\s+/); for (let e = 0; e < i.length; e++)if (!t.classList.contains(i[e])) return !1; return !0 }, X = (t, e, n) => { if (((t, e) => { i(t.classList).forEach((i => { Object.values(x).includes(i) || Object.values(k).includes(i) || Object.values(e.showClass).includes(i) || t.classList.remove(i) })) })(t, e), e.customClass && e.customClass[n]) { if ("string" != typeof e.customClass[n] && !e.customClass[n].forEach) return s("Invalid type of customClass.".concat(n, '! Expected string or iterable object, got "').concat(typeof e.customClass[n], '"')); G(t, e.customClass[n]) } }, K = (t, e) => { if (!e) return null; switch (e) { case "select": case "textarea": case "file": return t.querySelector(".".concat(x.popup, " > .").concat(x[e])); case "checkbox": return t.querySelector(".".concat(x.popup, " > .").concat(x.checkbox, " input")); case "radio": return t.querySelector(".".concat(x.popup, " > .").concat(x.radio, " input:checked")) || t.querySelector(".".concat(x.popup, " > .").concat(x.radio, " input:first-child")); case "range": return t.querySelector(".".concat(x.popup, " > .").concat(x.range, " input")); default: return t.querySelector(".".concat(x.popup, " > .").concat(x.input)) } }, Z = t => { if (t.focus(), "file" !== t.type) { const e = t.value; t.value = "", t.value = e } }, Q = (t, e, i) => { t && e && ("string" == typeof e && (e = e.split(/\s+/).filter(Boolean)), e.forEach((e => { Array.isArray(t) ? t.forEach((t => { i ? t.classList.add(e) : t.classList.remove(e) })) : i ? t.classList.add(e) : t.classList.remove(e) }))) }, G = (t, e) => { Q(t, e, !0) }, J = (t, e) => { Q(t, e, !1) }, tt = (t, e) => { const s = i(t.childNodes); for (let t = 0; t < s.length; t++)if (Y(s[t], e)) return s[t] }, et = (t, e, i) => { i === "".concat(parseInt(i)) && (i = parseInt(i)), i || 0 === parseInt(i) ? t.style[e] = "number" == typeof i ? "".concat(i, "px") : i : t.style.removeProperty(e) }, it = function (t) { let e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "flex"; t.style.display = e }, st = t => { t.style.display = "none" }, nt = (t, e, i, s) => { const n = t.querySelector(e); n && (n.style[i] = s) }, ot = (t, e, i) => { e ? it(t, i) : st(t) }, at = t => !(!t || !(t.offsetWidth || t.offsetHeight || t.getClientRects().length)), rt = t => !!(t.scrollHeight > t.clientHeight), lt = t => { const e = window.getComputedStyle(t), i = parseFloat(e.getPropertyValue("animation-duration") || "0"), s = parseFloat(e.getPropertyValue("transition-duration") || "0"); return i > 0 || s > 0 }, ct = function (t) { let e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1]; const i = F(); at(i) && (e && (i.style.transition = "none", i.style.width = "100%"), setTimeout((() => { i.style.transition = "width ".concat(t / 1e3, "s linear"), i.style.width = "0%" }), 10)) }, ht = () => "undefined" == typeof window || "undefined" == typeof document, dt = {}, ut = t => new Promise((e => { if (!t) return e(); const i = window.scrollX, s = window.scrollY; dt.restoreFocusTimeout = setTimeout((() => { dt.previousActiveElement && dt.previousActiveElement.focus ? (dt.previousActiveElement.focus(), dt.previousActiveElement = null) : document.body && document.body.focus(), e() }), 100), window.scrollTo(i, s) })), pt = '\n <div aria-labelledby="'.concat(x.title, '" aria-describedby="').concat(x["html-container"], '" class="').concat(x.popup, '" tabindex="-1">\n   <button type="button" class="').concat(x.close, '"></button>\n   <ul class="').concat(x["progress-steps"], '"></ul>\n   <div class="').concat(x.icon, '"></div>\n   <img class="').concat(x.image, '" />\n   <h2 class="').concat(x.title, '" id="').concat(x.title, '"></h2>\n   <div class="').concat(x["html-container"], '" id="').concat(x["html-container"], '"></div>\n   <input class="').concat(x.input, '" />\n   <input type="file" class="').concat(x.file, '" />\n   <div class="').concat(x.range, '">\n     <input type="range" />\n     <output></output>\n   </div>\n   <select class="').concat(x.select, '"></select>\n   <div class="').concat(x.radio, '"></div>\n   <label for="').concat(x.checkbox, '" class="').concat(x.checkbox, '">\n     <input type="checkbox" />\n     <span class="').concat(x.label, '"></span>\n   </label>\n   <textarea class="').concat(x.textarea, '"></textarea>\n   <div class="').concat(x["validation-message"], '" id="').concat(x["validation-message"], '"></div>\n   <div class="').concat(x.actions, '">\n     <div class="').concat(x.loader, '"></div>\n     <button type="button" class="').concat(x.confirm, '"></button>\n     <button type="button" class="').concat(x.deny, '"></button>\n     <button type="button" class="').concat(x.cancel, '"></button>\n   </div>\n   <div class="').concat(x.footer, '"></div>\n   <div class="').concat(x["timer-progress-bar-container"], '">\n     <div class="').concat(x["timer-progress-bar"], '"></div>\n   </div>\n </div>\n').replace(/(^|\n)\s*/g, ""), ft = () => { dt.currentInstance.resetValidationMessage() }, gt = t => { const e = (() => { const t = E(); return !!t && (t.remove(), J([document.documentElement, document.body], [x["no-backdrop"], x["toast-shown"], x["has-column"]]), !0) })(); if (ht()) return void n("SweetAlert2 requires document to initialize"); const i = document.createElement("div"); i.className = x.container, e && G(i, x["no-transition"]), U(i, pt); const s = "string" == typeof (o = t.target) ? document.querySelector(o) : o; var o; s.appendChild(i), (t => { const e = M(); e.setAttribute("role", t.toast ? "alert" : "dialog"), e.setAttribute("aria-live", t.toast ? "polite" : "assertive"), t.toast || e.setAttribute("aria-modal", "true") })(t), (t => { "rtl" === window.getComputedStyle(t).direction && G(E(), x.rtl) })(s), (() => { const t = M(), e = tt(t, x.input), i = tt(t, x.file), s = t.querySelector(".".concat(x.range, " input")), n = t.querySelector(".".concat(x.range, " output")), o = tt(t, x.select), a = t.querySelector(".".concat(x.checkbox, " input")), r = tt(t, x.textarea); e.oninput = ft, i.onchange = ft, o.onchange = ft, a.onchange = ft, r.oninput = ft, s.oninput = () => { ft(), n.value = s.value }, s.onchange = () => { ft(), s.nextSibling.value = s.value } })() }, mt = (t, e) => { t instanceof HTMLElement ? e.appendChild(t) : "object" == typeof t ? bt(t, e) : t && U(e, t) }, bt = (t, e) => { t.jquery ? _t(e, t) : U(e, t.toString()) }, _t = (t, e) => { if (t.textContent = "", 0 in e) for (let i = 0; i in e; i++)t.appendChild(e[i].cloneNode(!0)); else t.appendChild(e.cloneNode(!0)) }, yt = (() => { if (ht()) return !1; const t = document.createElement("div"), e = { WebkitAnimation: "webkitAnimationEnd", animation: "animationend" }; for (const i in e) if (Object.prototype.hasOwnProperty.call(e, i) && void 0 !== t.style[i]) return e[i]; return !1 })(), wt = (t, e) => { const i = j(), s = R(); e.showConfirmButton || e.showDenyButton || e.showCancelButton ? it(i) : st(i), X(i, e, "actions"), function (t, e, i) { const s = I(), n = B(), o = z(); vt(s, "confirm", i), vt(n, "deny", i), vt(o, "cancel", i), function (t, e, i, s) { if (!s.buttonsStyling) return J([t, e, i], x.styled); G([t, e, i], x.styled), s.confirmButtonColor && (t.style.backgroundColor = s.confirmButtonColor, G(t, x["default-outline"])), s.denyButtonColor && (e.style.backgroundColor = s.denyButtonColor, G(e, x["default-outline"])), s.cancelButtonColor && (i.style.backgroundColor = s.cancelButtonColor, G(i, x["default-outline"])) }(s, n, o, i), i.reverseButtons && (i.toast ? (t.insertBefore(o, s), t.insertBefore(n, s)) : (t.insertBefore(o, e), t.insertBefore(n, e), t.insertBefore(s, e))) }(i, s, e), U(s, e.loaderHtml), X(s, e, "loader") }; function vt(t, i, s) { ot(t, s["show".concat(e(i), "Button")], "inline-block"), U(t, s["".concat(i, "ButtonText")]), t.setAttribute("aria-label", s["".concat(i, "ButtonAriaLabel")]), t.className = x[i], X(t, s, "".concat(i, "Button")), G(t, s["".concat(i, "ButtonClass")]) } const xt = (t, e) => { const i = E(); i && (function (t, e) { "string" == typeof e ? t.style.background = e : e || G([document.documentElement, document.body], x["no-backdrop"]) }(i, e.backdrop), function (t, e) { e in x ? G(t, x[e]) : (s('The "position" parameter is not valid, defaulting to "center"'), G(t, x.center)) }(i, e.position), function (t, e) { if (e && "string" == typeof e) { const i = "grow-".concat(e); i in x && G(t, x[i]) } }(i, e.grow), X(i, e, "container")) }; var kt = { awaitingPromise: new WeakMap, promise: new WeakMap, innerParams: new WeakMap, domCache: new WeakMap }; const Et = ["input", "file", "range", "select", "radio", "checkbox", "textarea"], Ct = t => { if (!Tt[t.input]) return n('Unexpected type of input! Expected "text", "email", "password", "number", "tel", "select", "radio", "checkbox", "textarea", "file" or "url", got "'.concat(t.input, '"')); const e = Pt(t.input), i = Tt[t.input](e, t); it(i), setTimeout((() => { Z(i) })) }, At = (t, e) => { const i = K(M(), t); if (i) { (t => { for (let e = 0; e < t.attributes.length; e++) { const i = t.attributes[e].name;["type", "value", "style"].includes(i) || t.removeAttribute(i) } })(i); for (const t in e) i.setAttribute(t, e[t]) } }, Mt = t => { const e = Pt(t.input); t.customClass && G(e, t.customClass.input) }, St = (t, e) => { t.placeholder && !e.inputPlaceholder || (t.placeholder = e.inputPlaceholder) }, Ot = (t, e, i) => { if (i.inputLabel) { t.id = x.input; const s = document.createElement("label"), n = x["input-label"]; s.setAttribute("for", t.id), s.className = n, G(s, i.customClass.inputLabel), s.innerText = i.inputLabel, e.insertAdjacentElement("beforebegin", s) } }, Pt = t => { const e = x[t] ? x[t] : x.input; return tt(M(), e) }, Tt = {}; Tt.text = Tt.email = Tt.password = Tt.number = Tt.tel = Tt.url = (t, e) => ("string" == typeof e.inputValue || "number" == typeof e.inputValue ? t.value = e.inputValue : h(e.inputValue) || s('Unexpected type of inputValue! Expected "string", "number" or "Promise", got "'.concat(typeof e.inputValue, '"')), Ot(t, t, e), St(t, e), t.type = e.input, t), Tt.file = (t, e) => (Ot(t, t, e), St(t, e), t), Tt.range = (t, e) => { const i = t.querySelector("input"), s = t.querySelector("output"); return i.value = e.inputValue, i.type = e.input, s.value = e.inputValue, Ot(i, t, e), t }, Tt.select = (t, e) => { if (t.textContent = "", e.inputPlaceholder) { const i = document.createElement("option"); U(i, e.inputPlaceholder), i.value = "", i.disabled = !0, i.selected = !0, t.appendChild(i) } return Ot(t, t, e), t }, Tt.radio = t => (t.textContent = "", t), Tt.checkbox = (t, e) => { const i = K(M(), "checkbox"); i.value = "1", i.id = x.checkbox, i.checked = Boolean(e.inputValue); const s = t.querySelector("span"); return U(s, e.inputPlaceholder), t }, Tt.textarea = (t, e) => { t.value = e.inputValue, St(t, e), Ot(t, t, e); return setTimeout((() => { if ("MutationObserver" in window) { const e = parseInt(window.getComputedStyle(M()).width); new MutationObserver((() => { const i = t.offsetWidth + (s = t, parseInt(window.getComputedStyle(s).marginLeft) + parseInt(window.getComputedStyle(s).marginRight)); var s; M().style.width = i > e ? "".concat(i, "px") : null })).observe(t, { attributes: !0, attributeFilter: ["style"] }) } })), t }; const Lt = (t, e) => { const i = P(); X(i, e, "htmlContainer"), e.html ? (mt(e.html, i), it(i, "block")) : e.text ? (i.textContent = e.text, it(i, "block")) : st(i), ((t, e) => { const i = M(), s = kt.innerParams.get(t), n = !s || e.input !== s.input; Et.forEach((t => { const s = x[t], o = tt(i, s); At(t, e.inputAttributes), o.className = s, n && st(o) })), e.input && (n && Ct(e), Mt(e)) })(t, e) }, Dt = (t, e) => { for (const i in k) e.icon !== i && J(t, k[i]); G(t, k[e.icon]), Rt(t, e), It(), X(t, e, "icon") }, It = () => { const t = M(), e = window.getComputedStyle(t).getPropertyValue("background-color"), i = t.querySelectorAll("[class^=swal2-success-circular-line], .swal2-success-fix"); for (let t = 0; t < i.length; t++)i[t].style.backgroundColor = e }, Bt = (t, e) => { t.textContent = "", e.iconHtml ? U(t, zt(e.iconHtml)) : "success" === e.icon ? U(t, '\n  <div class="swal2-success-circular-line-left"></div>\n  <span class="swal2-success-line-tip"></span> <span class="swal2-success-line-long"></span>\n  <div class="swal2-success-ring"></div> <div class="swal2-success-fix"></div>\n  <div class="swal2-success-circular-line-right"></div>\n') : "error" === e.icon ? U(t, '\n  <span class="swal2-x-mark">\n    <span class="swal2-x-mark-line-left"></span>\n    <span class="swal2-x-mark-line-right"></span>\n  </span>\n') : U(t, zt({ question: "?", warning: "!", info: "i" }[e.icon])) }, Rt = (t, e) => { if (e.iconColor) { t.style.color = e.iconColor, t.style.borderColor = e.iconColor; for (const i of [".swal2-success-line-tip", ".swal2-success-line-long", ".swal2-x-mark-line-left", ".swal2-x-mark-line-right"]) nt(t, i, "backgroundColor", e.iconColor); nt(t, ".swal2-success-ring", "borderColor", e.iconColor) } }, zt = t => '<div class="'.concat(x["icon-content"], '">').concat(t, "</div>"), jt = (t, e) => { const i = L(); if (!e.progressSteps || 0 === e.progressSteps.length) return st(i); it(i), i.textContent = "", e.currentProgressStep >= e.progressSteps.length && s("Invalid currentProgressStep parameter, it should be less than progressSteps.length (currentProgressStep like JS arrays starts from 0)"), e.progressSteps.forEach(((t, s) => { const n = (t => { const e = document.createElement("li"); return G(e, x["progress-step"]), U(e, t), e })(t); if (i.appendChild(n), s === e.currentProgressStep && G(n, x["active-progress-step"]), s !== e.progressSteps.length - 1) { const t = (t => { const e = document.createElement("li"); return G(e, x["progress-step-line"]), t.progressStepsDistance && (e.style.width = t.progressStepsDistance), e })(e); i.appendChild(t) } })) }, Nt = (t, e) => { t.className = "".concat(x.popup, " ").concat(at(t) ? e.showClass.popup : ""), e.toast ? (G([document.documentElement, document.body], x["toast-shown"]), G(t, x.toast)) : G(t, x.modal), X(t, e, "popup"), "string" == typeof e.customClass && G(t, e.customClass), e.icon && G(t, x["icon-".concat(e.icon)]) }, Ft = (t, e) => { ((t, e) => { const i = E(), s = M(); e.toast ? (et(i, "width", e.width), s.style.width = "100%", s.insertBefore(R(), S())) : et(s, "width", e.width), et(s, "padding", e.padding), e.color && (s.style.color = e.color), e.background && (s.style.background = e.background), st(D()), Nt(s, e) })(0, e), xt(0, e), jt(0, e), ((t, e) => { const i = kt.innerParams.get(t), s = S(); i && e.icon === i.icon ? (Bt(s, e), Dt(s, e)) : e.icon || e.iconHtml ? e.icon && -1 === Object.keys(k).indexOf(e.icon) ? (n('Unknown icon! Expected "success", "error", "warning", "info" or "question", got "'.concat(e.icon, '"')), st(s)) : (it(s), Bt(s, e), Dt(s, e), G(s, e.showClass.icon)) : st(s) })(t, e), ((t, e) => { const i = T(); if (!e.imageUrl) return st(i); it(i, ""), i.setAttribute("src", e.imageUrl), i.setAttribute("alt", e.imageAlt), et(i, "width", e.imageWidth), et(i, "height", e.imageHeight), i.className = x.image, X(i, e, "image") })(0, e), ((t, e) => { const i = O(); ot(i, e.title || e.titleText, "block"), e.title && mt(e.title, i), e.titleText && (i.innerText = e.titleText), X(i, e, "title") })(0, e), ((t, e) => { const i = V(); U(i, e.closeButtonHtml), X(i, e, "closeButton"), ot(i, e.showCloseButton), i.setAttribute("aria-label", e.closeButtonAriaLabel) })(0, e), Lt(t, e), wt(0, e), ((t, e) => { const i = N(); ot(i, e.footer), e.footer && mt(e.footer, i), X(i, e, "footer") })(0, e), "function" == typeof e.didRender && e.didRender(M()) }, Vt = Object.freeze({ cancel: "cancel", backdrop: "backdrop", close: "close", esc: "esc", timer: "timer" }), Ht = () => { i(document.body.children).forEach((t => { t.hasAttribute("data-previous-aria-hidden") ? (t.setAttribute("aria-hidden", t.getAttribute("data-previous-aria-hidden")), t.removeAttribute("data-previous-aria-hidden")) : t.removeAttribute("aria-hidden") })) }, Wt = ["swal-title", "swal-html", "swal-footer"], $t = t => { const e = {}; return i(t.querySelectorAll("swal-param")).forEach((t => { Qt(t, ["name", "value"]); const i = t.getAttribute("name"), s = t.getAttribute("value"); "boolean" == typeof d[i] && "false" === s && (e[i] = !1), "object" == typeof d[i] && (e[i] = JSON.parse(s)) })), e }, qt = t => { const s = {}; return i(t.querySelectorAll("swal-button")).forEach((t => { Qt(t, ["type", "color", "aria-label"]); const i = t.getAttribute("type"); s["".concat(i, "ButtonText")] = t.innerHTML, s["show".concat(e(i), "Button")] = !0, t.hasAttribute("color") && (s["".concat(i, "ButtonColor")] = t.getAttribute("color")), t.hasAttribute("aria-label") && (s["".concat(i, "ButtonAriaLabel")] = t.getAttribute("aria-label")) })), s }, Ut = t => { const e = {}, i = t.querySelector("swal-image"); return i && (Qt(i, ["src", "width", "height", "alt"]), i.hasAttribute("src") && (e.imageUrl = i.getAttribute("src")), i.hasAttribute("width") && (e.imageWidth = i.getAttribute("width")), i.hasAttribute("height") && (e.imageHeight = i.getAttribute("height")), i.hasAttribute("alt") && (e.imageAlt = i.getAttribute("alt"))), e }, Yt = t => { const e = {}, i = t.querySelector("swal-icon"); return i && (Qt(i, ["type", "color"]), i.hasAttribute("type") && (e.icon = i.getAttribute("type")), i.hasAttribute("color") && (e.iconColor = i.getAttribute("color")), e.iconHtml = i.innerHTML), e }, Xt = t => { const e = {}, s = t.querySelector("swal-input"); s && (Qt(s, ["type", "label", "placeholder", "value"]), e.input = s.getAttribute("type") || "text", s.hasAttribute("label") && (e.inputLabel = s.getAttribute("label")), s.hasAttribute("placeholder") && (e.inputPlaceholder = s.getAttribute("placeholder")), s.hasAttribute("value") && (e.inputValue = s.getAttribute("value"))); const n = t.querySelectorAll("swal-input-option"); return n.length && (e.inputOptions = {}, i(n).forEach((t => { Qt(t, ["value"]); const i = t.getAttribute("value"), s = t.innerHTML; e.inputOptions[i] = s }))), e }, Kt = (t, e) => { const i = {}; for (const s in e) { const n = e[s], o = t.querySelector(n); o && (Qt(o, []), i[n.replace(/^swal-/, "")] = o.innerHTML.trim()) } return i }, Zt = t => { const e = Wt.concat(["swal-param", "swal-button", "swal-image", "swal-icon", "swal-input", "swal-input-option"]); i(t.children).forEach((t => { const i = t.tagName.toLowerCase(); -1 === e.indexOf(i) && s("Unrecognized element <".concat(i, ">")) })) }, Qt = (t, e) => { i(t.attributes).forEach((i => { -1 === e.indexOf(i.name) && s(['Unrecognized attribute "'.concat(i.name, '" on <').concat(t.tagName.toLowerCase(), ">."), "".concat(e.length ? "Allowed attributes are: ".concat(e.join(", ")) : "To set the value, use HTML within the element.")]) })) }; var Gt = { email: (t, e) => /^[a-zA-Z0-9.+_-]+@[a-zA-Z0-9.-]+\.[a-zA-Z0-9-]{2,24}$/.test(t) ? Promise.resolve() : Promise.resolve(e || "Invalid email address"), url: (t, e) => /^https?:\/\/(www\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\.[a-z]{2,63}\b([-a-zA-Z0-9@:%_+.~#?&/=]*)$/.test(t) ? Promise.resolve() : Promise.resolve(e || "Invalid URL") }; function Jt(t) { (function (t) { t.inputValidator || Object.keys(Gt).forEach((e => { t.input === e && (t.inputValidator = Gt[e]) })) })(t), t.showLoaderOnConfirm && !t.preConfirm && s("showLoaderOnConfirm is set to true, but preConfirm is not defined.\nshowLoaderOnConfirm should be used together with preConfirm, see usage example:\nhttps://sweetalert2.github.io/#ajax-request"), function (t) { (!t.target || "string" == typeof t.target && !document.querySelector(t.target) || "string" != typeof t.target && !t.target.appendChild) && (s('Target parameter is not valid, defaulting to "body"'), t.target = "body") }(t), "string" == typeof t.title && (t.title = t.title.split("\n").join("<br />")), gt(t) } class te { constructor(t, e) { this.callback = t, this.remaining = e, this.running = !1, this.start() } start() { return this.running || (this.running = !0, this.started = new Date, this.id = setTimeout(this.callback, this.remaining)), this.remaining } stop() { return this.running && (this.running = !1, clearTimeout(this.id), this.remaining -= (new Date).getTime() - this.started.getTime()), this.remaining } increase(t) { const e = this.running; return e && this.stop(), this.remaining += t, e && this.start(), this.remaining } getTimerLeft() { return this.running && (this.stop(), this.start()), this.remaining } isRunning() { return this.running } } const ee = () => { null === q.previousBodyPadding && document.body.scrollHeight > window.innerHeight && (q.previousBodyPadding = parseInt(window.getComputedStyle(document.body).getPropertyValue("padding-right")), document.body.style.paddingRight = "".concat(q.previousBodyPadding + (() => { const t = document.createElement("div"); t.className = x["scrollbar-measure"], document.body.appendChild(t); const e = t.getBoundingClientRect().width - t.clientWidth; return document.body.removeChild(t), e })(), "px")) }, ie = () => { const t = navigator.userAgent, e = !!t.match(/iPad/i) || !!t.match(/iPhone/i), i = !!t.match(/WebKit/i); if (e && i && !t.match(/CriOS/i)) { const t = 44; M().scrollHeight > window.innerHeight - t && (E().style.paddingBottom = "".concat(t, "px")) } }, se = () => { const t = E(); let e; t.ontouchstart = t => { e = ne(t) }, t.ontouchmove = t => { e && (t.preventDefault(), t.stopPropagation()) } }, ne = t => { const e = t.target, i = E(); return !(oe(t) || ae(t) || e !== i && (rt(i) || "INPUT" === e.tagName || "TEXTAREA" === e.tagName || rt(P()) && P().contains(e))) }, oe = t => t.touches && t.touches.length && "stylus" === t.touches[0].touchType, ae = t => t.touches && t.touches.length > 1, re = t => { const e = E(), s = M(); "function" == typeof t.willOpen && t.willOpen(s); const n = window.getComputedStyle(document.body).overflowY; de(e, s, t), setTimeout((() => { ce(e, s) }), 10), W() && (he(e, t.scrollbarPadding, n), i(document.body.children).forEach((t => { t === E() || t.contains(E()) || (t.hasAttribute("aria-hidden") && t.setAttribute("data-previous-aria-hidden", t.getAttribute("aria-hidden")), t.setAttribute("aria-hidden", "true")) }))), $() || dt.previousActiveElement || (dt.previousActiveElement = document.activeElement), "function" == typeof t.didOpen && setTimeout((() => t.didOpen(s))), J(e, x["no-transition"]) }, le = t => { const e = M(); if (t.target !== e) return; const i = E(); e.removeEventListener(yt, le), i.style.overflowY = "auto" }, ce = (t, e) => { yt && lt(e) ? (t.style.overflowY = "hidden", e.addEventListener(yt, le)) : t.style.overflowY = "auto" }, he = (t, e, i) => { (() => { if ((/iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream || "MacIntel" === navigator.platform && navigator.maxTouchPoints > 1) && !Y(document.body, x.iosfix)) { const t = document.body.scrollTop; document.body.style.top = "".concat(-1 * t, "px"), G(document.body, x.iosfix), se(), ie() } })(), e && "hidden" !== i && ee(), setTimeout((() => { t.scrollTop = 0 })) }, de = (t, e, i) => { G(t, i.showClass.backdrop), e.style.setProperty("opacity", "0", "important"), it(e, "grid"), setTimeout((() => { G(e, i.showClass.popup), e.style.removeProperty("opacity") }), 10), G([document.documentElement, document.body], x.shown), i.heightAuto && i.backdrop && !i.toast && G([document.documentElement, document.body], x["height-auto"]) }, ue = t => { let e = M(); e || new Ei, e = M(); const i = R(); $() ? st(S()) : pe(e, t), it(i), e.setAttribute("data-loading", !0), e.setAttribute("aria-busy", !0), e.focus() }, pe = (t, e) => { const i = j(), s = R(); !e && at(I()) && (e = I()), it(i), e && (st(e), s.setAttribute("data-button-to-replace", e.className)), s.parentNode.insertBefore(s, e), G([t, i], x.loading) }, fe = t => t.checked ? 1 : 0, ge = t => t.checked ? t.value : null, me = t => t.files.length ? null !== t.getAttribute("multiple") ? t.files : t.files[0] : null, be = (t, e) => { const i = M(), s = t => ye[e.input](i, we(t), e); l(e.inputOptions) || h(e.inputOptions) ? (ue(I()), c(e.inputOptions).then((e => { t.hideLoading(), s(e) }))) : "object" == typeof e.inputOptions ? s(e.inputOptions) : n("Unexpected type of inputOptions! Expected object, Map or Promise, got ".concat(typeof e.inputOptions)) }, _e = (t, e) => { const i = t.getInput(); st(i), c(e.inputValue).then((s => { i.value = "number" === e.input ? parseFloat(s) || 0 : "".concat(s), it(i), i.focus(), t.hideLoading() })).catch((e => { n("Error in inputValue promise: ".concat(e)), i.value = "", it(i), i.focus(), t.hideLoading() })) }, ye = { select: (t, e, i) => { const s = tt(t, x.select), n = (t, e, s) => { const n = document.createElement("option"); n.value = s, U(n, e), n.selected = ve(s, i.inputValue), t.appendChild(n) }; e.forEach((t => { const e = t[0], i = t[1]; if (Array.isArray(i)) { const t = document.createElement("optgroup"); t.label = e, t.disabled = !1, s.appendChild(t), i.forEach((e => n(t, e[1], e[0]))) } else n(s, i, e) })), s.focus() }, radio: (t, e, i) => { const s = tt(t, x.radio); e.forEach((t => { const e = t[0], n = t[1], o = document.createElement("input"), a = document.createElement("label"); o.type = "radio", o.name = x.radio, o.value = e, ve(e, i.inputValue) && (o.checked = !0); const r = document.createElement("span"); U(r, n), r.className = x.label, a.appendChild(o), a.appendChild(r), s.appendChild(a) })); const n = s.querySelectorAll("input"); n.length && n[0].focus() } }, we = t => { const e = []; return "undefined" != typeof Map && t instanceof Map ? t.forEach(((t, i) => { let s = t; "object" == typeof s && (s = we(s)), e.push([i, s]) })) : Object.keys(t).forEach((i => { let s = t[i]; "object" == typeof s && (s = we(s)), e.push([i, s]) })), e }, ve = (t, e) => e && e.toString() === t.toString(); function xe() { const t = kt.innerParams.get(this); if (!t) return; const e = kt.domCache.get(this); st(e.loader), $() ? t.icon && it(S()) : ke(e), J([e.popup, e.actions], x.loading), e.popup.removeAttribute("aria-busy"), e.popup.removeAttribute("data-loading"), e.confirmButton.disabled = !1, e.denyButton.disabled = !1, e.cancelButton.disabled = !1 } const ke = t => { const e = t.popup.getElementsByClassName(t.loader.getAttribute("data-button-to-replace")); e.length ? it(e[0], "inline-block") : !at(I()) && !at(B()) && !at(z()) && st(t.actions) }; var Ee = { swalPromiseResolve: new WeakMap, swalPromiseReject: new WeakMap }; const Ce = () => I() && I().click(), Ae = t => { t.keydownTarget && t.keydownHandlerAdded && (t.keydownTarget.removeEventListener("keydown", t.keydownHandler, { capture: t.keydownListenerCapture }), t.keydownHandlerAdded = !1) }, Me = (t, e, i) => { const s = H(); if (s.length) return (e += i) === s.length ? e = 0 : -1 === e && (e = s.length - 1), s[e].focus(); M().focus() }, Se = ["ArrowRight", "ArrowDown"], Oe = ["ArrowLeft", "ArrowUp"], Pe = (t, e, i) => { const s = kt.innerParams.get(t); s && (e.isComposing || 229 === e.keyCode || (s.stopKeydownPropagation && e.stopPropagation(), "Enter" === e.key ? Te(t, e, s) : "Tab" === e.key ? Le(e, s) : [...Se, ...Oe].includes(e.key) ? De(e.key) : "Escape" === e.key && Ie(e, s, i))) }, Te = (t, e, i) => { if (r(i.allowEnterKey) && e.target && t.getInput() && e.target.outerHTML === t.getInput().outerHTML) { if (["textarea", "file"].includes(i.input)) return; Ce(), e.preventDefault() } }, Le = (t, e) => { const i = t.target, s = H(); let n = -1; for (let t = 0; t < s.length; t++)if (i === s[t]) { n = t; break } t.shiftKey ? Me(0, n, -1) : Me(0, n, 1), t.stopPropagation(), t.preventDefault() }, De = t => { if (![I(), B(), z()].includes(document.activeElement)) return; const e = Se.includes(t) ? "nextElementSibling" : "previousElementSibling"; let i = document.activeElement; for (let t = 0; t < j().children.length; t++) { if (i = i[e], !i) return; if (at(i) && i instanceof HTMLButtonElement) break } i instanceof HTMLButtonElement && i.focus() }, Ie = (t, e, i) => { r(e.allowEscapeKey) && (t.preventDefault(), i(Vt.esc)) }; function Be(t, e, i, s) { $() ? He(t, s) : (ut(i).then((() => He(t, s))), Ae(dt)), /^((?!chrome|android).)*safari/i.test(navigator.userAgent) ? (e.setAttribute("style", "display:none !important"), e.removeAttribute("class"), e.innerHTML = "") : e.remove(), W() && (null !== q.previousBodyPadding && (document.body.style.paddingRight = "".concat(q.previousBodyPadding, "px"), q.previousBodyPadding = null), (() => { if (Y(document.body, x.iosfix)) { const t = parseInt(document.body.style.top, 10); J(document.body, x.iosfix), document.body.style.top = "", document.body.scrollTop = -1 * t } })(), Ht()), J([document.documentElement, document.body], [x.shown, x["height-auto"], x["no-backdrop"], x["toast-shown"]]) } function Re(t) { t = Ne(t); const e = Ee.swalPromiseResolve.get(this), i = ze(this); this.isAwaitingPromise() ? t.isDismissed || (je(this), e(t)) : i && e(t) } const ze = t => { const e = M(); if (!e) return !1; const i = kt.innerParams.get(t); if (!i || Y(e, i.hideClass.popup)) return !1; J(e, i.showClass.popup), G(e, i.hideClass.popup); const s = E(); return J(s, i.showClass.backdrop), G(s, i.hideClass.backdrop), Fe(t, e, i), !0 }; const je = t => { t.isAwaitingPromise() && (kt.awaitingPromise.delete(t), kt.innerParams.get(t) || t._destroy()) }, Ne = t => void 0 === t ? { isConfirmed: !1, isDenied: !1, isDismissed: !0 } : Object.assign({ isConfirmed: !1, isDenied: !1, isDismissed: !1 }, t), Fe = (t, e, i) => { const s = E(), n = yt && lt(e); "function" == typeof i.willClose && i.willClose(e), n ? Ve(t, e, s, i.returnFocus, i.didClose) : Be(t, s, i.returnFocus, i.didClose) }, Ve = (t, e, i, s, n) => { dt.swalCloseEventFinishedCallback = Be.bind(null, t, i, s, n), e.addEventListener(yt, (function (t) { t.target === e && (dt.swalCloseEventFinishedCallback(), delete dt.swalCloseEventFinishedCallback) })) }, He = (t, e) => { setTimeout((() => { "function" == typeof e && e.bind(t.params)(), t._destroy() })) }; function We(t, e, i) { const s = kt.domCache.get(t); e.forEach((t => { s[t].disabled = i })) } function $e(t, e) { if (!t) return !1; if ("radio" === t.type) { const i = t.parentNode.parentNode.querySelectorAll("input"); for (let t = 0; t < i.length; t++)i[t].disabled = e } else t.disabled = e } const qe = t => { const e = {}; return Object.keys(t).forEach((i => { m(i) ? e[i] = t[i] : s('Invalid parameter to update: "'.concat(i, '". Updatable params are listed here: https://github.com/sweetalert2/sweetalert2/blob/master/src/utils/params.js\n\nIf you think this parameter should be updatable, request it here: https://github.com/sweetalert2/sweetalert2/issues/new?template=02_feature_request.md')) })), e }; const Ue = t => { Ye(t), delete t.params, delete dt.keydownHandler, delete dt.keydownTarget, delete dt.currentInstance }, Ye = t => { t.isAwaitingPromise() ? (Xe(kt, t), kt.awaitingPromise.set(t, !0)) : (Xe(Ee, t), Xe(kt, t)) }, Xe = (t, e) => { for (const i in t) t[i].delete(e) }; var Ke = Object.freeze({ hideLoading: xe, disableLoading: xe, getInput: function (t) { const e = kt.innerParams.get(t || this), i = kt.domCache.get(t || this); return i ? K(i.popup, e.input) : null }, close: Re, isAwaitingPromise: function () { return !!kt.awaitingPromise.get(this) }, rejectPromise: function (t) { const e = Ee.swalPromiseReject.get(this); je(this), e && e(t) }, handleAwaitingPromise: je, closePopup: Re, closeModal: Re, closeToast: Re, enableButtons: function () { We(this, ["confirmButton", "denyButton", "cancelButton"], !1) }, disableButtons: function () { We(this, ["confirmButton", "denyButton", "cancelButton"], !0) }, enableInput: function () { return $e(this.getInput(), !1) }, disableInput: function () { return $e(this.getInput(), !0) }, showValidationMessage: function (t) { const e = kt.domCache.get(this), i = kt.innerParams.get(this); U(e.validationMessage, t), e.validationMessage.className = x["validation-message"], i.customClass && i.customClass.validationMessage && G(e.validationMessage, i.customClass.validationMessage), it(e.validationMessage); const s = this.getInput(); s && (s.setAttribute("aria-invalid", !0), s.setAttribute("aria-describedby", x["validation-message"]), Z(s), G(s, x.inputerror)) }, resetValidationMessage: function () { const t = kt.domCache.get(this); t.validationMessage && st(t.validationMessage); const e = this.getInput(); e && (e.removeAttribute("aria-invalid"), e.removeAttribute("aria-describedby"), J(e, x.inputerror)) }, getProgressSteps: function () { return kt.domCache.get(this).progressSteps }, update: function (t) { const e = M(), i = kt.innerParams.get(this); if (!e || Y(e, i.hideClass.popup)) return s("You're trying to update the closed or closing popup, that won't work. Use the update() method in preConfirm parameter or show a new popup."); const n = qe(t), o = Object.assign({}, i, n); Ft(this, o), kt.innerParams.set(this, o), Object.defineProperties(this, { params: { value: Object.assign({}, this.params, t), writable: !1, enumerable: !0 } }) }, _destroy: function () { const t = kt.domCache.get(this), e = kt.innerParams.get(this); e ? (t.popup && dt.swalCloseEventFinishedCallback && (dt.swalCloseEventFinishedCallback(), delete dt.swalCloseEventFinishedCallback), dt.deferDisposalTimer && (clearTimeout(dt.deferDisposalTimer), delete dt.deferDisposalTimer), "function" == typeof e.didDestroy && e.didDestroy(), Ue(this)) : Ye(this) } }); const Ze = (t, i) => { const s = kt.innerParams.get(t); if (!s.input) return n('The "input" parameter is needed to be set when using returnInputValueOn'.concat(e(i))); const o = ((t, e) => { const i = t.getInput(); if (!i) return null; switch (e.input) { case "checkbox": return fe(i); case "radio": return ge(i); case "file": return me(i); default: return e.inputAutoTrim ? i.value.trim() : i.value } })(t, s); s.inputValidator ? Qe(t, o, i) : t.getInput().checkValidity() ? "deny" === i ? Ge(t, o) : ei(t, o) : (t.enableButtons(), t.showValidationMessage(s.validationMessage)) }, Qe = (t, e, i) => { const s = kt.innerParams.get(t); t.disableInput(), Promise.resolve().then((() => c(s.inputValidator(e, s.validationMessage)))).then((s => { t.enableButtons(), t.enableInput(), s ? t.showValidationMessage(s) : "deny" === i ? Ge(t, e) : ei(t, e) })) }, Ge = (t, e) => { const i = kt.innerParams.get(t || void 0); i.showLoaderOnDeny && ue(B()), i.preDeny ? (kt.awaitingPromise.set(t || void 0, !0), Promise.resolve().then((() => c(i.preDeny(e, i.validationMessage)))).then((i => { !1 === i ? (t.hideLoading(), je(t)) : t.closePopup({ isDenied: !0, value: void 0 === i ? e : i }) })).catch((e => ti(t || void 0, e)))) : t.closePopup({ isDenied: !0, value: e }) }, Je = (t, e) => { t.closePopup({ isConfirmed: !0, value: e }) }, ti = (t, e) => { t.rejectPromise(e) }, ei = (t, e) => { const i = kt.innerParams.get(t || void 0); i.showLoaderOnConfirm && ue(), i.preConfirm ? (t.resetValidationMessage(), kt.awaitingPromise.set(t || void 0, !0), Promise.resolve().then((() => c(i.preConfirm(e, i.validationMessage)))).then((i => { at(D()) || !1 === i ? (t.hideLoading(), je(t)) : Je(t, void 0 === i ? e : i) })).catch((e => ti(t || void 0, e)))) : Je(t, e) }, ii = (t, e, i) => { e.popup.onclick = () => { const e = kt.innerParams.get(t); e && (si(e) || e.timer || e.input) || i(Vt.close) } }, si = t => t.showConfirmButton || t.showDenyButton || t.showCancelButton || t.showCloseButton; let ni = !1; const oi = t => { t.popup.onmousedown = () => { t.container.onmouseup = function (e) { t.container.onmouseup = void 0, e.target === t.container && (ni = !0) } } }, ai = t => { t.container.onmousedown = () => { t.popup.onmouseup = function (e) { t.popup.onmouseup = void 0, (e.target === t.popup || t.popup.contains(e.target)) && (ni = !0) } } }, ri = (t, e, i) => { e.container.onclick = s => { const n = kt.innerParams.get(t); ni ? ni = !1 : s.target === e.container && r(n.allowOutsideClick) && i(Vt.backdrop) } }, li = t => t instanceof Element || (t => "object" == typeof t && t.jquery)(t); const ci = () => { if (dt.timeout) return (() => { const t = F(), e = parseInt(window.getComputedStyle(t).width); t.style.removeProperty("transition"), t.style.width = "100%"; const i = e / parseInt(window.getComputedStyle(t).width) * 100; t.style.removeProperty("transition"), t.style.width = "".concat(i, "%") })(), dt.timeout.stop() }, hi = () => { if (dt.timeout) { const t = dt.timeout.start(); return ct(t), t } }; let di = !1; const ui = {}; const pi = t => { for (let e = t.target; e && e !== document; e = e.parentNode)for (const t in ui) { const i = e.getAttribute(t); if (i) return void ui[t].fire({ template: i }) } }; var fi = Object.freeze({ isValidParameter: g, isUpdatableParameter: m, isDeprecatedParameter: b, argsToParams: t => { const e = {}; return "object" != typeof t[0] || li(t[0]) ? ["title", "html", "icon"].forEach(((i, s) => { const o = t[s]; "string" == typeof o || li(o) ? e[i] = o : void 0 !== o && n("Unexpected type of ".concat(i, '! Expected "string" or "Element", got ').concat(typeof o)) })) : Object.assign(e, t[0]), e }, isVisible: () => at(M()), clickConfirm: Ce, clickDeny: () => B() && B().click(), clickCancel: () => z() && z().click(), getContainer: E, getPopup: M, getTitle: O, getHtmlContainer: P, getImage: T, getIcon: S, getInputLabel: () => A(x["input-label"]), getCloseButton: V, getActions: j, getConfirmButton: I, getDenyButton: B, getCancelButton: z, getLoader: R, getFooter: N, getTimerProgressBar: F, getFocusableElements: H, getValidationMessage: D, isLoading: () => M().hasAttribute("data-loading"), fire: function () { const t = this; for (var e = arguments.length, i = new Array(e), s = 0; s < e; s++)i[s] = arguments[s]; return new t(...i) }, mixin: function (t) { return class extends (this) { _main(e, i) { return super._main(e, Object.assign({}, t, i)) } } }, showLoading: ue, enableLoading: ue, getTimerLeft: () => dt.timeout && dt.timeout.getTimerLeft(), stopTimer: ci, resumeTimer: hi, toggleTimer: () => { const t = dt.timeout; return t && (t.running ? ci() : hi()) }, increaseTimer: t => { if (dt.timeout) { const e = dt.timeout.increase(t); return ct(e, !0), e } }, isTimerRunning: () => dt.timeout && dt.timeout.isRunning(), bindClickHandler: function () { ui[arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "data-swal-template"] = this, di || (document.body.addEventListener("click", pi), di = !0) } }); let gi; class mi { constructor() { if ("undefined" == typeof window) return; gi = this; for (var t = arguments.length, e = new Array(t), i = 0; i < t; i++)e[i] = arguments[i]; const s = Object.freeze(this.constructor.argsToParams(e)); Object.defineProperties(this, { params: { value: s, writable: !1, enumerable: !0, configurable: !0 } }); const n = this._main(this.params); kt.promise.set(this, n) } _main(t) { let e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}; (t => { !t.backdrop && t.allowOutsideClick && s('"allowOutsideClick" parameter requires `backdrop` parameter to be set to `true`'); for (const e in t) _(e), t.toast && y(e), w(e) })(Object.assign({}, e, t)), dt.currentInstance && (dt.currentInstance._destroy(), W() && Ht()), dt.currentInstance = this; const i = _i(t, e); Jt(i), Object.freeze(i), dt.timeout && (dt.timeout.stop(), delete dt.timeout), clearTimeout(dt.restoreFocusTimeout); const n = yi(this); return Ft(this, i), kt.innerParams.set(this, i), bi(this, n, i) } then(t) { return kt.promise.get(this).then(t) } finally(t) { return kt.promise.get(this).finally(t) } } const bi = (t, e, i) => new Promise(((s, n) => { const o = e => { t.closePopup({ isDismissed: !0, dismiss: e }) }; Ee.swalPromiseResolve.set(t, s), Ee.swalPromiseReject.set(t, n), e.confirmButton.onclick = () => (t => { const e = kt.innerParams.get(t); t.disableButtons(), e.input ? Ze(t, "confirm") : ei(t, !0) })(t), e.denyButton.onclick = () => (t => { const e = kt.innerParams.get(t); t.disableButtons(), e.returnInputValueOnDeny ? Ze(t, "deny") : Ge(t, !1) })(t), e.cancelButton.onclick = () => ((t, e) => { t.disableButtons(), e(Vt.cancel) })(t, o), e.closeButton.onclick = () => o(Vt.close), ((t, e, i) => { kt.innerParams.get(t).toast ? ii(t, e, i) : (oi(e), ai(e), ri(t, e, i)) })(t, e, o), ((t, e, i, s) => { Ae(e), i.toast || (e.keydownHandler = e => Pe(t, e, s), e.keydownTarget = i.keydownListenerCapture ? window : M(), e.keydownListenerCapture = i.keydownListenerCapture, e.keydownTarget.addEventListener("keydown", e.keydownHandler, { capture: e.keydownListenerCapture }), e.keydownHandlerAdded = !0) })(t, dt, i, o), ((t, e) => { "select" === e.input || "radio" === e.input ? be(t, e) : ["text", "email", "number", "tel", "textarea"].includes(e.input) && (l(e.inputValue) || h(e.inputValue)) && (ue(I()), _e(t, e)) })(t, i), re(i), wi(dt, i, o), vi(e, i), setTimeout((() => { e.container.scrollTop = 0 })) })), _i = (t, e) => { const i = (t => { const e = "string" == typeof t.template ? document.querySelector(t.template) : t.template; if (!e) return {}; const i = e.content; return Zt(i), Object.assign($t(i), qt(i), Ut(i), Yt(i), Xt(i), Kt(i, Wt)) })(t), s = Object.assign({}, d, e, i, t); return s.showClass = Object.assign({}, d.showClass, s.showClass), s.hideClass = Object.assign({}, d.hideClass, s.hideClass), s }, yi = t => { const e = { popup: M(), container: E(), actions: j(), confirmButton: I(), denyButton: B(), cancelButton: z(), loader: R(), closeButton: V(), validationMessage: D(), progressSteps: L() }; return kt.domCache.set(t, e), e }, wi = (t, e, i) => { const s = F(); st(s), e.timer && (t.timeout = new te((() => { i("timer"), delete t.timeout }), e.timer), e.timerProgressBar && (it(s), X(s, e, "timerProgressBar"), setTimeout((() => { t.timeout && t.timeout.running && ct(e.timer) })))) }, vi = (t, e) => { if (!e.toast) return r(e.allowEnterKey) ? void (xi(t, e) || Me(0, -1, 1)) : ki() }, xi = (t, e) => e.focusDeny && at(t.denyButton) ? (t.denyButton.focus(), !0) : e.focusCancel && at(t.cancelButton) ? (t.cancelButton.focus(), !0) : !(!e.focusConfirm || !at(t.confirmButton) || (t.confirmButton.focus(), 0)), ki = () => { document.activeElement instanceof HTMLElement && "function" == typeof document.activeElement.blur && document.activeElement.blur() }; Object.assign(mi.prototype, Ke), Object.assign(mi, fi), Object.keys(Ke).forEach((t => { mi[t] = function () { if (gi) return gi[t](...arguments) } })), mi.DismissReason = Vt, mi.version = "11.4.8"; const Ei = mi; return Ei.default = Ei, Ei }(), void 0 !== this && this.Sweetalert2 && (this.swal = this.sweetAlert = this.Swal = this.SweetAlert = this.Sweetalert2), "undefined" != typeof document && function (t, e) { var i = t.createElement("style"); if (t.getElementsByTagName("head")[0].appendChild(i), i.styleSheet) i.styleSheet.disabled || (i.styleSheet.cssText = e); else try { i.innerHTML = e } catch (t) { i.innerText = e } }(document, '.swal2-popup.swal2-toast{box-sizing:border-box;grid-column:1/4!important;grid-row:1/4!important;grid-template-columns:1fr 99fr 1fr;padding:1em;overflow-y:hidden;background:#fff;box-shadow:0 0 1px rgba(0,0,0,.075),0 1px 2px rgba(0,0,0,.075),1px 2px 4px rgba(0,0,0,.075),1px 3px 8px rgba(0,0,0,.075),2px 4px 16px rgba(0,0,0,.075);pointer-events:all}.swal2-popup.swal2-toast>*{grid-column:2}.swal2-popup.swal2-toast .swal2-title{margin:.5em 1em;padding:0;font-size:1em;text-align:initial}.swal2-popup.swal2-toast .swal2-loading{justify-content:center}.swal2-popup.swal2-toast .swal2-input{height:2em;margin:.5em;font-size:1em}.swal2-popup.swal2-toast .swal2-validation-message{font-size:1em}.swal2-popup.swal2-toast .swal2-footer{margin:.5em 0 0;padding:.5em 0 0;font-size:.8em}.swal2-popup.swal2-toast .swal2-close{grid-column:3/3;grid-row:1/99;align-self:center;width:.8em;height:.8em;margin:0;font-size:2em}.swal2-popup.swal2-toast .swal2-html-container{margin:.5em 1em;padding:0;font-size:1em;text-align:initial}.swal2-popup.swal2-toast .swal2-html-container:empty{padding:0}.swal2-popup.swal2-toast .swal2-loader{grid-column:1;grid-row:1/99;align-self:center;width:2em;height:2em;margin:.25em}.swal2-popup.swal2-toast .swal2-icon{grid-column:1;grid-row:1/99;align-self:center;width:2em;min-width:2em;height:2em;margin:0 .5em 0 0}.swal2-popup.swal2-toast .swal2-icon .swal2-icon-content{display:flex;align-items:center;font-size:1.8em;font-weight:700}.swal2-popup.swal2-toast .swal2-icon.swal2-success .swal2-success-ring{width:2em;height:2em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line]{top:.875em;width:1.375em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=left]{left:.3125em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=right]{right:.3125em}.swal2-popup.swal2-toast .swal2-actions{justify-content:flex-start;height:auto;margin:0;margin-top:.5em;padding:0 .5em}.swal2-popup.swal2-toast .swal2-styled{margin:.25em .5em;padding:.4em .6em;font-size:1em}.swal2-popup.swal2-toast .swal2-success{border-color:#a5dc86}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line]{position:absolute;width:1.6em;height:3em;transform:rotate(45deg);border-radius:50%}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line][class$=left]{top:-.8em;left:-.5em;transform:rotate(-45deg);transform-origin:2em 2em;border-radius:4em 0 0 4em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line][class$=right]{top:-.25em;left:.9375em;transform-origin:0 1.5em;border-radius:0 4em 4em 0}.swal2-popup.swal2-toast .swal2-success .swal2-success-ring{width:2em;height:2em}.swal2-popup.swal2-toast .swal2-success .swal2-success-fix{top:0;left:.4375em;width:.4375em;height:2.6875em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line]{height:.3125em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line][class$=tip]{top:1.125em;left:.1875em;width:.75em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line][class$=long]{top:.9375em;right:.1875em;width:1.375em}.swal2-popup.swal2-toast .swal2-success.swal2-icon-show .swal2-success-line-tip{-webkit-animation:swal2-toast-animate-success-line-tip .75s;animation:swal2-toast-animate-success-line-tip .75s}.swal2-popup.swal2-toast .swal2-success.swal2-icon-show .swal2-success-line-long{-webkit-animation:swal2-toast-animate-success-line-long .75s;animation:swal2-toast-animate-success-line-long .75s}.swal2-popup.swal2-toast.swal2-show{-webkit-animation:swal2-toast-show .5s;animation:swal2-toast-show .5s}.swal2-popup.swal2-toast.swal2-hide{-webkit-animation:swal2-toast-hide .1s forwards;animation:swal2-toast-hide .1s forwards}.swal2-container{display:grid;position:fixed;z-index:1060;top:0;right:0;bottom:0;left:0;box-sizing:border-box;grid-template-areas:"top-start     top            top-end" "center-start  center         center-end" "bottom-start  bottom-center  bottom-end";grid-template-rows:minmax(-webkit-min-content,auto) minmax(-webkit-min-content,auto) minmax(-webkit-min-content,auto);grid-template-rows:minmax(min-content,auto) minmax(min-content,auto) minmax(min-content,auto);height:100%;padding:.625em;overflow-x:hidden;transition:background-color .1s;-webkit-overflow-scrolling:touch}.swal2-container.swal2-backdrop-show,.swal2-container.swal2-noanimation{background:rgba(0,0,0,.4)}.swal2-container.swal2-backdrop-hide{background:0 0!important}.swal2-container.swal2-bottom-start,.swal2-container.swal2-center-start,.swal2-container.swal2-top-start{grid-template-columns:minmax(0,1fr) auto auto}.swal2-container.swal2-bottom,.swal2-container.swal2-center,.swal2-container.swal2-top{grid-template-columns:auto minmax(0,1fr) auto}.swal2-container.swal2-bottom-end,.swal2-container.swal2-center-end,.swal2-container.swal2-top-end{grid-template-columns:auto auto minmax(0,1fr)}.swal2-container.swal2-top-start>.swal2-popup{align-self:start}.swal2-container.swal2-top>.swal2-popup{grid-column:2;align-self:start;justify-self:center}.swal2-container.swal2-top-end>.swal2-popup,.swal2-container.swal2-top-right>.swal2-popup{grid-column:3;align-self:start;justify-self:end}.swal2-container.swal2-center-left>.swal2-popup,.swal2-container.swal2-center-start>.swal2-popup{grid-row:2;align-self:center}.swal2-container.swal2-center>.swal2-popup{grid-column:2;grid-row:2;align-self:center;justify-self:center}.swal2-container.swal2-center-end>.swal2-popup,.swal2-container.swal2-center-right>.swal2-popup{grid-column:3;grid-row:2;align-self:center;justify-self:end}.swal2-container.swal2-bottom-left>.swal2-popup,.swal2-container.swal2-bottom-start>.swal2-popup{grid-column:1;grid-row:3;align-self:end}.swal2-container.swal2-bottom>.swal2-popup{grid-column:2;grid-row:3;justify-self:center;align-self:end}.swal2-container.swal2-bottom-end>.swal2-popup,.swal2-container.swal2-bottom-right>.swal2-popup{grid-column:3;grid-row:3;align-self:end;justify-self:end}.swal2-container.swal2-grow-fullscreen>.swal2-popup,.swal2-container.swal2-grow-row>.swal2-popup{grid-column:1/4;width:100%}.swal2-container.swal2-grow-column>.swal2-popup,.swal2-container.swal2-grow-fullscreen>.swal2-popup{grid-row:1/4;align-self:stretch}.swal2-container.swal2-no-transition{transition:none!important}.swal2-popup{display:none;position:relative;box-sizing:border-box;grid-template-columns:minmax(0,100%);width:32em;max-width:100%;padding:0 0 1.25em;border:none;border-radius:5px;background:#fff;color:#545454;font-family:inherit;font-size:1rem}.swal2-popup:focus{outline:0}.swal2-popup.swal2-loading{overflow-y:hidden}.swal2-title{position:relative;max-width:100%;margin:0;padding:.8em 1em 0;color:inherit;font-size:1.875em;font-weight:600;text-align:center;text-transform:none;word-wrap:break-word}.swal2-actions{display:flex;z-index:1;box-sizing:border-box;flex-wrap:wrap;align-items:center;justify-content:center;width:auto;margin:1.25em auto 0;padding:0}.swal2-actions:not(.swal2-loading) .swal2-styled[disabled]{opacity:.4}.swal2-actions:not(.swal2-loading) .swal2-styled:hover{background-image:linear-gradient(rgba(0,0,0,.1),rgba(0,0,0,.1))}.swal2-actions:not(.swal2-loading) .swal2-styled:active{background-image:linear-gradient(rgba(0,0,0,.2),rgba(0,0,0,.2))}.swal2-loader{display:none;align-items:center;justify-content:center;width:2.2em;height:2.2em;margin:0 1.875em;-webkit-animation:swal2-rotate-loading 1.5s linear 0s infinite normal;animation:swal2-rotate-loading 1.5s linear 0s infinite normal;border-width:.25em;border-style:solid;border-radius:100%;border-color:#2778c4 transparent #2778c4 transparent}.swal2-styled{margin:.3125em;padding:.625em 1.1em;transition:box-shadow .1s;box-shadow:0 0 0 3px transparent;font-weight:500}.swal2-styled:not([disabled]){cursor:pointer}.swal2-styled.swal2-confirm{border:0;border-radius:.25em;background:initial;background-color:#7066e0;color:#fff;font-size:1em}.swal2-styled.swal2-confirm:focus{box-shadow:0 0 0 3px rgba(112,102,224,.5)}.swal2-styled.swal2-deny{border:0;border-radius:.25em;background:initial;background-color:#dc3741;color:#fff;font-size:1em}.swal2-styled.swal2-deny:focus{box-shadow:0 0 0 3px rgba(220,55,65,.5)}.swal2-styled.swal2-cancel{border:0;border-radius:.25em;background:initial;background-color:#6e7881;color:#fff;font-size:1em}.swal2-styled.swal2-cancel:focus{box-shadow:0 0 0 3px rgba(110,120,129,.5)}.swal2-styled.swal2-default-outline:focus{box-shadow:0 0 0 3px rgba(100,150,200,.5)}.swal2-styled:focus{outline:0}.swal2-styled::-moz-focus-inner{border:0}.swal2-footer{justify-content:center;margin:1em 0 0;padding:1em 1em 0;border-top:1px solid #eee;color:inherit;font-size:1em}.swal2-timer-progress-bar-container{position:absolute;right:0;bottom:0;left:0;grid-column:auto!important;overflow:hidden;border-bottom-right-radius:5px;border-bottom-left-radius:5px}.swal2-timer-progress-bar{width:100%;height:.25em;background:rgba(0,0,0,.2)}.swal2-image{max-width:100%;margin:2em auto 1em}.swal2-close{z-index:2;align-items:center;justify-content:center;width:1.2em;height:1.2em;margin-top:0;margin-right:0;margin-bottom:-1.2em;padding:0;overflow:hidden;transition:color .1s,box-shadow .1s;border:none;border-radius:5px;background:0 0;color:#ccc;font-family:serif;font-family:monospace;font-size:2.5em;cursor:pointer;justify-self:end}.swal2-close:hover{transform:none;background:0 0;color:#f27474}.swal2-close:focus{outline:0;box-shadow:inset 0 0 0 3px rgba(100,150,200,.5)}.swal2-close::-moz-focus-inner{border:0}.swal2-html-container{z-index:1;justify-content:center;margin:1em 1.6em .3em;padding:0;overflow:auto;color:inherit;font-size:1.125em;font-weight:400;line-height:normal;text-align:center;word-wrap:break-word;word-break:break-word}.swal2-checkbox,.swal2-file,.swal2-input,.swal2-radio,.swal2-select,.swal2-textarea{margin:1em 2em 3px}.swal2-file,.swal2-input,.swal2-textarea{box-sizing:border-box;width:auto;transition:border-color .1s,box-shadow .1s;border:1px solid #d9d9d9;border-radius:.1875em;background:inherit;box-shadow:inset 0 1px 1px rgba(0,0,0,.06),0 0 0 3px transparent;color:inherit;font-size:1.125em}.swal2-file.swal2-inputerror,.swal2-input.swal2-inputerror,.swal2-textarea.swal2-inputerror{border-color:#f27474!important;box-shadow:0 0 2px #f27474!important}.swal2-file:focus,.swal2-input:focus,.swal2-textarea:focus{border:1px solid #b4dbed;outline:0;box-shadow:inset 0 1px 1px rgba(0,0,0,.06),0 0 0 3px rgba(100,150,200,.5)}.swal2-file::-moz-placeholder,.swal2-input::-moz-placeholder,.swal2-textarea::-moz-placeholder{color:#ccc}.swal2-file:-ms-input-placeholder,.swal2-input:-ms-input-placeholder,.swal2-textarea:-ms-input-placeholder{color:#ccc}.swal2-file::placeholder,.swal2-input::placeholder,.swal2-textarea::placeholder{color:#ccc}.swal2-range{margin:1em 2em 3px;background:#fff}.swal2-range input{width:80%}.swal2-range output{width:20%;color:inherit;font-weight:600;text-align:center}.swal2-range input,.swal2-range output{height:2.625em;padding:0;font-size:1.125em;line-height:2.625em}.swal2-input{height:2.625em;padding:0 .75em}.swal2-file{width:75%;margin-right:auto;margin-left:auto;background:inherit;font-size:1.125em}.swal2-textarea{height:6.75em;padding:.75em}.swal2-select{min-width:50%;max-width:100%;padding:.375em .625em;background:inherit;color:inherit;font-size:1.125em}.swal2-checkbox,.swal2-radio{align-items:center;justify-content:center;background:#fff;color:inherit}.swal2-checkbox label,.swal2-radio label{margin:0 .6em;font-size:1.125em}.swal2-checkbox input,.swal2-radio input{flex-shrink:0;margin:0 .4em}.swal2-input-label{display:flex;justify-content:center;margin:1em auto 0}.swal2-validation-message{align-items:center;justify-content:center;margin:1em 0 0;padding:.625em;overflow:hidden;background:#f0f0f0;color:#666;font-size:1em;font-weight:300}.swal2-validation-message::before{content:"!";display:inline-block;width:1.5em;min-width:1.5em;height:1.5em;margin:0 .625em;border-radius:50%;background-color:#f27474;color:#fff;font-weight:600;line-height:1.5em;text-align:center}.swal2-icon{position:relative;box-sizing:content-box;justify-content:center;width:5em;height:5em;margin:2.5em auto .6em;border:.25em solid transparent;border-radius:50%;border-color:#000;font-family:inherit;line-height:5em;cursor:default;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.swal2-icon .swal2-icon-content{display:flex;align-items:center;font-size:3.75em}.swal2-icon.swal2-error{border-color:#f27474;color:#f27474}.swal2-icon.swal2-error .swal2-x-mark{position:relative;flex-grow:1}.swal2-icon.swal2-error [class^=swal2-x-mark-line]{display:block;position:absolute;top:2.3125em;width:2.9375em;height:.3125em;border-radius:.125em;background-color:#f27474}.swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=left]{left:1.0625em;transform:rotate(45deg)}.swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=right]{right:1em;transform:rotate(-45deg)}.swal2-icon.swal2-error.swal2-icon-show{-webkit-animation:swal2-animate-error-icon .5s;animation:swal2-animate-error-icon .5s}.swal2-icon.swal2-error.swal2-icon-show .swal2-x-mark{-webkit-animation:swal2-animate-error-x-mark .5s;animation:swal2-animate-error-x-mark .5s}.swal2-icon.swal2-warning{border-color:#facea8;color:#f8bb86}.swal2-icon.swal2-warning.swal2-icon-show{-webkit-animation:swal2-animate-error-icon .5s;animation:swal2-animate-error-icon .5s}.swal2-icon.swal2-warning.swal2-icon-show .swal2-icon-content{-webkit-animation:swal2-animate-i-mark .5s;animation:swal2-animate-i-mark .5s}.swal2-icon.swal2-info{border-color:#9de0f6;color:#3fc3ee}.swal2-icon.swal2-info.swal2-icon-show{-webkit-animation:swal2-animate-error-icon .5s;animation:swal2-animate-error-icon .5s}.swal2-icon.swal2-info.swal2-icon-show .swal2-icon-content{-webkit-animation:swal2-animate-i-mark .8s;animation:swal2-animate-i-mark .8s}.swal2-icon.swal2-question{border-color:#c9dae1;color:#87adbd}.swal2-icon.swal2-question.swal2-icon-show{-webkit-animation:swal2-animate-error-icon .5s;animation:swal2-animate-error-icon .5s}.swal2-icon.swal2-question.swal2-icon-show .swal2-icon-content{-webkit-animation:swal2-animate-question-mark .8s;animation:swal2-animate-question-mark .8s}.swal2-icon.swal2-success{border-color:#a5dc86;color:#a5dc86}.swal2-icon.swal2-success [class^=swal2-success-circular-line]{position:absolute;width:3.75em;height:7.5em;transform:rotate(45deg);border-radius:50%}.swal2-icon.swal2-success [class^=swal2-success-circular-line][class$=left]{top:-.4375em;left:-2.0635em;transform:rotate(-45deg);transform-origin:3.75em 3.75em;border-radius:7.5em 0 0 7.5em}.swal2-icon.swal2-success [class^=swal2-success-circular-line][class$=right]{top:-.6875em;left:1.875em;transform:rotate(-45deg);transform-origin:0 3.75em;border-radius:0 7.5em 7.5em 0}.swal2-icon.swal2-success .swal2-success-ring{position:absolute;z-index:2;top:-.25em;left:-.25em;box-sizing:content-box;width:100%;height:100%;border:.25em solid rgba(165,220,134,.3);border-radius:50%}.swal2-icon.swal2-success .swal2-success-fix{position:absolute;z-index:1;top:.5em;left:1.625em;width:.4375em;height:5.625em;transform:rotate(-45deg)}.swal2-icon.swal2-success [class^=swal2-success-line]{display:block;position:absolute;z-index:2;height:.3125em;border-radius:.125em;background-color:#a5dc86}.swal2-icon.swal2-success [class^=swal2-success-line][class$=tip]{top:2.875em;left:.8125em;width:1.5625em;transform:rotate(45deg)}.swal2-icon.swal2-success [class^=swal2-success-line][class$=long]{top:2.375em;right:.5em;width:2.9375em;transform:rotate(-45deg)}.swal2-icon.swal2-success.swal2-icon-show .swal2-success-line-tip{-webkit-animation:swal2-animate-success-line-tip .75s;animation:swal2-animate-success-line-tip .75s}.swal2-icon.swal2-success.swal2-icon-show .swal2-success-line-long{-webkit-animation:swal2-animate-success-line-long .75s;animation:swal2-animate-success-line-long .75s}.swal2-icon.swal2-success.swal2-icon-show .swal2-success-circular-line-right{-webkit-animation:swal2-rotate-success-circular-line 4.25s ease-in;animation:swal2-rotate-success-circular-line 4.25s ease-in}.swal2-progress-steps{flex-wrap:wrap;align-items:center;max-width:100%;margin:1.25em auto;padding:0;background:inherit;font-weight:600}.swal2-progress-steps li{display:inline-block;position:relative}.swal2-progress-steps .swal2-progress-step{z-index:20;flex-shrink:0;width:2em;height:2em;border-radius:2em;background:#2778c4;color:#fff;line-height:2em;text-align:center}.swal2-progress-steps .swal2-progress-step.swal2-active-progress-step{background:#2778c4}.swal2-progress-steps .swal2-progress-step.swal2-active-progress-step~.swal2-progress-step{background:#add8e6;color:#fff}.swal2-progress-steps .swal2-progress-step.swal2-active-progress-step~.swal2-progress-step-line{background:#add8e6}.swal2-progress-steps .swal2-progress-step-line{z-index:10;flex-shrink:0;width:2.5em;height:.4em;margin:0 -1px;background:#2778c4}[class^=swal2]{-webkit-tap-highlight-color:transparent}.swal2-show{-webkit-animation:swal2-show .3s;animation:swal2-show .3s}.swal2-hide{-webkit-animation:swal2-hide .15s forwards;animation:swal2-hide .15s forwards}.swal2-noanimation{transition:none}.swal2-scrollbar-measure{position:absolute;top:-9999px;width:50px;height:50px;overflow:scroll}.swal2-rtl .swal2-close{margin-right:initial;margin-left:0}.swal2-rtl .swal2-timer-progress-bar{right:0;left:auto}@-webkit-keyframes swal2-toast-show{0%{transform:translateY(-.625em) rotateZ(2deg)}33%{transform:translateY(0) rotateZ(-2deg)}66%{transform:translateY(.3125em) rotateZ(2deg)}100%{transform:translateY(0) rotateZ(0)}}@keyframes swal2-toast-show{0%{transform:translateY(-.625em) rotateZ(2deg)}33%{transform:translateY(0) rotateZ(-2deg)}66%{transform:translateY(.3125em) rotateZ(2deg)}100%{transform:translateY(0) rotateZ(0)}}@-webkit-keyframes swal2-toast-hide{100%{transform:rotateZ(1deg);opacity:0}}@keyframes swal2-toast-hide{100%{transform:rotateZ(1deg);opacity:0}}@-webkit-keyframes swal2-toast-animate-success-line-tip{0%{top:.5625em;left:.0625em;width:0}54%{top:.125em;left:.125em;width:0}70%{top:.625em;left:-.25em;width:1.625em}84%{top:1.0625em;left:.75em;width:.5em}100%{top:1.125em;left:.1875em;width:.75em}}@keyframes swal2-toast-animate-success-line-tip{0%{top:.5625em;left:.0625em;width:0}54%{top:.125em;left:.125em;width:0}70%{top:.625em;left:-.25em;width:1.625em}84%{top:1.0625em;left:.75em;width:.5em}100%{top:1.125em;left:.1875em;width:.75em}}@-webkit-keyframes swal2-toast-animate-success-line-long{0%{top:1.625em;right:1.375em;width:0}65%{top:1.25em;right:.9375em;width:0}84%{top:.9375em;right:0;width:1.125em}100%{top:.9375em;right:.1875em;width:1.375em}}@keyframes swal2-toast-animate-success-line-long{0%{top:1.625em;right:1.375em;width:0}65%{top:1.25em;right:.9375em;width:0}84%{top:.9375em;right:0;width:1.125em}100%{top:.9375em;right:.1875em;width:1.375em}}@-webkit-keyframes swal2-show{0%{transform:scale(.7)}45%{transform:scale(1.05)}80%{transform:scale(.95)}100%{transform:scale(1)}}@keyframes swal2-show{0%{transform:scale(.7)}45%{transform:scale(1.05)}80%{transform:scale(.95)}100%{transform:scale(1)}}@-webkit-keyframes swal2-hide{0%{transform:scale(1);opacity:1}100%{transform:scale(.5);opacity:0}}@keyframes swal2-hide{0%{transform:scale(1);opacity:1}100%{transform:scale(.5);opacity:0}}@-webkit-keyframes swal2-animate-success-line-tip{0%{top:1.1875em;left:.0625em;width:0}54%{top:1.0625em;left:.125em;width:0}70%{top:2.1875em;left:-.375em;width:3.125em}84%{top:3em;left:1.3125em;width:1.0625em}100%{top:2.8125em;left:.8125em;width:1.5625em}}@keyframes swal2-animate-success-line-tip{0%{top:1.1875em;left:.0625em;width:0}54%{top:1.0625em;left:.125em;width:0}70%{top:2.1875em;left:-.375em;width:3.125em}84%{top:3em;left:1.3125em;width:1.0625em}100%{top:2.8125em;left:.8125em;width:1.5625em}}@-webkit-keyframes swal2-animate-success-line-long{0%{top:3.375em;right:2.875em;width:0}65%{top:3.375em;right:2.875em;width:0}84%{top:2.1875em;right:0;width:3.4375em}100%{top:2.375em;right:.5em;width:2.9375em}}@keyframes swal2-animate-success-line-long{0%{top:3.375em;right:2.875em;width:0}65%{top:3.375em;right:2.875em;width:0}84%{top:2.1875em;right:0;width:3.4375em}100%{top:2.375em;right:.5em;width:2.9375em}}@-webkit-keyframes swal2-rotate-success-circular-line{0%{transform:rotate(-45deg)}5%{transform:rotate(-45deg)}12%{transform:rotate(-405deg)}100%{transform:rotate(-405deg)}}@keyframes swal2-rotate-success-circular-line{0%{transform:rotate(-45deg)}5%{transform:rotate(-45deg)}12%{transform:rotate(-405deg)}100%{transform:rotate(-405deg)}}@-webkit-keyframes swal2-animate-error-x-mark{0%{margin-top:1.625em;transform:scale(.4);opacity:0}50%{margin-top:1.625em;transform:scale(.4);opacity:0}80%{margin-top:-.375em;transform:scale(1.15)}100%{margin-top:0;transform:scale(1);opacity:1}}@keyframes swal2-animate-error-x-mark{0%{margin-top:1.625em;transform:scale(.4);opacity:0}50%{margin-top:1.625em;transform:scale(.4);opacity:0}80%{margin-top:-.375em;transform:scale(1.15)}100%{margin-top:0;transform:scale(1);opacity:1}}@-webkit-keyframes swal2-animate-error-icon{0%{transform:rotateX(100deg);opacity:0}100%{transform:rotateX(0);opacity:1}}@keyframes swal2-animate-error-icon{0%{transform:rotateX(100deg);opacity:0}100%{transform:rotateX(0);opacity:1}}@-webkit-keyframes swal2-rotate-loading{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}@keyframes swal2-rotate-loading{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}@-webkit-keyframes swal2-animate-question-mark{0%{transform:rotateY(-360deg)}100%{transform:rotateY(0)}}@keyframes swal2-animate-question-mark{0%{transform:rotateY(-360deg)}100%{transform:rotateY(0)}}@-webkit-keyframes swal2-animate-i-mark{0%{transform:rotateZ(45deg);opacity:0}25%{transform:rotateZ(-25deg);opacity:.4}50%{transform:rotateZ(15deg);opacity:.8}75%{transform:rotateZ(-5deg);opacity:1}100%{transform:rotateX(0);opacity:1}}@keyframes swal2-animate-i-mark{0%{transform:rotateZ(45deg);opacity:0}25%{transform:rotateZ(-25deg);opacity:.4}50%{transform:rotateZ(15deg);opacity:.8}75%{transform:rotateZ(-5deg);opacity:1}100%{transform:rotateX(0);opacity:1}}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown){overflow:hidden}body.swal2-height-auto{height:auto!important}body.swal2-no-backdrop .swal2-container{background-color:transparent!important;pointer-events:none}body.swal2-no-backdrop .swal2-container .swal2-popup{pointer-events:all}body.swal2-no-backdrop .swal2-container .swal2-modal{box-shadow:0 0 10px rgba(0,0,0,.4)}@media print{body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown){overflow-y:scroll!important}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown)>[aria-hidden=true]{display:none}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown) .swal2-container{position:static!important}}body.swal2-toast-shown .swal2-container{box-sizing:border-box;width:360px;max-width:100%;background-color:transparent;pointer-events:none}body.swal2-toast-shown .swal2-container.swal2-top{top:0;right:auto;bottom:auto;left:50%;transform:translateX(-50%)}body.swal2-toast-shown .swal2-container.swal2-top-end,body.swal2-toast-shown .swal2-container.swal2-top-right{top:0;right:0;bottom:auto;left:auto}body.swal2-toast-shown .swal2-container.swal2-top-left,body.swal2-toast-shown .swal2-container.swal2-top-start{top:0;right:auto;bottom:auto;left:0}body.swal2-toast-shown .swal2-container.swal2-center-left,body.swal2-toast-shown .swal2-container.swal2-center-start{top:50%;right:auto;bottom:auto;left:0;transform:translateY(-50%)}body.swal2-toast-shown .swal2-container.swal2-center{top:50%;right:auto;bottom:auto;left:50%;transform:translate(-50%,-50%)}body.swal2-toast-shown .swal2-container.swal2-center-end,body.swal2-toast-shown .swal2-container.swal2-center-right{top:50%;right:0;bottom:auto;left:auto;transform:translateY(-50%)}body.swal2-toast-shown .swal2-container.swal2-bottom-left,body.swal2-toast-shown .swal2-container.swal2-bottom-start{top:auto;right:auto;bottom:0;left:0}body.swal2-toast-shown .swal2-container.swal2-bottom{top:auto;right:auto;bottom:0;left:50%;transform:translateX(-50%)}body.swal2-toast-shown .swal2-container.swal2-bottom-end,body.swal2-toast-shown .swal2-container.swal2-bottom-right{top:auto;right:0;bottom:0;left:auto}') }, 641: () => { if (document.getElementById("impbuscar")) { const s = document.getElementById("impbuscar"), n = document.getElementById("resultados"), o = document.getElementById("btn_cerrar"), a = document.getElementById("resultados_busqueda"); var t = 0; function e() { if (n.classList.remove("invisible"), n.style.height = "auto", "" != s.value) { const t = a.dataset.url + s.value; console.log(t), fetch(t).then((t => t.json())).then((t => { console.log(t), t.length ? a.innerHTML = `\n                     <ul>\n                        ${t.map((t => `<li><a href="${t.link}">${t.title.rendered}</a></li>`)).join("")}\n                     </ul>` : a.innerHTML = "<h5>No se encontraron Películas</h5>" })).catch((t => console.log(t))) } else n.classList.add("invisible") } function i() { console.log("cerrar"), s.value = "", s.focus(), n.classList.add("invisible") } s.addEventListener("keyup", (function () { clearTimeout(t), t = setTimeout(e, 500) })), o.addEventListener("touchstart", i), o.addEventListener("click", i) } }, 357: () => { if (document.getElementById("main_navbar") && document.getElementById("hero-page")) { const t = document.getElementById("main_navbar"), e = document.getElementById("hero-page"), i = document.getElementById("logo"); new IntersectionObserver((function (e, s) { e.forEach((e => { e.isIntersecting ? (t.classList.remove("navbar-scroll"), i.classList.add("logo"), i.classList.remove("cambio"), i.classList.remove("bg-black")) : (t.classList.add("navbar-scroll"), i.classList.remove("logo"), i.classList.add("cambio"), i.classList.add("bg-black")) })) }), { rootMargin: "-70px 0px 0px 0px" }).observe(e) } if (document.getElementById("btnmenu")) { const t = document.getElementById("btnmenu"), e = document.getElementById("navbarSupportedContent"); t.addEventListener("touchstart", (function () { e.classList.toggle("bgmenumini") })) } } }, e = {}; function i(s) { var n = e[s]; if (void 0 !== n) return n.exports; var o = e[s] = { exports: {} }; return t[s].call(o.exports, o, o.exports, i), o.exports } i.n = t => { var e = t && t.__esModule ? () => t.default : () => t; return i.d(e, { a: e }), e }, i.d = (t, e) => { for (var s in e) i.o(e, s) && !i.o(t, s) && Object.defineProperty(t, s, { enumerable: !0, get: e[s] }) }, i.o = (t, e) => Object.prototype.hasOwnProperty.call(t, e), i.r = t => { "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(t, "__esModule", { value: !0 }) }, (() => { "use strict"; var t = {}; i.r(t), i.d(t, { afterMain: () => v, afterRead: () => _, afterWrite: () => E, applyStyles: () => T, arrow: () => K, auto: () => a, basePlacements: () => r, beforeMain: () => y, beforeRead: () => m, beforeWrite: () => x, bottom: () => s, clippingParents: () => h, computeStyles: () => J, createPopper: () => St, createPopperBase: () => Mt, createPopperLite: () => Ot, detectOverflow: () => ft, end: () => c, eventListeners: () => et, flip: () => gt, hide: () => _t, left: () => o, main: () => w, modifierPhases: () => C, offset: () => yt, placements: () => g, popper: () => u, popperGenerator: () => At, popperOffsets: () => wt, preventOverflow: () => vt, read: () => b, reference: () => p, right: () => n, start: () => l, top: () => e, variationPlacements: () => f, viewport: () => d, write: () => k }); var e = "top", s = "bottom", n = "right", o = "left", a = "auto", r = [e, s, n, o], l = "start", c = "end", h = "clippingParents", d = "viewport", u = "popper", p = "reference", f = r.reduce((function (t, e) { return t.concat([e + "-" + l, e + "-" + c]) }), []), g = [].concat(r, [a]).reduce((function (t, e) { return t.concat([e, e + "-" + l, e + "-" + c]) }), []), m = "beforeRead", b = "read", _ = "afterRead", y = "beforeMain", w = "main", v = "afterMain", x = "beforeWrite", k = "write", E = "afterWrite", C = [m, b, _, y, w, v, x, k, E]; function A(t) { return t ? (t.nodeName || "").toLowerCase() : null } function M(t) { if (null == t) return window; if ("[object Window]" !== t.toString()) { var e = t.ownerDocument; return e && e.defaultView || window } return t } function S(t) { return t instanceof M(t).Element || t instanceof Element } function O(t) { return t instanceof M(t).HTMLElement || t instanceof HTMLElement } function P(t) { return "undefined" != typeof ShadowRoot && (t instanceof M(t).ShadowRoot || t instanceof ShadowRoot) } const T = { name: "applyStyles", enabled: !0, phase: "write", fn: function (t) { var e = t.state; Object.keys(e.elements).forEach((function (t) { var i = e.styles[t] || {}, s = e.attributes[t] || {}, n = e.elements[t]; O(n) && A(n) && (Object.assign(n.style, i), Object.keys(s).forEach((function (t) { var e = s[t]; !1 === e ? n.removeAttribute(t) : n.setAttribute(t, !0 === e ? "" : e) }))) })) }, effect: function (t) { var e = t.state, i = { popper: { position: e.options.strategy, left: "0", top: "0", margin: "0" }, arrow: { position: "absolute" }, reference: {} }; return Object.assign(e.elements.popper.style, i.popper), e.styles = i, e.elements.arrow && Object.assign(e.elements.arrow.style, i.arrow), function () { Object.keys(e.elements).forEach((function (t) { var s = e.elements[t], n = e.attributes[t] || {}, o = Object.keys(e.styles.hasOwnProperty(t) ? e.styles[t] : i[t]).reduce((function (t, e) { return t[e] = "", t }), {}); O(s) && A(s) && (Object.assign(s.style, o), Object.keys(n).forEach((function (t) { s.removeAttribute(t) }))) })) } }, requires: ["computeStyles"] }; function L(t) { return t.split("-")[0] } var D = Math.max, I = Math.min, B = Math.round; function R(t, e) { void 0 === e && (e = !1); var i = t.getBoundingClientRect(), s = 1, n = 1; if (O(t) && e) { var o = t.offsetHeight, a = t.offsetWidth; a > 0 && (s = B(i.width) / a || 1), o > 0 && (n = B(i.height) / o || 1) } return { width: i.width / s, height: i.height / n, top: i.top / n, right: i.right / s, bottom: i.bottom / n, left: i.left / s, x: i.left / s, y: i.top / n } } function z(t) { var e = R(t), i = t.offsetWidth, s = t.offsetHeight; return Math.abs(e.width - i) <= 1 && (i = e.width), Math.abs(e.height - s) <= 1 && (s = e.height), { x: t.offsetLeft, y: t.offsetTop, width: i, height: s } } function j(t, e) { var i = e.getRootNode && e.getRootNode(); if (t.contains(e)) return !0; if (i && P(i)) { var s = e; do { if (s && t.isSameNode(s)) return !0; s = s.parentNode || s.host } while (s) } return !1 } function N(t) { return M(t).getComputedStyle(t) } function F(t) { return ["table", "td", "th"].indexOf(A(t)) >= 0 } function V(t) { return ((S(t) ? t.ownerDocument : t.document) || window.document).documentElement } function H(t) { return "html" === A(t) ? t : t.assignedSlot || t.parentNode || (P(t) ? t.host : null) || V(t) } function W(t) { return O(t) && "fixed" !== N(t).position ? t.offsetParent : null } function $(t) { for (var e = M(t), i = W(t); i && F(i) && "static" === N(i).position;)i = W(i); return i && ("html" === A(i) || "body" === A(i) && "static" === N(i).position) ? e : i || function (t) { var e = -1 !== navigator.userAgent.toLowerCase().indexOf("firefox"); if (-1 !== navigator.userAgent.indexOf("Trident") && O(t) && "fixed" === N(t).position) return null; var i = H(t); for (P(i) && (i = i.host); O(i) && ["html", "body"].indexOf(A(i)) < 0;) { var s = N(i); if ("none" !== s.transform || "none" !== s.perspective || "paint" === s.contain || -1 !== ["transform", "perspective"].indexOf(s.willChange) || e && "filter" === s.willChange || e && s.filter && "none" !== s.filter) return i; i = i.parentNode } return null }(t) || e } function q(t) { return ["top", "bottom"].indexOf(t) >= 0 ? "x" : "y" } function U(t, e, i) { return D(t, I(e, i)) } function Y(t) { return Object.assign({}, { top: 0, right: 0, bottom: 0, left: 0 }, t) } function X(t, e) { return e.reduce((function (e, i) { return e[i] = t, e }), {}) } const K = { name: "arrow", enabled: !0, phase: "main", fn: function (t) { var i, a = t.state, l = t.name, c = t.options, h = a.elements.arrow, d = a.modifiersData.popperOffsets, u = L(a.placement), p = q(u), f = [o, n].indexOf(u) >= 0 ? "height" : "width"; if (h && d) { var g = function (t, e) { return Y("number" != typeof (t = "function" == typeof t ? t(Object.assign({}, e.rects, { placement: e.placement })) : t) ? t : X(t, r)) }(c.padding, a), m = z(h), b = "y" === p ? e : o, _ = "y" === p ? s : n, y = a.rects.reference[f] + a.rects.reference[p] - d[p] - a.rects.popper[f], w = d[p] - a.rects.reference[p], v = $(h), x = v ? "y" === p ? v.clientHeight || 0 : v.clientWidth || 0 : 0, k = y / 2 - w / 2, E = g[b], C = x - m[f] - g[_], A = x / 2 - m[f] / 2 + k, M = U(E, A, C), S = p; a.modifiersData[l] = ((i = {})[S] = M, i.centerOffset = M - A, i) } }, effect: function (t) { var e = t.state, i = t.options.element, s = void 0 === i ? "[data-popper-arrow]" : i; null != s && ("string" != typeof s || (s = e.elements.popper.querySelector(s))) && j(e.elements.popper, s) && (e.elements.arrow = s) }, requires: ["popperOffsets"], requiresIfExists: ["preventOverflow"] }; function Z(t) { return t.split("-")[1] } var Q = { top: "auto", right: "auto", bottom: "auto", left: "auto" }; function G(t) { var i, a = t.popper, r = t.popperRect, l = t.placement, h = t.variation, d = t.offsets, u = t.position, p = t.gpuAcceleration, f = t.adaptive, g = t.roundOffsets, m = t.isFixed, b = d.x, _ = void 0 === b ? 0 : b, y = d.y, w = void 0 === y ? 0 : y, v = "function" == typeof g ? g({ x: _, y: w }) : { x: _, y: w }; _ = v.x, w = v.y; var x = d.hasOwnProperty("x"), k = d.hasOwnProperty("y"), E = o, C = e, A = window; if (f) { var S = $(a), O = "clientHeight", P = "clientWidth"; S === M(a) && "static" !== N(S = V(a)).position && "absolute" === u && (O = "scrollHeight", P = "scrollWidth"), (l === e || (l === o || l === n) && h === c) && (C = s, w -= (m && S === A && A.visualViewport ? A.visualViewport.height : S[O]) - r.height, w *= p ? 1 : -1), l !== o && (l !== e && l !== s || h !== c) || (E = n, _ -= (m && S === A && A.visualViewport ? A.visualViewport.width : S[P]) - r.width, _ *= p ? 1 : -1) } var T, L = Object.assign({ position: u }, f && Q), D = !0 === g ? function (t) { var e = t.x, i = t.y, s = window.devicePixelRatio || 1; return { x: B(e * s) / s || 0, y: B(i * s) / s || 0 } }({ x: _, y: w }) : { x: _, y: w }; return _ = D.x, w = D.y, p ? Object.assign({}, L, ((T = {})[C] = k ? "0" : "", T[E] = x ? "0" : "", T.transform = (A.devicePixelRatio || 1) <= 1 ? "translate(" + _ + "px, " + w + "px)" : "translate3d(" + _ + "px, " + w + "px, 0)", T)) : Object.assign({}, L, ((i = {})[C] = k ? w + "px" : "", i[E] = x ? _ + "px" : "", i.transform = "", i)) } const J = { name: "computeStyles", enabled: !0, phase: "beforeWrite", fn: function (t) { var e = t.state, i = t.options, s = i.gpuAcceleration, n = void 0 === s || s, o = i.adaptive, a = void 0 === o || o, r = i.roundOffsets, l = void 0 === r || r, c = { placement: L(e.placement), variation: Z(e.placement), popper: e.elements.popper, popperRect: e.rects.popper, gpuAcceleration: n, isFixed: "fixed" === e.options.strategy }; null != e.modifiersData.popperOffsets && (e.styles.popper = Object.assign({}, e.styles.popper, G(Object.assign({}, c, { offsets: e.modifiersData.popperOffsets, position: e.options.strategy, adaptive: a, roundOffsets: l })))), null != e.modifiersData.arrow && (e.styles.arrow = Object.assign({}, e.styles.arrow, G(Object.assign({}, c, { offsets: e.modifiersData.arrow, position: "absolute", adaptive: !1, roundOffsets: l })))), e.attributes.popper = Object.assign({}, e.attributes.popper, { "data-popper-placement": e.placement }) }, data: {} }; var tt = { passive: !0 }; const et = { name: "eventListeners", enabled: !0, phase: "write", fn: function () { }, effect: function (t) { var e = t.state, i = t.instance, s = t.options, n = s.scroll, o = void 0 === n || n, a = s.resize, r = void 0 === a || a, l = M(e.elements.popper), c = [].concat(e.scrollParents.reference, e.scrollParents.popper); return o && c.forEach((function (t) { t.addEventListener("scroll", i.update, tt) })), r && l.addEventListener("resize", i.update, tt), function () { o && c.forEach((function (t) { t.removeEventListener("scroll", i.update, tt) })), r && l.removeEventListener("resize", i.update, tt) } }, data: {} }; var it = { left: "right", right: "left", bottom: "top", top: "bottom" }; function st(t) { return t.replace(/left|right|bottom|top/g, (function (t) { return it[t] })) } var nt = { start: "end", end: "start" }; function ot(t) { return t.replace(/start|end/g, (function (t) { return nt[t] })) } function at(t) { var e = M(t); return { scrollLeft: e.pageXOffset, scrollTop: e.pageYOffset } } function rt(t) { return R(V(t)).left + at(t).scrollLeft } function lt(t) { var e = N(t), i = e.overflow, s = e.overflowX, n = e.overflowY; return /auto|scroll|overlay|hidden/.test(i + n + s) } function ct(t) { return ["html", "body", "#document"].indexOf(A(t)) >= 0 ? t.ownerDocument.body : O(t) && lt(t) ? t : ct(H(t)) } function ht(t, e) { var i; void 0 === e && (e = []); var s = ct(t), n = s === (null == (i = t.ownerDocument) ? void 0 : i.body), o = M(s), a = n ? [o].concat(o.visualViewport || [], lt(s) ? s : []) : s, r = e.concat(a); return n ? r : r.concat(ht(H(a))) } function dt(t) { return Object.assign({}, t, { left: t.x, top: t.y, right: t.x + t.width, bottom: t.y + t.height }) } function ut(t, e) { return e === d ? dt(function (t) { var e = M(t), i = V(t), s = e.visualViewport, n = i.clientWidth, o = i.clientHeight, a = 0, r = 0; return s && (n = s.width, o = s.height, /^((?!chrome|android).)*safari/i.test(navigator.userAgent) || (a = s.offsetLeft, r = s.offsetTop)), { width: n, height: o, x: a + rt(t), y: r } }(t)) : S(e) ? function (t) { var e = R(t); return e.top = e.top + t.clientTop, e.left = e.left + t.clientLeft, e.bottom = e.top + t.clientHeight, e.right = e.left + t.clientWidth, e.width = t.clientWidth, e.height = t.clientHeight, e.x = e.left, e.y = e.top, e }(e) : dt(function (t) { var e, i = V(t), s = at(t), n = null == (e = t.ownerDocument) ? void 0 : e.body, o = D(i.scrollWidth, i.clientWidth, n ? n.scrollWidth : 0, n ? n.clientWidth : 0), a = D(i.scrollHeight, i.clientHeight, n ? n.scrollHeight : 0, n ? n.clientHeight : 0), r = -s.scrollLeft + rt(t), l = -s.scrollTop; return "rtl" === N(n || i).direction && (r += D(i.clientWidth, n ? n.clientWidth : 0) - o), { width: o, height: a, x: r, y: l } }(V(t))) } function pt(t) { var i, a = t.reference, r = t.element, h = t.placement, d = h ? L(h) : null, u = h ? Z(h) : null, p = a.x + a.width / 2 - r.width / 2, f = a.y + a.height / 2 - r.height / 2; switch (d) { case e: i = { x: p, y: a.y - r.height }; break; case s: i = { x: p, y: a.y + a.height }; break; case n: i = { x: a.x + a.width, y: f }; break; case o: i = { x: a.x - r.width, y: f }; break; default: i = { x: a.x, y: a.y } }var g = d ? q(d) : null; if (null != g) { var m = "y" === g ? "height" : "width"; switch (u) { case l: i[g] = i[g] - (a[m] / 2 - r[m] / 2); break; case c: i[g] = i[g] + (a[m] / 2 - r[m] / 2) } } return i } function ft(t, i) { void 0 === i && (i = {}); var o = i, a = o.placement, l = void 0 === a ? t.placement : a, c = o.boundary, f = void 0 === c ? h : c, g = o.rootBoundary, m = void 0 === g ? d : g, b = o.elementContext, _ = void 0 === b ? u : b, y = o.altBoundary, w = void 0 !== y && y, v = o.padding, x = void 0 === v ? 0 : v, k = Y("number" != typeof x ? x : X(x, r)), E = _ === u ? p : u, C = t.rects.popper, M = t.elements[w ? E : _], P = function (t, e, i) { var s = "clippingParents" === e ? function (t) { var e = ht(H(t)), i = ["absolute", "fixed"].indexOf(N(t).position) >= 0 && O(t) ? $(t) : t; return S(i) ? e.filter((function (t) { return S(t) && j(t, i) && "body" !== A(t) })) : [] }(t) : [].concat(e), n = [].concat(s, [i]), o = n[0], a = n.reduce((function (e, i) { var s = ut(t, i); return e.top = D(s.top, e.top), e.right = I(s.right, e.right), e.bottom = I(s.bottom, e.bottom), e.left = D(s.left, e.left), e }), ut(t, o)); return a.width = a.right - a.left, a.height = a.bottom - a.top, a.x = a.left, a.y = a.top, a }(S(M) ? M : M.contextElement || V(t.elements.popper), f, m), T = R(t.elements.reference), L = pt({ reference: T, element: C, strategy: "absolute", placement: l }), B = dt(Object.assign({}, C, L)), z = _ === u ? B : T, F = { top: P.top - z.top + k.top, bottom: z.bottom - P.bottom + k.bottom, left: P.left - z.left + k.left, right: z.right - P.right + k.right }, W = t.modifiersData.offset; if (_ === u && W) { var q = W[l]; Object.keys(F).forEach((function (t) { var i = [n, s].indexOf(t) >= 0 ? 1 : -1, o = [e, s].indexOf(t) >= 0 ? "y" : "x"; F[t] += q[o] * i })) } return F } const gt = { name: "flip", enabled: !0, phase: "main", fn: function (t) { var i = t.state, c = t.options, h = t.name; if (!i.modifiersData[h]._skip) { for (var d = c.mainAxis, u = void 0 === d || d, p = c.altAxis, m = void 0 === p || p, b = c.fallbackPlacements, _ = c.padding, y = c.boundary, w = c.rootBoundary, v = c.altBoundary, x = c.flipVariations, k = void 0 === x || x, E = c.allowedAutoPlacements, C = i.options.placement, A = L(C), M = b || (A !== C && k ? function (t) { if (L(t) === a) return []; var e = st(t); return [ot(t), e, ot(e)] }(C) : [st(C)]), S = [C].concat(M).reduce((function (t, e) { return t.concat(L(e) === a ? function (t, e) { void 0 === e && (e = {}); var i = e, s = i.placement, n = i.boundary, o = i.rootBoundary, a = i.padding, l = i.flipVariations, c = i.allowedAutoPlacements, h = void 0 === c ? g : c, d = Z(s), u = d ? l ? f : f.filter((function (t) { return Z(t) === d })) : r, p = u.filter((function (t) { return h.indexOf(t) >= 0 })); 0 === p.length && (p = u); var m = p.reduce((function (e, i) { return e[i] = ft(t, { placement: i, boundary: n, rootBoundary: o, padding: a })[L(i)], e }), {}); return Object.keys(m).sort((function (t, e) { return m[t] - m[e] })) }(i, { placement: e, boundary: y, rootBoundary: w, padding: _, flipVariations: k, allowedAutoPlacements: E }) : e) }), []), O = i.rects.reference, P = i.rects.popper, T = new Map, D = !0, I = S[0], B = 0; B < S.length; B++) { var R = S[B], z = L(R), j = Z(R) === l, N = [e, s].indexOf(z) >= 0, F = N ? "width" : "height", V = ft(i, { placement: R, boundary: y, rootBoundary: w, altBoundary: v, padding: _ }), H = N ? j ? n : o : j ? s : e; O[F] > P[F] && (H = st(H)); var W = st(H), $ = []; if (u && $.push(V[z] <= 0), m && $.push(V[H] <= 0, V[W] <= 0), $.every((function (t) { return t }))) { I = R, D = !1; break } T.set(R, $) } if (D) for (var q = function (t) { var e = S.find((function (e) { var i = T.get(e); if (i) return i.slice(0, t).every((function (t) { return t })) })); if (e) return I = e, "break" }, U = k ? 3 : 1; U > 0 && "break" !== q(U); U--); i.placement !== I && (i.modifiersData[h]._skip = !0, i.placement = I, i.reset = !0) } }, requiresIfExists: ["offset"], data: { _skip: !1 } }; function mt(t, e, i) { return void 0 === i && (i = { x: 0, y: 0 }), { top: t.top - e.height - i.y, right: t.right - e.width + i.x, bottom: t.bottom - e.height + i.y, left: t.left - e.width - i.x } } function bt(t) { return [e, n, s, o].some((function (e) { return t[e] >= 0 })) } const _t = { name: "hide", enabled: !0, phase: "main", requiresIfExists: ["preventOverflow"], fn: function (t) { var e = t.state, i = t.name, s = e.rects.reference, n = e.rects.popper, o = e.modifiersData.preventOverflow, a = ft(e, { elementContext: "reference" }), r = ft(e, { altBoundary: !0 }), l = mt(a, s), c = mt(r, n, o), h = bt(l), d = bt(c); e.modifiersData[i] = { referenceClippingOffsets: l, popperEscapeOffsets: c, isReferenceHidden: h, hasPopperEscaped: d }, e.attributes.popper = Object.assign({}, e.attributes.popper, { "data-popper-reference-hidden": h, "data-popper-escaped": d }) } }, yt = { name: "offset", enabled: !0, phase: "main", requires: ["popperOffsets"], fn: function (t) { var i = t.state, s = t.options, a = t.name, r = s.offset, l = void 0 === r ? [0, 0] : r, c = g.reduce((function (t, s) { return t[s] = function (t, i, s) { var a = L(t), r = [o, e].indexOf(a) >= 0 ? -1 : 1, l = "function" == typeof s ? s(Object.assign({}, i, { placement: t })) : s, c = l[0], h = l[1]; return c = c || 0, h = (h || 0) * r, [o, n].indexOf(a) >= 0 ? { x: h, y: c } : { x: c, y: h } }(s, i.rects, l), t }), {}), h = c[i.placement], d = h.x, u = h.y; null != i.modifiersData.popperOffsets && (i.modifiersData.popperOffsets.x += d, i.modifiersData.popperOffsets.y += u), i.modifiersData[a] = c } }, wt = { name: "popperOffsets", enabled: !0, phase: "read", fn: function (t) { var e = t.state, i = t.name; e.modifiersData[i] = pt({ reference: e.rects.reference, element: e.rects.popper, strategy: "absolute", placement: e.placement }) }, data: {} }, vt = { name: "preventOverflow", enabled: !0, phase: "main", fn: function (t) { var i = t.state, a = t.options, r = t.name, c = a.mainAxis, h = void 0 === c || c, d = a.altAxis, u = void 0 !== d && d, p = a.boundary, f = a.rootBoundary, g = a.altBoundary, m = a.padding, b = a.tether, _ = void 0 === b || b, y = a.tetherOffset, w = void 0 === y ? 0 : y, v = ft(i, { boundary: p, rootBoundary: f, padding: m, altBoundary: g }), x = L(i.placement), k = Z(i.placement), E = !k, C = q(x), A = "x" === C ? "y" : "x", M = i.modifiersData.popperOffsets, S = i.rects.reference, O = i.rects.popper, P = "function" == typeof w ? w(Object.assign({}, i.rects, { placement: i.placement })) : w, T = "number" == typeof P ? { mainAxis: P, altAxis: P } : Object.assign({ mainAxis: 0, altAxis: 0 }, P), B = i.modifiersData.offset ? i.modifiersData.offset[i.placement] : null, R = { x: 0, y: 0 }; if (M) { if (h) { var j, N = "y" === C ? e : o, F = "y" === C ? s : n, V = "y" === C ? "height" : "width", H = M[C], W = H + v[N], Y = H - v[F], X = _ ? -O[V] / 2 : 0, K = k === l ? S[V] : O[V], Q = k === l ? -O[V] : -S[V], G = i.elements.arrow, J = _ && G ? z(G) : { width: 0, height: 0 }, tt = i.modifiersData["arrow#persistent"] ? i.modifiersData["arrow#persistent"].padding : { top: 0, right: 0, bottom: 0, left: 0 }, et = tt[N], it = tt[F], st = U(0, S[V], J[V]), nt = E ? S[V] / 2 - X - st - et - T.mainAxis : K - st - et - T.mainAxis, ot = E ? -S[V] / 2 + X + st + it + T.mainAxis : Q + st + it + T.mainAxis, at = i.elements.arrow && $(i.elements.arrow), rt = at ? "y" === C ? at.clientTop || 0 : at.clientLeft || 0 : 0, lt = null != (j = null == B ? void 0 : B[C]) ? j : 0, ct = H + ot - lt, ht = U(_ ? I(W, H + nt - lt - rt) : W, H, _ ? D(Y, ct) : Y); M[C] = ht, R[C] = ht - H } if (u) { var dt, ut = "x" === C ? e : o, pt = "x" === C ? s : n, gt = M[A], mt = "y" === A ? "height" : "width", bt = gt + v[ut], _t = gt - v[pt], yt = -1 !== [e, o].indexOf(x), wt = null != (dt = null == B ? void 0 : B[A]) ? dt : 0, vt = yt ? bt : gt - S[mt] - O[mt] - wt + T.altAxis, xt = yt ? gt + S[mt] + O[mt] - wt - T.altAxis : _t, kt = _ && yt ? function (t, e, i) { var s = U(t, e, i); return s > i ? i : s }(vt, gt, xt) : U(_ ? vt : bt, gt, _ ? xt : _t); M[A] = kt, R[A] = kt - gt } i.modifiersData[r] = R } }, requiresIfExists: ["offset"] }; function xt(t, e, i) { void 0 === i && (i = !1); var s, n, o = O(e), a = O(e) && function (t) { var e = t.getBoundingClientRect(), i = B(e.width) / t.offsetWidth || 1, s = B(e.height) / t.offsetHeight || 1; return 1 !== i || 1 !== s }(e), r = V(e), l = R(t, a), c = { scrollLeft: 0, scrollTop: 0 }, h = { x: 0, y: 0 }; return (o || !o && !i) && (("body" !== A(e) || lt(r)) && (c = (s = e) !== M(s) && O(s) ? { scrollLeft: (n = s).scrollLeft, scrollTop: n.scrollTop } : at(s)), O(e) ? ((h = R(e, !0)).x += e.clientLeft, h.y += e.clientTop) : r && (h.x = rt(r))), { x: l.left + c.scrollLeft - h.x, y: l.top + c.scrollTop - h.y, width: l.width, height: l.height } } function kt(t) { var e = new Map, i = new Set, s = []; function n(t) { i.add(t.name), [].concat(t.requires || [], t.requiresIfExists || []).forEach((function (t) { if (!i.has(t)) { var s = e.get(t); s && n(s) } })), s.push(t) } return t.forEach((function (t) { e.set(t.name, t) })), t.forEach((function (t) { i.has(t.name) || n(t) })), s } var Et = { placement: "bottom", modifiers: [], strategy: "absolute" }; function Ct() { for (var t = arguments.length, e = new Array(t), i = 0; i < t; i++)e[i] = arguments[i]; return !e.some((function (t) { return !(t && "function" == typeof t.getBoundingClientRect) })) } function At(t) { void 0 === t && (t = {}); var e = t, i = e.defaultModifiers, s = void 0 === i ? [] : i, n = e.defaultOptions, o = void 0 === n ? Et : n; return function (t, e, i) { void 0 === i && (i = o); var n, a, r = { placement: "bottom", orderedModifiers: [], options: Object.assign({}, Et, o), modifiersData: {}, elements: { reference: t, popper: e }, attributes: {}, styles: {} }, l = [], c = !1, h = { state: r, setOptions: function (i) { var n = "function" == typeof i ? i(r.options) : i; d(), r.options = Object.assign({}, o, r.options, n), r.scrollParents = { reference: S(t) ? ht(t) : t.contextElement ? ht(t.contextElement) : [], popper: ht(e) }; var a, c, u = function (t) { var e = kt(t); return C.reduce((function (t, i) { return t.concat(e.filter((function (t) { return t.phase === i }))) }), []) }((a = [].concat(s, r.options.modifiers), c = a.reduce((function (t, e) { var i = t[e.name]; return t[e.name] = i ? Object.assign({}, i, e, { options: Object.assign({}, i.options, e.options), data: Object.assign({}, i.data, e.data) }) : e, t }), {}), Object.keys(c).map((function (t) { return c[t] })))); return r.orderedModifiers = u.filter((function (t) { return t.enabled })), r.orderedModifiers.forEach((function (t) { var e = t.name, i = t.options, s = void 0 === i ? {} : i, n = t.effect; if ("function" == typeof n) { var o = n({ state: r, name: e, instance: h, options: s }); l.push(o || function () { }) } })), h.update() }, forceUpdate: function () { if (!c) { var t = r.elements, e = t.reference, i = t.popper; if (Ct(e, i)) { r.rects = { reference: xt(e, $(i), "fixed" === r.options.strategy), popper: z(i) }, r.reset = !1, r.placement = r.options.placement, r.orderedModifiers.forEach((function (t) { return r.modifiersData[t.name] = Object.assign({}, t.data) })); for (var s = 0; s < r.orderedModifiers.length; s++)if (!0 !== r.reset) { var n = r.orderedModifiers[s], o = n.fn, a = n.options, l = void 0 === a ? {} : a, d = n.name; "function" == typeof o && (r = o({ state: r, options: l, name: d, instance: h }) || r) } else r.reset = !1, s = -1 } } }, update: (n = function () { return new Promise((function (t) { h.forceUpdate(), t(r) })) }, function () { return a || (a = new Promise((function (t) { Promise.resolve().then((function () { a = void 0, t(n()) })) }))), a }), destroy: function () { d(), c = !0 } }; if (!Ct(t, e)) return h; function d() { l.forEach((function (t) { return t() })), l = [] } return h.setOptions(i).then((function (t) { !c && i.onFirstUpdate && i.onFirstUpdate(t) })), h } } var Mt = At(), St = At({ defaultModifiers: [et, wt, J, T, yt, gt, vt, K, _t] }), Ot = At({ defaultModifiers: [et, wt, J, T] }); const Pt = "transitionend", Tt = t => { let e = t.getAttribute("data-bs-target"); if (!e || "#" === e) { let i = t.getAttribute("href"); if (!i || !i.includes("#") && !i.startsWith(".")) return null; i.includes("#") && !i.startsWith("#") && (i = `#${i.split("#")[1]}`), e = i && "#" !== i ? i.trim() : null } return e }, Lt = t => { const e = Tt(t); return e && document.querySelector(e) ? e : null }, Dt = t => { const e = Tt(t); return e ? document.querySelector(e) : null }, It = t => { t.dispatchEvent(new Event(Pt)) }, Bt = t => !(!t || "object" != typeof t) && (void 0 !== t.jquery && (t = t[0]), void 0 !== t.nodeType), Rt = t => Bt(t) ? t.jquery ? t[0] : t : "string" == typeof t && t.length > 0 ? document.querySelector(t) : null, zt = t => { if (!Bt(t) || 0 === t.getClientRects().length) return !1; const e = "visible" === getComputedStyle(t).getPropertyValue("visibility"), i = t.closest("details:not([open])"); if (!i) return e; if (i !== t) { const e = t.closest("summary"); if (e && e.parentNode !== i) return !1; if (null === e) return !1 } return e }, jt = t => !t || t.nodeType !== Node.ELEMENT_NODE || !!t.classList.contains("disabled") || (void 0 !== t.disabled ? t.disabled : t.hasAttribute("disabled") && "false" !== t.getAttribute("disabled")), Nt = t => { if (!document.documentElement.attachShadow) return null; if ("function" == typeof t.getRootNode) { const e = t.getRootNode(); return e instanceof ShadowRoot ? e : null } return t instanceof ShadowRoot ? t : t.parentNode ? Nt(t.parentNode) : null }, Ft = () => { }, Vt = t => { t.offsetHeight }, Ht = () => window.jQuery && !document.body.hasAttribute("data-bs-no-jquery") ? window.jQuery : null, Wt = [], $t = () => "rtl" === document.documentElement.dir, qt = t => { (t => { "loading" === document.readyState ? (Wt.length || document.addEventListener("DOMContentLoaded", (() => { for (const t of Wt) t() })), Wt.push(t)) : t() })((() => { const e = Ht(); if (e) { const i = t.NAME, s = e.fn[i]; e.fn[i] = t.jQueryInterface, e.fn[i].Constructor = t, e.fn[i].noConflict = () => (e.fn[i] = s, t.jQueryInterface) } })) }, Ut = t => { "function" == typeof t && t() }, Yt = (t, e, i = !0) => { if (!i) return void Ut(t); const s = (t => { if (!t) return 0; let { transitionDuration: e, transitionDelay: i } = window.getComputedStyle(t); const s = Number.parseFloat(e), n = Number.parseFloat(i); return s || n ? (e = e.split(",")[0], i = i.split(",")[0], 1e3 * (Number.parseFloat(e) + Number.parseFloat(i))) : 0 })(e) + 5; let n = !1; const o = ({ target: i }) => { i === e && (n = !0, e.removeEventListener(Pt, o), Ut(t)) }; e.addEventListener(Pt, o), setTimeout((() => { n || It(e) }), s) }, Xt = (t, e, i, s) => { const n = t.length; let o = t.indexOf(e); return -1 === o ? !i && s ? t[n - 1] : t[0] : (o += i ? 1 : -1, s && (o = (o + n) % n), t[Math.max(0, Math.min(o, n - 1))]) }, Kt = /[^.]*(?=\..*)\.|.*/, Zt = /\..*/, Qt = /::\d+$/, Gt = {}; let Jt = 1; const te = { mouseenter: "mouseover", mouseleave: "mouseout" }, ee = new Set(["click", "dblclick", "mouseup", "mousedown", "contextmenu", "mousewheel", "DOMMouseScroll", "mouseover", "mouseout", "mousemove", "selectstart", "selectend", "keydown", "keypress", "keyup", "orientationchange", "touchstart", "touchmove", "touchend", "touchcancel", "pointerdown", "pointermove", "pointerup", "pointerleave", "pointercancel", "gesturestart", "gesturechange", "gestureend", "focus", "blur", "change", "reset", "select", "submit", "focusin", "focusout", "load", "unload", "beforeunload", "resize", "move", "DOMContentLoaded", "readystatechange", "error", "abort", "scroll"]); function ie(t, e) { return e && `${e}::${Jt++}` || t.uidEvent || Jt++ } function se(t) { const e = ie(t); return t.uidEvent = e, Gt[e] = Gt[e] || {}, Gt[e] } function ne(t, e, i = null) { return Object.values(t).find((t => t.callable === e && t.delegationSelector === i)) } function oe(t, e, i) { const s = "string" == typeof e, n = s ? i : e || i; let o = ce(t); return ee.has(o) || (o = t), [s, n, o] } function ae(t, e, i, s, n) { if ("string" != typeof e || !t) return; let [o, a, r] = oe(e, i, s); if (e in te) { const t = t => function (e) { if (!e.relatedTarget || e.relatedTarget !== e.delegateTarget && !e.delegateTarget.contains(e.relatedTarget)) return t.call(this, e) }; a = t(a) } const l = se(t), c = l[r] || (l[r] = {}), h = ne(c, a, o ? i : null); if (h) return void (h.oneOff = h.oneOff && n); const d = ie(a, e.replace(Kt, "")), u = o ? function (t, e, i) { return function s(n) { const o = t.querySelectorAll(e); for (let { target: a } = n; a && a !== this; a = a.parentNode)for (const r of o) if (r === a) return de(n, { delegateTarget: a }), s.oneOff && he.off(t, n.type, e, i), i.apply(a, [n]) } }(t, i, a) : function (t, e) { return function i(s) { return de(s, { delegateTarget: t }), i.oneOff && he.off(t, s.type, e), e.apply(t, [s]) } }(t, a); u.delegationSelector = o ? i : null, u.callable = a, u.oneOff = n, u.uidEvent = d, c[d] = u, t.addEventListener(r, u, o) } function re(t, e, i, s, n) { const o = ne(e[i], s, n); o && (t.removeEventListener(i, o, Boolean(n)), delete e[i][o.uidEvent]) } function le(t, e, i, s) { const n = e[i] || {}; for (const o of Object.keys(n)) if (o.includes(s)) { const s = n[o]; re(t, e, i, s.callable, s.delegationSelector) } } function ce(t) { return t = t.replace(Zt, ""), te[t] || t } const he = { on(t, e, i, s) { ae(t, e, i, s, !1) }, one(t, e, i, s) { ae(t, e, i, s, !0) }, off(t, e, i, s) { if ("string" != typeof e || !t) return; const [n, o, a] = oe(e, i, s), r = a !== e, l = se(t), c = l[a] || {}, h = e.startsWith("."); if (void 0 === o) { if (h) for (const i of Object.keys(l)) le(t, l, i, e.slice(1)); for (const i of Object.keys(c)) { const s = i.replace(Qt, ""); if (!r || e.includes(s)) { const e = c[i]; re(t, l, a, e.callable, e.delegationSelector) } } } else { if (!Object.keys(c).length) return; re(t, l, a, o, n ? i : null) } }, trigger(t, e, i) { if ("string" != typeof e || !t) return null; const s = Ht(); let n = null, o = !0, a = !0, r = !1; e !== ce(e) && s && (n = s.Event(e, i), s(t).trigger(n), o = !n.isPropagationStopped(), a = !n.isImmediatePropagationStopped(), r = n.isDefaultPrevented()); let l = new Event(e, { bubbles: o, cancelable: !0 }); return l = de(l, i), r && l.preventDefault(), a && t.dispatchEvent(l), l.defaultPrevented && n && n.preventDefault(), l } }; function de(t, e) { for (const [i, s] of Object.entries(e || {})) try { t[i] = s } catch (e) { Object.defineProperty(t, i, { configurable: !0, get: () => s }) } return t } const ue = new Map, pe = { set(t, e, i) { ue.has(t) || ue.set(t, new Map); const s = ue.get(t); s.has(e) || 0 === s.size ? s.set(e, i) : console.error(`Bootstrap doesn't allow more than one instance per element. Bound instance: ${Array.from(s.keys())[0]}.`) }, get: (t, e) => ue.has(t) && ue.get(t).get(e) || null, remove(t, e) { if (!ue.has(t)) return; const i = ue.get(t); i.delete(e), 0 === i.size && ue.delete(t) } }; function fe(t) { if ("true" === t) return !0; if ("false" === t) return !1; if (t === Number(t).toString()) return Number(t); if ("" === t || "null" === t) return null; if ("string" != typeof t) return t; try { return JSON.parse(decodeURIComponent(t)) } catch (e) { return t } } function ge(t) { return t.replace(/[A-Z]/g, (t => `-${t.toLowerCase()}`)) } const me = { setDataAttribute(t, e, i) { t.setAttribute(`data-bs-${ge(e)}`, i) }, removeDataAttribute(t, e) { t.removeAttribute(`data-bs-${ge(e)}`) }, getDataAttributes(t) { if (!t) return {}; const e = {}, i = Object.keys(t.dataset).filter((t => t.startsWith("bs") && !t.startsWith("bsConfig"))); for (const s of i) { let i = s.replace(/^bs/, ""); i = i.charAt(0).toLowerCase() + i.slice(1, i.length), e[i] = fe(t.dataset[s]) } return e }, getDataAttribute: (t, e) => fe(t.getAttribute(`data-bs-${ge(e)}`)) }; class be { static get Default() { return {} } static get DefaultType() { return {} } static get NAME() { throw new Error('You have to implement the static method "NAME", for each component!') } _getConfig(t) { return t = this._mergeConfigObj(t), t = this._configAfterMerge(t), this._typeCheckConfig(t), t } _configAfterMerge(t) { return t } _mergeConfigObj(t, e) { const i = Bt(e) ? me.getDataAttribute(e, "config") : {}; return { ...this.constructor.Default, ..."object" == typeof i ? i : {}, ...Bt(e) ? me.getDataAttributes(e) : {}, ..."object" == typeof t ? t : {} } } _typeCheckConfig(t, e = this.constructor.DefaultType) { for (const s of Object.keys(e)) { const n = e[s], o = t[s], a = Bt(o) ? "element" : null == (i = o) ? `${i}` : Object.prototype.toString.call(i).match(/\s([a-z]+)/i)[1].toLowerCase(); if (!new RegExp(n).test(a)) throw new TypeError(`${this.constructor.NAME.toUpperCase()}: Option "${s}" provided type "${a}" but expected type "${n}".`) } var i } } class _e extends be { constructor(t, e) { super(), (t = Rt(t)) && (this._element = t, this._config = this._getConfig(e), pe.set(this._element, this.constructor.DATA_KEY, this)) } dispose() { pe.remove(this._element, this.constructor.DATA_KEY), he.off(this._element, this.constructor.EVENT_KEY); for (const t of Object.getOwnPropertyNames(this)) this[t] = null } _queueCallback(t, e, i = !0) { Yt(t, e, i) } _getConfig(t) { return t = this._mergeConfigObj(t, this._element), t = this._configAfterMerge(t), this._typeCheckConfig(t), t } static getInstance(t) { return pe.get(Rt(t), this.DATA_KEY) } static getOrCreateInstance(t, e = {}) { return this.getInstance(t) || new this(t, "object" == typeof e ? e : null) } static get VERSION() { return "5.2.0" } static get DATA_KEY() { return `bs.${this.NAME}` } static get EVENT_KEY() { return `.${this.DATA_KEY}` } static eventName(t) { return `${t}${this.EVENT_KEY}` } } const ye = (t, e = "hide") => { const i = `click.dismiss${t.EVENT_KEY}`, s = t.NAME; he.on(document, i, `[data-bs-dismiss="${s}"]`, (function (i) { if (["A", "AREA"].includes(this.tagName) && i.preventDefault(), jt(this)) return; const n = Dt(this) || this.closest(`.${s}`); t.getOrCreateInstance(n)[e]() })) }; class we extends _e { static get NAME() { return "alert" } close() { if (he.trigger(this._element, "close.bs.alert").defaultPrevented) return; this._element.classList.remove("show"); const t = this._element.classList.contains("fade"); this._queueCallback((() => this._destroyElement()), this._element, t) } _destroyElement() { this._element.remove(), he.trigger(this._element, "closed.bs.alert"), this.dispose() } static jQueryInterface(t) { return this.each((function () { const e = we.getOrCreateInstance(this); if ("string" == typeof t) { if (void 0 === e[t] || t.startsWith("_") || "constructor" === t) throw new TypeError(`No method named "${t}"`); e[t](this) } })) } } ye(we, "close"), qt(we); const ve = '[data-bs-toggle="button"]'; class xe extends _e { static get NAME() { return "button" } toggle() { this._element.setAttribute("aria-pressed", this._element.classList.toggle("active")) } static jQueryInterface(t) { return this.each((function () { const e = xe.getOrCreateInstance(this); "toggle" === t && e[t]() })) } } he.on(document, "click.bs.button.data-api", ve, (t => { t.preventDefault(); const e = t.target.closest(ve); xe.getOrCreateInstance(e).toggle() })), qt(xe); const ke = { find: (t, e = document.documentElement) => [].concat(...Element.prototype.querySelectorAll.call(e, t)), findOne: (t, e = document.documentElement) => Element.prototype.querySelector.call(e, t), children: (t, e) => [].concat(...t.children).filter((t => t.matches(e))), parents(t, e) { const i = []; let s = t.parentNode.closest(e); for (; s;)i.push(s), s = s.parentNode.closest(e); return i }, prev(t, e) { let i = t.previousElementSibling; for (; i;) { if (i.matches(e)) return [i]; i = i.previousElementSibling } return [] }, next(t, e) { let i = t.nextElementSibling; for (; i;) { if (i.matches(e)) return [i]; i = i.nextElementSibling } return [] }, focusableChildren(t) { const e = ["a", "button", "input", "textarea", "select", "details", "[tabindex]", '[contenteditable="true"]'].map((t => `${t}:not([tabindex^="-"])`)).join(","); return this.find(e, t).filter((t => !jt(t) && zt(t))) } }, Ee = { endCallback: null, leftCallback: null, rightCallback: null }, Ce = { endCallback: "(function|null)", leftCallback: "(function|null)", rightCallback: "(function|null)" }; class Ae extends be { constructor(t, e) { super(), this._element = t, t && Ae.isSupported() && (this._config = this._getConfig(e), this._deltaX = 0, this._supportPointerEvents = Boolean(window.PointerEvent), this._initEvents()) } static get Default() { return Ee } static get DefaultType() { return Ce } static get NAME() { return "swipe" } dispose() { he.off(this._element, ".bs.swipe") } _start(t) { this._supportPointerEvents ? this._eventIsPointerPenTouch(t) && (this._deltaX = t.clientX) : this._deltaX = t.touches[0].clientX } _end(t) { this._eventIsPointerPenTouch(t) && (this._deltaX = t.clientX - this._deltaX), this._handleSwipe(), Ut(this._config.endCallback) } _move(t) { this._deltaX = t.touches && t.touches.length > 1 ? 0 : t.touches[0].clientX - this._deltaX } _handleSwipe() { const t = Math.abs(this._deltaX); if (t <= 40) return; const e = t / this._deltaX; this._deltaX = 0, e && Ut(e > 0 ? this._config.rightCallback : this._config.leftCallback) } _initEvents() { this._supportPointerEvents ? (he.on(this._element, "pointerdown.bs.swipe", (t => this._start(t))), he.on(this._element, "pointerup.bs.swipe", (t => this._end(t))), this._element.classList.add("pointer-event")) : (he.on(this._element, "touchstart.bs.swipe", (t => this._start(t))), he.on(this._element, "touchmove.bs.swipe", (t => this._move(t))), he.on(this._element, "touchend.bs.swipe", (t => this._end(t)))) } _eventIsPointerPenTouch(t) { return this._supportPointerEvents && ("pen" === t.pointerType || "touch" === t.pointerType) } static isSupported() { return "ontouchstart" in document.documentElement || navigator.maxTouchPoints > 0 } } const Me = "next", Se = "prev", Oe = "left", Pe = "right", Te = "slid.bs.carousel", Le = "carousel", De = "active", Ie = { ArrowLeft: Pe, ArrowRight: Oe }, Be = { interval: 5e3, keyboard: !0, pause: "hover", ride: !1, touch: !0, wrap: !0 }, Re = { interval: "(number|boolean)", keyboard: "boolean", pause: "(string|boolean)", ride: "(boolean|string)", touch: "boolean", wrap: "boolean" }; class ze extends _e { constructor(t, e) { super(t, e), this._interval = null, this._activeElement = null, this._isSliding = !1, this.touchTimeout = null, this._swipeHelper = null, this._indicatorsElement = ke.findOne(".carousel-indicators", this._element), this._addEventListeners(), this._config.ride === Le && this.cycle() } static get Default() { return Be } static get DefaultType() { return Re } static get NAME() { return "carousel" } next() { this._slide(Me) } nextWhenVisible() { !document.hidden && zt(this._element) && this.next() } prev() { this._slide(Se) } pause() { this._isSliding && It(this._element), this._clearInterval() } cycle() { this._clearInterval(), this._updateInterval(), this._interval = setInterval((() => this.nextWhenVisible()), this._config.interval) } _maybeEnableCycle() { this._config.ride && (this._isSliding ? he.one(this._element, Te, (() => this.cycle())) : this.cycle()) } to(t) { const e = this._getItems(); if (t > e.length - 1 || t < 0) return; if (this._isSliding) return void he.one(this._element, Te, (() => this.to(t))); const i = this._getItemIndex(this._getActive()); if (i === t) return; const s = t > i ? Me : Se; this._slide(s, e[t]) } dispose() { this._swipeHelper && this._swipeHelper.dispose(), super.dispose() } _configAfterMerge(t) { return t.defaultInterval = t.interval, t } _addEventListeners() { this._config.keyboard && he.on(this._element, "keydown.bs.carousel", (t => this._keydown(t))), "hover" === this._config.pause && (he.on(this._element, "mouseenter.bs.carousel", (() => this.pause())), he.on(this._element, "mouseleave.bs.carousel", (() => this._maybeEnableCycle()))), this._config.touch && Ae.isSupported() && this._addTouchEventListeners() } _addTouchEventListeners() { for (const t of ke.find(".carousel-item img", this._element)) he.on(t, "dragstart.bs.carousel", (t => t.preventDefault())); const t = { leftCallback: () => this._slide(this._directionToOrder(Oe)), rightCallback: () => this._slide(this._directionToOrder(Pe)), endCallback: () => { "hover" === this._config.pause && (this.pause(), this.touchTimeout && clearTimeout(this.touchTimeout), this.touchTimeout = setTimeout((() => this._maybeEnableCycle()), 500 + this._config.interval)) } }; this._swipeHelper = new Ae(this._element, t) } _keydown(t) { if (/input|textarea/i.test(t.target.tagName)) return; const e = Ie[t.key]; e && (t.preventDefault(), this._slide(this._directionToOrder(e))) } _getItemIndex(t) { return this._getItems().indexOf(t) } _setActiveIndicatorElement(t) { if (!this._indicatorsElement) return; const e = ke.findOne(".active", this._indicatorsElement); e.classList.remove(De), e.removeAttribute("aria-current"); const i = ke.findOne(`[data-bs-slide-to="${t}"]`, this._indicatorsElement); i && (i.classList.add(De), i.setAttribute("aria-current", "true")) } _updateInterval() { const t = this._activeElement || this._getActive(); if (!t) return; const e = Number.parseInt(t.getAttribute("data-bs-interval"), 10); this._config.interval = e || this._config.defaultInterval } _slide(t, e = null) { if (this._isSliding) return; const i = this._getActive(), s = t === Me, n = e || Xt(this._getItems(), i, s, this._config.wrap); if (n === i) return; const o = this._getItemIndex(n), a = e => he.trigger(this._element, e, { relatedTarget: n, direction: this._orderToDirection(t), from: this._getItemIndex(i), to: o }); if (a("slide.bs.carousel").defaultPrevented) return; if (!i || !n) return; const r = Boolean(this._interval); this.pause(), this._isSliding = !0, this._setActiveIndicatorElement(o), this._activeElement = n; const l = s ? "carousel-item-start" : "carousel-item-end", c = s ? "carousel-item-next" : "carousel-item-prev"; n.classList.add(c), Vt(n), i.classList.add(l), n.classList.add(l), this._queueCallback((() => { n.classList.remove(l, c), n.classList.add(De), i.classList.remove(De, c, l), this._isSliding = !1, a(Te) }), i, this._isAnimated()), r && this.cycle() } _isAnimated() { return this._element.classList.contains("slide") } _getActive() { return ke.findOne(".active.carousel-item", this._element) } _getItems() { return ke.find(".carousel-item", this._element) } _clearInterval() { this._interval && (clearInterval(this._interval), this._interval = null) } _directionToOrder(t) { return $t() ? t === Oe ? Se : Me : t === Oe ? Me : Se } _orderToDirection(t) { return $t() ? t === Se ? Oe : Pe : t === Se ? Pe : Oe } static jQueryInterface(t) { return this.each((function () { const e = ze.getOrCreateInstance(this, t); if ("number" != typeof t) { if ("string" == typeof t) { if (void 0 === e[t] || t.startsWith("_") || "constructor" === t) throw new TypeError(`No method named "${t}"`); e[t]() } } else e.to(t) })) } } he.on(document, "click.bs.carousel.data-api", "[data-bs-slide], [data-bs-slide-to]", (function (t) { const e = Dt(this); if (!e || !e.classList.contains(Le)) return; t.preventDefault(); const i = ze.getOrCreateInstance(e), s = this.getAttribute("data-bs-slide-to"); return s ? (i.to(s), void i._maybeEnableCycle()) : "next" === me.getDataAttribute(this, "slide") ? (i.next(), void i._maybeEnableCycle()) : (i.prev(), void i._maybeEnableCycle()) })), he.on(window, "load.bs.carousel.data-api", (() => { const t = ke.find('[data-bs-ride="carousel"]'); for (const e of t) ze.getOrCreateInstance(e) })), qt(ze); const je = "show", Ne = "collapse", Fe = "collapsing", Ve = '[data-bs-toggle="collapse"]', He = { parent: null, toggle: !0 }, We = { parent: "(null|element)", toggle: "boolean" }; class $e extends _e { constructor(t, e) { super(t, e), this._isTransitioning = !1, this._triggerArray = []; const i = ke.find(Ve); for (const t of i) { const e = Lt(t), i = ke.find(e).filter((t => t === this._element)); null !== e && i.length && this._triggerArray.push(t) } this._initializeChildren(), this._config.parent || this._addAriaAndCollapsedClass(this._triggerArray, this._isShown()), this._config.toggle && this.toggle() } static get Default() { return He } static get DefaultType() { return We } static get NAME() { return "collapse" } toggle() { this._isShown() ? this.hide() : this.show() } show() { if (this._isTransitioning || this._isShown()) return; let t = []; if (this._config.parent && (t = this._getFirstLevelChildren(".collapse.show, .collapse.collapsing").filter((t => t !== this._element)).map((t => $e.getOrCreateInstance(t, { toggle: !1 })))), t.length && t[0]._isTransitioning) return; if (he.trigger(this._element, "show.bs.collapse").defaultPrevented) return; for (const e of t) e.hide(); const e = this._getDimension(); this._element.classList.remove(Ne), this._element.classList.add(Fe), this._element.style[e] = 0, this._addAriaAndCollapsedClass(this._triggerArray, !0), this._isTransitioning = !0; const i = `scroll${e[0].toUpperCase() + e.slice(1)}`; this._queueCallback((() => { this._isTransitioning = !1, this._element.classList.remove(Fe), this._element.classList.add(Ne, je), this._element.style[e] = "", he.trigger(this._element, "shown.bs.collapse") }), this._element, !0), this._element.style[e] = `${this._element[i]}px` } hide() { if (this._isTransitioning || !this._isShown()) return; if (he.trigger(this._element, "hide.bs.collapse").defaultPrevented) return; const t = this._getDimension(); this._element.style[t] = `${this._element.getBoundingClientRect()[t]}px`, Vt(this._element), this._element.classList.add(Fe), this._element.classList.remove(Ne, je); for (const t of this._triggerArray) { const e = Dt(t); e && !this._isShown(e) && this._addAriaAndCollapsedClass([t], !1) } this._isTransitioning = !0, this._element.style[t] = "", this._queueCallback((() => { this._isTransitioning = !1, this._element.classList.remove(Fe), this._element.classList.add(Ne), he.trigger(this._element, "hidden.bs.collapse") }), this._element, !0) } _isShown(t = this._element) { return t.classList.contains(je) } _configAfterMerge(t) { return t.toggle = Boolean(t.toggle), t.parent = Rt(t.parent), t } _getDimension() { return this._element.classList.contains("collapse-horizontal") ? "width" : "height" } _initializeChildren() { if (!this._config.parent) return; const t = this._getFirstLevelChildren(Ve); for (const e of t) { const t = Dt(e); t && this._addAriaAndCollapsedClass([e], this._isShown(t)) } } _getFirstLevelChildren(t) { const e = ke.find(":scope .collapse .collapse", this._config.parent); return ke.find(t, this._config.parent).filter((t => !e.includes(t))) } _addAriaAndCollapsedClass(t, e) { if (t.length) for (const i of t) i.classList.toggle("collapsed", !e), i.setAttribute("aria-expanded", e) } static jQueryInterface(t) { const e = {}; return "string" == typeof t && /show|hide/.test(t) && (e.toggle = !1), this.each((function () { const i = $e.getOrCreateInstance(this, e); if ("string" == typeof t) { if (void 0 === i[t]) throw new TypeError(`No method named "${t}"`); i[t]() } })) } } he.on(document, "click.bs.collapse.data-api", Ve, (function (t) { ("A" === t.target.tagName || t.delegateTarget && "A" === t.delegateTarget.tagName) && t.preventDefault(); const e = Lt(this), i = ke.find(e); for (const t of i) $e.getOrCreateInstance(t, { toggle: !1 }).toggle() })), qt($e); const qe = "dropdown", Ue = "ArrowUp", Ye = "ArrowDown", Xe = "click.bs.dropdown.data-api", Ke = "keydown.bs.dropdown.data-api", Ze = "show", Qe = '[data-bs-toggle="dropdown"]:not(.disabled):not(:disabled)', Ge = `${Qe}.show`, Je = ".dropdown-menu", ti = $t() ? "top-end" : "top-start", ei = $t() ? "top-start" : "top-end", ii = $t() ? "bottom-end" : "bottom-start", si = $t() ? "bottom-start" : "bottom-end", ni = $t() ? "left-start" : "right-start", oi = $t() ? "right-start" : "left-start", ai = { autoClose: !0, boundary: "clippingParents", display: "dynamic", offset: [0, 2], popperConfig: null, reference: "toggle" }, ri = { autoClose: "(boolean|string)", boundary: "(string|element)", display: "string", offset: "(array|string|function)", popperConfig: "(null|object|function)", reference: "(string|element|object)" }; class li extends _e { constructor(t, e) { super(t, e), this._popper = null, this._parent = this._element.parentNode, this._menu = ke.findOne(Je, this._parent), this._inNavbar = this._detectNavbar() } static get Default() { return ai } static get DefaultType() { return ri } static get NAME() { return qe } toggle() { return this._isShown() ? this.hide() : this.show() } show() { if (jt(this._element) || this._isShown()) return; const t = { relatedTarget: this._element }; if (!he.trigger(this._element, "show.bs.dropdown", t).defaultPrevented) { if (this._createPopper(), "ontouchstart" in document.documentElement && !this._parent.closest(".navbar-nav")) for (const t of [].concat(...document.body.children)) he.on(t, "mouseover", Ft); this._element.focus(), this._element.setAttribute("aria-expanded", !0), this._menu.classList.add(Ze), this._element.classList.add(Ze), he.trigger(this._element, "shown.bs.dropdown", t) } } hide() { if (jt(this._element) || !this._isShown()) return; const t = { relatedTarget: this._element }; this._completeHide(t) } dispose() { this._popper && this._popper.destroy(), super.dispose() } update() { this._inNavbar = this._detectNavbar(), this._popper && this._popper.update() } _completeHide(t) { if (!he.trigger(this._element, "hide.bs.dropdown", t).defaultPrevented) { if ("ontouchstart" in document.documentElement) for (const t of [].concat(...document.body.children)) he.off(t, "mouseover", Ft); this._popper && this._popper.destroy(), this._menu.classList.remove(Ze), this._element.classList.remove(Ze), this._element.setAttribute("aria-expanded", "false"), me.removeDataAttribute(this._menu, "popper"), he.trigger(this._element, "hidden.bs.dropdown", t) } } _getConfig(t) { if ("object" == typeof (t = super._getConfig(t)).reference && !Bt(t.reference) && "function" != typeof t.reference.getBoundingClientRect) throw new TypeError(`${qe.toUpperCase()}: Option "reference" provided type "object" without a required "getBoundingClientRect" method.`); return t } _createPopper() { if (void 0 === t) throw new TypeError("Bootstrap's dropdowns require Popper (https://popper.js.org)"); let e = this._element; "parent" === this._config.reference ? e = this._parent : Bt(this._config.reference) ? e = Rt(this._config.reference) : "object" == typeof this._config.reference && (e = this._config.reference); const i = this._getPopperConfig(); this._popper = St(e, this._menu, i) } _isShown() { return this._menu.classList.contains(Ze) } _getPlacement() { const t = this._parent; if (t.classList.contains("dropend")) return ni; if (t.classList.contains("dropstart")) return oi; if (t.classList.contains("dropup-center")) return "top"; if (t.classList.contains("dropdown-center")) return "bottom"; const e = "end" === getComputedStyle(this._menu).getPropertyValue("--bs-position").trim(); return t.classList.contains("dropup") ? e ? ei : ti : e ? si : ii } _detectNavbar() { return null !== this._element.closest(".navbar") } _getOffset() { const { offset: t } = this._config; return "string" == typeof t ? t.split(",").map((t => Number.parseInt(t, 10))) : "function" == typeof t ? e => t(e, this._element) : t } _getPopperConfig() { const t = { placement: this._getPlacement(), modifiers: [{ name: "preventOverflow", options: { boundary: this._config.boundary } }, { name: "offset", options: { offset: this._getOffset() } }] }; return (this._inNavbar || "static" === this._config.display) && (me.setDataAttribute(this._menu, "popper", "static"), t.modifiers = [{ name: "applyStyles", enabled: !1 }]), { ...t, ..."function" == typeof this._config.popperConfig ? this._config.popperConfig(t) : this._config.popperConfig } } _selectMenuItem({ key: t, target: e }) { const i = ke.find(".dropdown-menu .dropdown-item:not(.disabled):not(:disabled)", this._menu).filter((t => zt(t))); i.length && Xt(i, e, t === Ye, !i.includes(e)).focus() } static jQueryInterface(t) { return this.each((function () { const e = li.getOrCreateInstance(this, t); if ("string" == typeof t) { if (void 0 === e[t]) throw new TypeError(`No method named "${t}"`); e[t]() } })) } static clearMenus(t) { if (2 === t.button || "keyup" === t.type && "Tab" !== t.key) return; const e = ke.find(Ge); for (const i of e) { const e = li.getInstance(i); if (!e || !1 === e._config.autoClose) continue; const s = t.composedPath(), n = s.includes(e._menu); if (s.includes(e._element) || "inside" === e._config.autoClose && !n || "outside" === e._config.autoClose && n) continue; if (e._menu.contains(t.target) && ("keyup" === t.type && "Tab" === t.key || /input|select|option|textarea|form/i.test(t.target.tagName))) continue; const o = { relatedTarget: e._element }; "click" === t.type && (o.clickEvent = t), e._completeHide(o) } } static dataApiKeydownHandler(t) { const e = /input|textarea/i.test(t.target.tagName), i = "Escape" === t.key, s = [Ue, Ye].includes(t.key); if (!s && !i) return; if (e && !i) return; t.preventDefault(); const n = ke.findOne(Qe, t.delegateTarget.parentNode), o = li.getOrCreateInstance(n); if (s) return t.stopPropagation(), o.show(), void o._selectMenuItem(t); o._isShown() && (t.stopPropagation(), o.hide(), n.focus()) } } he.on(document, Ke, Qe, li.dataApiKeydownHandler), he.on(document, Ke, Je, li.dataApiKeydownHandler), he.on(document, Xe, li.clearMenus), he.on(document, "keyup.bs.dropdown.data-api", li.clearMenus), he.on(document, Xe, Qe, (function (t) { t.preventDefault(), li.getOrCreateInstance(this).toggle() })), qt(li); const ci = ".fixed-top, .fixed-bottom, .is-fixed, .sticky-top", hi = ".sticky-top", di = "padding-right", ui = "margin-right"; class pi { constructor() { this._element = document.body } getWidth() { const t = document.documentElement.clientWidth; return Math.abs(window.innerWidth - t) } hide() { const t = this.getWidth(); this._disableOverFlow(), this._setElementAttributes(this._element, di, (e => e + t)), this._setElementAttributes(ci, di, (e => e + t)), this._setElementAttributes(hi, ui, (e => e - t)) } reset() { this._resetElementAttributes(this._element, "overflow"), this._resetElementAttributes(this._element, di), this._resetElementAttributes(ci, di), this._resetElementAttributes(hi, ui) } isOverflowing() { return this.getWidth() > 0 } _disableOverFlow() { this._saveInitialAttribute(this._element, "overflow"), this._element.style.overflow = "hidden" } _setElementAttributes(t, e, i) { const s = this.getWidth(); this._applyManipulationCallback(t, (t => { if (t !== this._element && window.innerWidth > t.clientWidth + s) return; this._saveInitialAttribute(t, e); const n = window.getComputedStyle(t).getPropertyValue(e); t.style.setProperty(e, `${i(Number.parseFloat(n))}px`) })) } _saveInitialAttribute(t, e) { const i = t.style.getPropertyValue(e); i && me.setDataAttribute(t, e, i) } _resetElementAttributes(t, e) { this._applyManipulationCallback(t, (t => { const i = me.getDataAttribute(t, e); null !== i ? (me.removeDataAttribute(t, e), t.style.setProperty(e, i)) : t.style.removeProperty(e) })) } _applyManipulationCallback(t, e) { if (Bt(t)) e(t); else for (const i of ke.find(t, this._element)) e(i) } } const fi = "show", gi = "mousedown.bs.backdrop", mi = { className: "modal-backdrop", clickCallback: null, isAnimated: !1, isVisible: !0, rootElement: "body" }, bi = { className: "string", clickCallback: "(function|null)", isAnimated: "boolean", isVisible: "boolean", rootElement: "(element|string)" }; class _i extends be { constructor(t) { super(), this._config = this._getConfig(t), this._isAppended = !1, this._element = null } static get Default() { return mi } static get DefaultType() { return bi } static get NAME() { return "backdrop" } show(t) { if (!this._config.isVisible) return void Ut(t); this._append(); const e = this._getElement(); this._config.isAnimated && Vt(e), e.classList.add(fi), this._emulateAnimation((() => { Ut(t) })) } hide(t) { this._config.isVisible ? (this._getElement().classList.remove(fi), this._emulateAnimation((() => { this.dispose(), Ut(t) }))) : Ut(t) } dispose() { this._isAppended && (he.off(this._element, gi), this._element.remove(), this._isAppended = !1) } _getElement() { if (!this._element) { const t = document.createElement("div"); t.className = this._config.className, this._config.isAnimated && t.classList.add("fade"), this._element = t } return this._element } _configAfterMerge(t) { return t.rootElement = Rt(t.rootElement), t } _append() { if (this._isAppended) return; const t = this._getElement(); this._config.rootElement.append(t), he.on(t, gi, (() => { Ut(this._config.clickCallback) })), this._isAppended = !0 } _emulateAnimation(t) { Yt(t, this._getElement(), this._config.isAnimated) } } const yi = ".bs.focustrap", wi = "backward", vi = { autofocus: !0, trapElement: null }, xi = { autofocus: "boolean", trapElement: "element" }; class ki extends be { constructor(t) { super(), this._config = this._getConfig(t), this._isActive = !1, this._lastTabNavDirection = null } static get Default() { return vi } static get DefaultType() { return xi } static get NAME() { return "focustrap" } activate() { this._isActive || (this._config.autofocus && this._config.trapElement.focus(), he.off(document, yi), he.on(document, "focusin.bs.focustrap", (t => this._handleFocusin(t))), he.on(document, "keydown.tab.bs.focustrap", (t => this._handleKeydown(t))), this._isActive = !0) } deactivate() { this._isActive && (this._isActive = !1, he.off(document, yi)) } _handleFocusin(t) { const { trapElement: e } = this._config; if (t.target === document || t.target === e || e.contains(t.target)) return; const i = ke.focusableChildren(e); 0 === i.length ? e.focus() : this._lastTabNavDirection === wi ? i[i.length - 1].focus() : i[0].focus() } _handleKeydown(t) { "Tab" === t.key && (this._lastTabNavDirection = t.shiftKey ? wi : "forward") } } const Ei = "hidden.bs.modal", Ci = "show.bs.modal", Ai = "modal-open", Mi = "show", Si = "modal-static", Oi = { backdrop: !0, focus: !0, keyboard: !0 }, Pi = { backdrop: "(boolean|string)", focus: "boolean", keyboard: "boolean" }; class Ti extends _e { constructor(t, e) { super(t, e), this._dialog = ke.findOne(".modal-dialog", this._element), this._backdrop = this._initializeBackDrop(), this._focustrap = this._initializeFocusTrap(), this._isShown = !1, this._isTransitioning = !1, this._scrollBar = new pi, this._addEventListeners() } static get Default() { return Oi } static get DefaultType() { return Pi } static get NAME() { return "modal" } toggle(t) { return this._isShown ? this.hide() : this.show(t) } show(t) { this._isShown || this._isTransitioning || he.trigger(this._element, Ci, { relatedTarget: t }).defaultPrevented || (this._isShown = !0, this._isTransitioning = !0, this._scrollBar.hide(), document.body.classList.add(Ai), this._adjustDialog(), this._backdrop.show((() => this._showElement(t)))) } hide() { this._isShown && !this._isTransitioning && (he.trigger(this._element, "hide.bs.modal").defaultPrevented || (this._isShown = !1, this._isTransitioning = !0, this._focustrap.deactivate(), this._element.classList.remove(Mi), this._queueCallback((() => this._hideModal()), this._element, this._isAnimated()))) } dispose() { for (const t of [window, this._dialog]) he.off(t, ".bs.modal"); this._backdrop.dispose(), this._focustrap.deactivate(), super.dispose() } handleUpdate() { this._adjustDialog() } _initializeBackDrop() { return new _i({ isVisible: Boolean(this._config.backdrop), isAnimated: this._isAnimated() }) } _initializeFocusTrap() { return new ki({ trapElement: this._element }) } _showElement(t) { document.body.contains(this._element) || document.body.append(this._element), this._element.style.display = "block", this._element.removeAttribute("aria-hidden"), this._element.setAttribute("aria-modal", !0), this._element.setAttribute("role", "dialog"), this._element.scrollTop = 0; const e = ke.findOne(".modal-body", this._dialog); e && (e.scrollTop = 0), Vt(this._element), this._element.classList.add(Mi), this._queueCallback((() => { this._config.focus && this._focustrap.activate(), this._isTransitioning = !1, he.trigger(this._element, "shown.bs.modal", { relatedTarget: t }) }), this._dialog, this._isAnimated()) } _addEventListeners() { he.on(this._element, "keydown.dismiss.bs.modal", (t => { if ("Escape" === t.key) return this._config.keyboard ? (t.preventDefault(), void this.hide()) : void this._triggerBackdropTransition() })), he.on(window, "resize.bs.modal", (() => { this._isShown && !this._isTransitioning && this._adjustDialog() })), he.on(this._element, "mousedown.dismiss.bs.modal", (t => { t.target === t.currentTarget && ("static" !== this._config.backdrop ? this._config.backdrop && this.hide() : this._triggerBackdropTransition()) })) } _hideModal() { this._element.style.display = "none", this._element.setAttribute("aria-hidden", !0), this._element.removeAttribute("aria-modal"), this._element.removeAttribute("role"), this._isTransitioning = !1, this._backdrop.hide((() => { document.body.classList.remove(Ai), this._resetAdjustments(), this._scrollBar.reset(), he.trigger(this._element, Ei) })) } _isAnimated() { return this._element.classList.contains("fade") } _triggerBackdropTransition() { if (he.trigger(this._element, "hidePrevented.bs.modal").defaultPrevented) return; const t = this._element.scrollHeight > document.documentElement.clientHeight, e = this._element.style.overflowY; "hidden" === e || this._element.classList.contains(Si) || (t || (this._element.style.overflowY = "hidden"), this._element.classList.add(Si), this._queueCallback((() => { this._element.classList.remove(Si), this._queueCallback((() => { this._element.style.overflowY = e }), this._dialog) }), this._dialog), this._element.focus()) } _adjustDialog() { const t = this._element.scrollHeight > document.documentElement.clientHeight, e = this._scrollBar.getWidth(), i = e > 0; if (i && !t) { const t = $t() ? "paddingLeft" : "paddingRight"; this._element.style[t] = `${e}px` } if (!i && t) { const t = $t() ? "paddingRight" : "paddingLeft"; this._element.style[t] = `${e}px` } } _resetAdjustments() { this._element.style.paddingLeft = "", this._element.style.paddingRight = "" } static jQueryInterface(t, e) { return this.each((function () { const i = Ti.getOrCreateInstance(this, t); if ("string" == typeof t) { if (void 0 === i[t]) throw new TypeError(`No method named "${t}"`); i[t](e) } })) } } he.on(document, "click.bs.modal.data-api", '[data-bs-toggle="modal"]', (function (t) { const e = Dt(this);["A", "AREA"].includes(this.tagName) && t.preventDefault(), he.one(e, Ci, (t => { t.defaultPrevented || he.one(e, Ei, (() => { zt(this) && this.focus() })) })); const i = ke.findOne(".modal.show"); i && Ti.getInstance(i).hide(), Ti.getOrCreateInstance(e).toggle(this) })), ye(Ti), qt(Ti); const Li = "show", Di = "showing", Ii = "hiding", Bi = ".offcanvas.show", Ri = "hidePrevented.bs.offcanvas", zi = "hidden.bs.offcanvas", ji = { backdrop: !0, keyboard: !0, scroll: !1 }, Ni = { backdrop: "(boolean|string)", keyboard: "boolean", scroll: "boolean" }; class Fi extends _e { constructor(t, e) { super(t, e), this._isShown = !1, this._backdrop = this._initializeBackDrop(), this._focustrap = this._initializeFocusTrap(), this._addEventListeners() } static get Default() { return ji } static get DefaultType() { return Ni } static get NAME() { return "offcanvas" } toggle(t) { return this._isShown ? this.hide() : this.show(t) } show(t) { this._isShown || he.trigger(this._element, "show.bs.offcanvas", { relatedTarget: t }).defaultPrevented || (this._isShown = !0, this._backdrop.show(), this._config.scroll || (new pi).hide(), this._element.setAttribute("aria-modal", !0), this._element.setAttribute("role", "dialog"), this._element.classList.add(Di), this._queueCallback((() => { this._config.scroll && !this._config.backdrop || this._focustrap.activate(), this._element.classList.add(Li), this._element.classList.remove(Di), he.trigger(this._element, "shown.bs.offcanvas", { relatedTarget: t }) }), this._element, !0)) } hide() { this._isShown && (he.trigger(this._element, "hide.bs.offcanvas").defaultPrevented || (this._focustrap.deactivate(), this._element.blur(), this._isShown = !1, this._element.classList.add(Ii), this._backdrop.hide(), this._queueCallback((() => { this._element.classList.remove(Li, Ii), this._element.removeAttribute("aria-modal"), this._element.removeAttribute("role"), this._config.scroll || (new pi).reset(), he.trigger(this._element, zi) }), this._element, !0))) } dispose() { this._backdrop.dispose(), this._focustrap.deactivate(), super.dispose() } _initializeBackDrop() { const t = Boolean(this._config.backdrop); return new _i({ className: "offcanvas-backdrop", isVisible: t, isAnimated: !0, rootElement: this._element.parentNode, clickCallback: t ? () => { "static" !== this._config.backdrop ? this.hide() : he.trigger(this._element, Ri) } : null }) } _initializeFocusTrap() { return new ki({ trapElement: this._element }) } _addEventListeners() { he.on(this._element, "keydown.dismiss.bs.offcanvas", (t => { "Escape" === t.key && (this._config.keyboard ? this.hide() : he.trigger(this._element, Ri)) })) } static jQueryInterface(t) { return this.each((function () { const e = Fi.getOrCreateInstance(this, t); if ("string" == typeof t) { if (void 0 === e[t] || t.startsWith("_") || "constructor" === t) throw new TypeError(`No method named "${t}"`); e[t](this) } })) } } he.on(document, "click.bs.offcanvas.data-api", '[data-bs-toggle="offcanvas"]', (function (t) { const e = Dt(this); if (["A", "AREA"].includes(this.tagName) && t.preventDefault(), jt(this)) return; he.one(e, zi, (() => { zt(this) && this.focus() })); const i = ke.findOne(Bi); i && i !== e && Fi.getInstance(i).hide(), Fi.getOrCreateInstance(e).toggle(this) })), he.on(window, "load.bs.offcanvas.data-api", (() => { for (const t of ke.find(Bi)) Fi.getOrCreateInstance(t).show() })), he.on(window, "resize.bs.offcanvas", (() => { for (const t of ke.find("[aria-modal][class*=show][class*=offcanvas-]")) "fixed" !== getComputedStyle(t).position && Fi.getOrCreateInstance(t).hide() })), ye(Fi), qt(Fi); const Vi = new Set(["background", "cite", "href", "itemtype", "longdesc", "poster", "src", "xlink:href"]), Hi = /^(?:(?:https?|mailto|ftp|tel|file|sms):|[^#&/:?]*(?:[#/?]|$))/i, Wi = /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[\d+/a-z]+=*$/i, $i = (t, e) => { const i = t.nodeName.toLowerCase(); return e.includes(i) ? !Vi.has(i) || Boolean(Hi.test(t.nodeValue) || Wi.test(t.nodeValue)) : e.filter((t => t instanceof RegExp)).some((t => t.test(i))) }, qi = { "*": ["class", "dir", "id", "lang", "role", /^aria-[\w-]*$/i], a: ["target", "href", "title", "rel"], area: [], b: [], br: [], col: [], code: [], div: [], em: [], hr: [], h1: [], h2: [], h3: [], h4: [], h5: [], h6: [], i: [], img: ["src", "srcset", "alt", "title", "width", "height"], li: [], ol: [], p: [], pre: [], s: [], small: [], span: [], sub: [], sup: [], strong: [], u: [], ul: [] }, Ui = { allowList: qi, content: {}, extraClass: "", html: !1, sanitize: !0, sanitizeFn: null, template: "<div></div>" }, Yi = { allowList: "object", content: "object", extraClass: "(string|function)", html: "boolean", sanitize: "boolean", sanitizeFn: "(null|function)", template: "string" }, Xi = { entry: "(string|element|function|null)", selector: "(string|element)" }; class Ki extends be { constructor(t) { super(), this._config = this._getConfig(t) } static get Default() { return Ui } static get DefaultType() { return Yi } static get NAME() { return "TemplateFactory" } getContent() { return Object.values(this._config.content).map((t => this._resolvePossibleFunction(t))).filter(Boolean) } hasContent() { return this.getContent().length > 0 } changeContent(t) { return this._checkContent(t), this._config.content = { ...this._config.content, ...t }, this } toHtml() { const t = document.createElement("div"); t.innerHTML = this._maybeSanitize(this._config.template); for (const [e, i] of Object.entries(this._config.content)) this._setContent(t, i, e); const e = t.children[0], i = this._resolvePossibleFunction(this._config.extraClass); return i && e.classList.add(...i.split(" ")), e } _typeCheckConfig(t) { super._typeCheckConfig(t), this._checkContent(t.content) } _checkContent(t) { for (const [e, i] of Object.entries(t)) super._typeCheckConfig({ selector: e, entry: i }, Xi) } _setContent(t, e, i) { const s = ke.findOne(i, t); s && ((e = this._resolvePossibleFunction(e)) ? Bt(e) ? this._putElementInTemplate(Rt(e), s) : this._config.html ? s.innerHTML = this._maybeSanitize(e) : s.textContent = e : s.remove()) } _maybeSanitize(t) { return this._config.sanitize ? function (t, e, i) { if (!t.length) return t; if (i && "function" == typeof i) return i(t); const s = (new window.DOMParser).parseFromString(t, "text/html"), n = [].concat(...s.body.querySelectorAll("*")); for (const t of n) { const i = t.nodeName.toLowerCase(); if (!Object.keys(e).includes(i)) { t.remove(); continue } const s = [].concat(...t.attributes), n = [].concat(e["*"] || [], e[i] || []); for (const e of s) $i(e, n) || t.removeAttribute(e.nodeName) } return s.body.innerHTML }(t, this._config.allowList, this._config.sanitizeFn) : t } _resolvePossibleFunction(t) { return "function" == typeof t ? t(this) : t } _putElementInTemplate(t, e) { if (this._config.html) return e.innerHTML = "", void e.append(t); e.textContent = t.textContent } } const Zi = new Set(["sanitize", "allowList", "sanitizeFn"]), Qi = "fade", Gi = "show", Ji = ".modal", ts = "hide.bs.modal", es = "hover", is = "focus", ss = { AUTO: "auto", TOP: "top", RIGHT: $t() ? "left" : "right", BOTTOM: "bottom", LEFT: $t() ? "right" : "left" }, ns = { allowList: qi, animation: !0, boundary: "clippingParents", container: !1, customClass: "", delay: 0, fallbackPlacements: ["top", "right", "bottom", "left"], html: !1, offset: [0, 0], placement: "top", popperConfig: null, sanitize: !0, sanitizeFn: null, selector: !1, template: '<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>', title: "", trigger: "hover focus" }, os = { allowList: "object", animation: "boolean", boundary: "(string|element)", container: "(string|element|boolean)", customClass: "(string|function)", delay: "(number|object)", fallbackPlacements: "array", html: "boolean", offset: "(array|string|function)", placement: "(string|function)", popperConfig: "(null|object|function)", sanitize: "boolean", sanitizeFn: "(null|function)", selector: "(string|boolean)", template: "string", title: "(string|element|function)", trigger: "string" }; class as extends _e { constructor(e, i) { if (void 0 === t) throw new TypeError("Bootstrap's tooltips require Popper (https://popper.js.org)"); super(e, i), this._isEnabled = !0, this._timeout = 0, this._isHovered = !1, this._activeTrigger = {}, this._popper = null, this._templateFactory = null, this._newContent = null, this.tip = null, this._setListeners() } static get Default() { return ns } static get DefaultType() { return os } static get NAME() { return "tooltip" } enable() { this._isEnabled = !0 } disable() { this._isEnabled = !1 } toggleEnabled() { this._isEnabled = !this._isEnabled } toggle(t) { if (this._isEnabled) { if (t) { const e = this._initializeOnDelegatedTarget(t); return e._activeTrigger.click = !e._activeTrigger.click, void (e._isWithActiveTrigger() ? e._enter() : e._leave()) } this._isShown() ? this._leave() : this._enter() } } dispose() { clearTimeout(this._timeout), he.off(this._element.closest(Ji), ts, this._hideModalHandler), this.tip && this.tip.remove(), this._disposePopper(), super.dispose() } show() { if ("none" === this._element.style.display) throw new Error("Please use show on visible elements"); if (!this._isWithContent() || !this._isEnabled) return; const t = he.trigger(this._element, this.constructor.eventName("show")), e = (Nt(this._element) || this._element.ownerDocument.documentElement).contains(this._element); if (t.defaultPrevented || !e) return; this.tip && (this.tip.remove(), this.tip = null); const i = this._getTipElement(); this._element.setAttribute("aria-describedby", i.getAttribute("id")); const { container: s } = this._config; if (this._element.ownerDocument.documentElement.contains(this.tip) || (s.append(i), he.trigger(this._element, this.constructor.eventName("inserted"))), this._popper ? this._popper.update() : this._popper = this._createPopper(i), i.classList.add(Gi), "ontouchstart" in document.documentElement) for (const t of [].concat(...document.body.children)) he.on(t, "mouseover", Ft); this._queueCallback((() => { const t = this._isHovered; this._isHovered = !1, he.trigger(this._element, this.constructor.eventName("shown")), t && this._leave() }), this.tip, this._isAnimated()) } hide() { if (!this._isShown()) return; if (he.trigger(this._element, this.constructor.eventName("hide")).defaultPrevented) return; const t = this._getTipElement(); if (t.classList.remove(Gi), "ontouchstart" in document.documentElement) for (const t of [].concat(...document.body.children)) he.off(t, "mouseover", Ft); this._activeTrigger.click = !1, this._activeTrigger.focus = !1, this._activeTrigger.hover = !1, this._isHovered = !1, this._queueCallback((() => { this._isWithActiveTrigger() || (this._isHovered || t.remove(), this._element.removeAttribute("aria-describedby"), he.trigger(this._element, this.constructor.eventName("hidden")), this._disposePopper()) }), this.tip, this._isAnimated()) } update() { this._popper && this._popper.update() } _isWithContent() { return Boolean(this._getTitle()) } _getTipElement() { return this.tip || (this.tip = this._createTipElement(this._newContent || this._getContentForTemplate())), this.tip } _createTipElement(t) { const e = this._getTemplateFactory(t).toHtml(); if (!e) return null; e.classList.remove(Qi, Gi), e.classList.add(`bs-${this.constructor.NAME}-auto`); const i = (t => { do { t += Math.floor(1e6 * Math.random()) } while (document.getElementById(t)); return t })(this.constructor.NAME).toString(); return e.setAttribute("id", i), this._isAnimated() && e.classList.add(Qi), e } setContent(t) { this._newContent = t, this._isShown() && (this._disposePopper(), this.show()) } _getTemplateFactory(t) { return this._templateFactory ? this._templateFactory.changeContent(t) : this._templateFactory = new Ki({ ...this._config, content: t, extraClass: this._resolvePossibleFunction(this._config.customClass) }), this._templateFactory } _getContentForTemplate() { return { ".tooltip-inner": this._getTitle() } } _getTitle() { return this._resolvePossibleFunction(this._config.title) || this._config.originalTitle } _initializeOnDelegatedTarget(t) { return this.constructor.getOrCreateInstance(t.delegateTarget, this._getDelegateConfig()) } _isAnimated() { return this._config.animation || this.tip && this.tip.classList.contains(Qi) } _isShown() { return this.tip && this.tip.classList.contains(Gi) } _createPopper(t) { const e = "function" == typeof this._config.placement ? this._config.placement.call(this, t, this._element) : this._config.placement, i = ss[e.toUpperCase()]; return St(this._element, t, this._getPopperConfig(i)) } _getOffset() { const { offset: t } = this._config; return "string" == typeof t ? t.split(",").map((t => Number.parseInt(t, 10))) : "function" == typeof t ? e => t(e, this._element) : t } _resolvePossibleFunction(t) { return "function" == typeof t ? t.call(this._element) : t } _getPopperConfig(t) { const e = { placement: t, modifiers: [{ name: "flip", options: { fallbackPlacements: this._config.fallbackPlacements } }, { name: "offset", options: { offset: this._getOffset() } }, { name: "preventOverflow", options: { boundary: this._config.boundary } }, { name: "arrow", options: { element: `.${this.constructor.NAME}-arrow` } }, { name: "preSetPlacement", enabled: !0, phase: "beforeMain", fn: t => { this._getTipElement().setAttribute("data-popper-placement", t.state.placement) } }] }; return { ...e, ..."function" == typeof this._config.popperConfig ? this._config.popperConfig(e) : this._config.popperConfig } } _setListeners() { const t = this._config.trigger.split(" "); for (const e of t) if ("click" === e) he.on(this._element, this.constructor.eventName("click"), this._config.selector, (t => this.toggle(t))); else if ("manual" !== e) { const t = e === es ? this.constructor.eventName("mouseenter") : this.constructor.eventName("focusin"), i = e === es ? this.constructor.eventName("mouseleave") : this.constructor.eventName("focusout"); he.on(this._element, t, this._config.selector, (t => { const e = this._initializeOnDelegatedTarget(t); e._activeTrigger["focusin" === t.type ? is : es] = !0, e._enter() })), he.on(this._element, i, this._config.selector, (t => { const e = this._initializeOnDelegatedTarget(t); e._activeTrigger["focusout" === t.type ? is : es] = e._element.contains(t.relatedTarget), e._leave() })) } this._hideModalHandler = () => { this._element && this.hide() }, he.on(this._element.closest(Ji), ts, this._hideModalHandler), this._config.selector ? this._config = { ...this._config, trigger: "manual", selector: "" } : this._fixTitle() } _fixTitle() { const t = this._config.originalTitle; t && (this._element.getAttribute("aria-label") || this._element.textContent.trim() || this._element.setAttribute("aria-label", t), this._element.removeAttribute("title")) } _enter() { this._isShown() || this._isHovered ? this._isHovered = !0 : (this._isHovered = !0, this._setTimeout((() => { this._isHovered && this.show() }), this._config.delay.show)) } _leave() { this._isWithActiveTrigger() || (this._isHovered = !1, this._setTimeout((() => { this._isHovered || this.hide() }), this._config.delay.hide)) } _setTimeout(t, e) { clearTimeout(this._timeout), this._timeout = setTimeout(t, e) } _isWithActiveTrigger() { return Object.values(this._activeTrigger).includes(!0) } _getConfig(t) { const e = me.getDataAttributes(this._element); for (const t of Object.keys(e)) Zi.has(t) && delete e[t]; return t = { ...e, ..."object" == typeof t && t ? t : {} }, t = this._mergeConfigObj(t), t = this._configAfterMerge(t), this._typeCheckConfig(t), t } _configAfterMerge(t) { return t.container = !1 === t.container ? document.body : Rt(t.container), "number" == typeof t.delay && (t.delay = { show: t.delay, hide: t.delay }), t.originalTitle = this._element.getAttribute("title") || "", "number" == typeof t.title && (t.title = t.title.toString()), "number" == typeof t.content && (t.content = t.content.toString()), t } _getDelegateConfig() { const t = {}; for (const e in this._config) this.constructor.Default[e] !== this._config[e] && (t[e] = this._config[e]); return t } _disposePopper() { this._popper && (this._popper.destroy(), this._popper = null) } static jQueryInterface(t) { return this.each((function () { const e = as.getOrCreateInstance(this, t); if ("string" == typeof t) { if (void 0 === e[t]) throw new TypeError(`No method named "${t}"`); e[t]() } })) } } qt(as); const rs = { ...as.Default, content: "", offset: [0, 8], placement: "right", template: '<div class="popover" role="tooltip"><div class="popover-arrow"></div><h3 class="popover-header"></h3><div class="popover-body"></div></div>', trigger: "click" }, ls = { ...as.DefaultType, content: "(null|string|element|function)" }; class cs extends as { static get Default() { return rs } static get DefaultType() { return ls } static get NAME() { return "popover" } _isWithContent() { return this._getTitle() || this._getContent() } _getContentForTemplate() { return { ".popover-header": this._getTitle(), ".popover-body": this._getContent() } } _getContent() { return this._resolvePossibleFunction(this._config.content) } static jQueryInterface(t) { return this.each((function () { const e = cs.getOrCreateInstance(this, t); if ("string" == typeof t) { if (void 0 === e[t]) throw new TypeError(`No method named "${t}"`); e[t]() } })) } } qt(cs); const hs = "click.bs.scrollspy", ds = "active", us = "[href]", ps = { offset: null, rootMargin: "0px 0px -25%", smoothScroll: !1, target: null }, fs = { offset: "(number|null)", rootMargin: "string", smoothScroll: "boolean", target: "element" }; class gs extends _e { constructor(t, e) { super(t, e), this._targetLinks = new Map, this._observableSections = new Map, this._rootElement = "visible" === getComputedStyle(this._element).overflowY ? null : this._element, this._activeTarget = null, this._observer = null, this._previousScrollData = { visibleEntryTop: 0, parentScrollTop: 0 }, this.refresh() } static get Default() { return ps } static get DefaultType() { return fs } static get NAME() { return "scrollspy" } refresh() { this._initializeTargetsAndObservables(), this._maybeEnableSmoothScroll(), this._observer ? this._observer.disconnect() : this._observer = this._getNewObserver(); for (const t of this._observableSections.values()) this._observer.observe(t) } dispose() { this._observer.disconnect(), super.dispose() } _configAfterMerge(t) { return t.target = Rt(t.target) || document.body, t } _maybeEnableSmoothScroll() { this._config.smoothScroll && (he.off(this._config.target, hs), he.on(this._config.target, hs, us, (t => { const e = this._observableSections.get(t.target.hash); if (e) { t.preventDefault(); const i = this._rootElement || window, s = e.offsetTop - this._element.offsetTop; if (i.scrollTo) return void i.scrollTo({ top: s, behavior: "smooth" }); i.scrollTop = s } }))) } _getNewObserver() { const t = { root: this._rootElement, threshold: [.1, .5, 1], rootMargin: this._getRootMargin() }; return new IntersectionObserver((t => this._observerCallback(t)), t) } _observerCallback(t) { const e = t => this._targetLinks.get(`#${t.target.id}`), i = t => { this._previousScrollData.visibleEntryTop = t.target.offsetTop, this._process(e(t)) }, s = (this._rootElement || document.documentElement).scrollTop, n = s >= this._previousScrollData.parentScrollTop; this._previousScrollData.parentScrollTop = s; for (const o of t) { if (!o.isIntersecting) { this._activeTarget = null, this._clearActiveClass(e(o)); continue } const t = o.target.offsetTop >= this._previousScrollData.visibleEntryTop; if (n && t) { if (i(o), !s) return } else n || t || i(o) } } _getRootMargin() { return this._config.offset ? `${this._config.offset}px 0px -30%` : this._config.rootMargin } _initializeTargetsAndObservables() { this._targetLinks = new Map, this._observableSections = new Map; const t = ke.find(us, this._config.target); for (const e of t) { if (!e.hash || jt(e)) continue; const t = ke.findOne(e.hash, this._element); zt(t) && (this._targetLinks.set(e.hash, e), this._observableSections.set(e.hash, t)) } } _process(t) { this._activeTarget !== t && (this._clearActiveClass(this._config.target), this._activeTarget = t, t.classList.add(ds), this._activateParents(t), he.trigger(this._element, "activate.bs.scrollspy", { relatedTarget: t })) } _activateParents(t) { if (t.classList.contains("dropdown-item")) ke.findOne(".dropdown-toggle", t.closest(".dropdown")).classList.add(ds); else for (const e of ke.parents(t, ".nav, .list-group")) for (const t of ke.prev(e, ".nav-link, .nav-item > .nav-link, .list-group-item")) t.classList.add(ds) } _clearActiveClass(t) { t.classList.remove(ds); const e = ke.find("[href].active", t); for (const t of e) t.classList.remove(ds) } static jQueryInterface(t) { return this.each((function () { const e = gs.getOrCreateInstance(this, t); if ("string" == typeof t) { if (void 0 === e[t] || t.startsWith("_") || "constructor" === t) throw new TypeError(`No method named "${t}"`); e[t]() } })) } } he.on(window, "load.bs.scrollspy.data-api", (() => { for (const t of ke.find('[data-bs-spy="scroll"]')) gs.getOrCreateInstance(t) })), qt(gs); const ms = "ArrowLeft", bs = "ArrowRight", _s = "ArrowUp", ys = "ArrowDown", ws = "active", vs = "fade", xs = "show", ks = '[data-bs-toggle="tab"], [data-bs-toggle="pill"], [data-bs-toggle="list"]', Es = `.nav-link:not(.dropdown-toggle), .list-group-item:not(.dropdown-toggle), [role="tab"]:not(.dropdown-toggle), ${ks}`; class Cs extends _e { constructor(t) { super(t), this._parent = this._element.closest('.list-group, .nav, [role="tablist"]'), this._parent && (this._setInitialAttributes(this._parent, this._getChildren()), he.on(this._element, "keydown.bs.tab", (t => this._keydown(t)))) } static get NAME() { return "tab" } show() { const t = this._element; if (this._elemIsActive(t)) return; const e = this._getActiveElem(), i = e ? he.trigger(e, "hide.bs.tab", { relatedTarget: t }) : null; he.trigger(t, "show.bs.tab", { relatedTarget: e }).defaultPrevented || i && i.defaultPrevented || (this._deactivate(e, t), this._activate(t, e)) } _activate(t, e) { t && (t.classList.add(ws), this._activate(Dt(t)), this._queueCallback((() => { "tab" === t.getAttribute("role") ? (t.focus(), t.removeAttribute("tabindex"), t.setAttribute("aria-selected", !0), this._toggleDropDown(t, !0), he.trigger(t, "shown.bs.tab", { relatedTarget: e })) : t.classList.add(xs) }), t, t.classList.contains(vs))) } _deactivate(t, e) { t && (t.classList.remove(ws), t.blur(), this._deactivate(Dt(t)), this._queueCallback((() => { "tab" === t.getAttribute("role") ? (t.setAttribute("aria-selected", !1), t.setAttribute("tabindex", "-1"), this._toggleDropDown(t, !1), he.trigger(t, "hidden.bs.tab", { relatedTarget: e })) : t.classList.remove(xs) }), t, t.classList.contains(vs))) } _keydown(t) { if (![ms, bs, _s, ys].includes(t.key)) return; t.stopPropagation(), t.preventDefault(); const e = [bs, ys].includes(t.key), i = Xt(this._getChildren().filter((t => !jt(t))), t.target, e, !0); i && Cs.getOrCreateInstance(i).show() } _getChildren() { return ke.find(Es, this._parent) } _getActiveElem() { return this._getChildren().find((t => this._elemIsActive(t))) || null } _setInitialAttributes(t, e) { this._setAttributeIfNotExists(t, "role", "tablist"); for (const t of e) this._setInitialAttributesOnChild(t) } _setInitialAttributesOnChild(t) { t = this._getInnerElement(t); const e = this._elemIsActive(t), i = this._getOuterElement(t); t.setAttribute("aria-selected", e), i !== t && this._setAttributeIfNotExists(i, "role", "presentation"), e || t.setAttribute("tabindex", "-1"), this._setAttributeIfNotExists(t, "role", "tab"), this._setInitialAttributesOnTargetPanel(t) } _setInitialAttributesOnTargetPanel(t) { const e = Dt(t); e && (this._setAttributeIfNotExists(e, "role", "tabpanel"), t.id && this._setAttributeIfNotExists(e, "aria-labelledby", `#${t.id}`)) } _toggleDropDown(t, e) { const i = this._getOuterElement(t); if (!i.classList.contains("dropdown")) return; const s = (t, s) => { const n = ke.findOne(t, i); n && n.classList.toggle(s, e) }; s(".dropdown-toggle", ws), s(".dropdown-menu", xs), s(".dropdown-item", ws), i.setAttribute("aria-expanded", e) } _setAttributeIfNotExists(t, e, i) { t.hasAttribute(e) || t.setAttribute(e, i) } _elemIsActive(t) { return t.classList.contains(ws) } _getInnerElement(t) { return t.matches(Es) ? t : ke.findOne(Es, t) } _getOuterElement(t) { return t.closest(".nav-item, .list-group-item") || t } static jQueryInterface(t) { return this.each((function () { const e = Cs.getOrCreateInstance(this); if ("string" == typeof t) { if (void 0 === e[t] || t.startsWith("_") || "constructor" === t) throw new TypeError(`No method named "${t}"`); e[t]() } })) } } he.on(document, "click.bs.tab", ks, (function (t) { ["A", "AREA"].includes(this.tagName) && t.preventDefault(), jt(this) || Cs.getOrCreateInstance(this).show() })), he.on(window, "load.bs.tab", (() => { for (const t of ke.find('.active[data-bs-toggle="tab"], .active[data-bs-toggle="pill"], .active[data-bs-toggle="list"]')) Cs.getOrCreateInstance(t) })), qt(Cs); const As = "hide", Ms = "show", Ss = "showing", Os = { animation: "boolean", autohide: "boolean", delay: "number" }, Ps = { animation: !0, autohide: !0, delay: 5e3 }; class Ts extends _e { constructor(t, e) { super(t, e), this._timeout = null, this._hasMouseInteraction = !1, this._hasKeyboardInteraction = !1, this._setListeners() } static get Default() { return Ps } static get DefaultType() { return Os } static get NAME() { return "toast" } show() { he.trigger(this._element, "show.bs.toast").defaultPrevented || (this._clearTimeout(), this._config.animation && this._element.classList.add("fade"), this._element.classList.remove(As), Vt(this._element), this._element.classList.add(Ms, Ss), this._queueCallback((() => { this._element.classList.remove(Ss), he.trigger(this._element, "shown.bs.toast"), this._maybeScheduleHide() }), this._element, this._config.animation)) } hide() { this.isShown() && (he.trigger(this._element, "hide.bs.toast").defaultPrevented || (this._element.classList.add(Ss), this._queueCallback((() => { this._element.classList.add(As), this._element.classList.remove(Ss, Ms), he.trigger(this._element, "hidden.bs.toast") }), this._element, this._config.animation))) } dispose() { this._clearTimeout(), this.isShown() && this._element.classList.remove(Ms), super.dispose() } isShown() { return this._element.classList.contains(Ms) } _maybeScheduleHide() { this._config.autohide && (this._hasMouseInteraction || this._hasKeyboardInteraction || (this._timeout = setTimeout((() => { this.hide() }), this._config.delay))) } _onInteraction(t, e) { switch (t.type) { case "mouseover": case "mouseout": this._hasMouseInteraction = e; break; case "focusin": case "focusout": this._hasKeyboardInteraction = e }if (e) return void this._clearTimeout(); const i = t.relatedTarget; this._element === i || this._element.contains(i) || this._maybeScheduleHide() } _setListeners() { he.on(this._element, "mouseover.bs.toast", (t => this._onInteraction(t, !0))), he.on(this._element, "mouseout.bs.toast", (t => this._onInteraction(t, !1))), he.on(this._element, "focusin.bs.toast", (t => this._onInteraction(t, !0))), he.on(this._element, "focusout.bs.toast", (t => this._onInteraction(t, !1))) } _clearTimeout() { clearTimeout(this._timeout), this._timeout = null } static jQueryInterface(t) { return this.each((function () { const e = Ts.getOrCreateInstance(this, t); if ("string" == typeof t) { if (void 0 === e[t]) throw new TypeError(`No method named "${t}"`); e[t](this) } })) } } ye(Ts), qt(Ts); var Ls = i(455), Ds = i.n(Ls); if (i(357), document.getElementById("ingreso")) { const Lh = document.getElementById("ingreso"); Lh.addEventListener("submit", (function (t) { if (t.preventDefault(), Lh.checkValidity()) { const t = new FormData(Lh); fetch(t.get("endpoint"), { method: "POST", body: t }).then((t => t.json())).then((e => { e.success ? window.location = t.get("redireccion") : Ds().fire({ icon: "error", title: "Error", showClass: { popup: "animate__animated animate__fadeInDown" }, hideClass: { popup: "animate__animated animate__fadeOutUp" }, text: "El usuario y la contraseña no coinciden." }) })).catch((t => console.log(t))) } else t.preventDefault(), t.stopPropagation(); Lh.classList.add("was-validated") })) } if (document.getElementById("cambiar_clave")) { const Dh = document.getElementById("clave_actual"), Ih = document.getElementById("clave_nueva"), Bh = document.getElementById("clave_nueva2"), Rh = document.getElementById("ver_clave_actual"), zh = document.getElementById("ver_nueva_clave"), jh = document.getElementById("ver_nueva_clave2"); Rh.addEventListener("click", (function () { "password" == Dh.getAttribute("type") ? Dh.setAttribute("type", "text") : Dh.setAttribute("type", "password") })), zh.addEventListener("click", (function () { "password" == Ih.getAttribute("type") ? Ih.setAttribute("type", "text") : Ih.setAttribute("type", "password") })), jh.addEventListener("click", (function () { "password" == Bh.getAttribute("type") ? Bh.setAttribute("type", "text") : Bh.setAttribute("type", "password") })); const Nh = document.getElementById("cambiar_clave"); Nh.addEventListener("submit", (function (t) { if (t.preventDefault(), Nh.checkValidity()) { const t = new FormData(Nh); fetch(t.get("endpoint"), { method: "POST", body: t }).then((t => t.json())).then((e => { console.log(e.data), e.success ? (Ds().fire({ icon: "success", title: "Actualización Exitosa", showConfirmButton: !1, showClass: { popup: "animate__animated animate__fadeInDown" }, hideClass: { popup: "animate__animated animate__fadeOutUp" }, text: t.get("msgtxt"), timer: 2e3 }), setTimeout((() => { location.reload() }), 2e3)) : (console.log(e), Ds().fire({ icon: "error", title: "Inormación Incorrecta", showClass: { popup: "animate__animated animate__fadeInDown" }, hideClass: { popup: "animate__animated animate__fadeOutUp" }, text: e.data, showConfirmButton: !1, timer: 2e3 })) })).catch((t => console.log(t))), Nh.classList.add("was-validated") } else t.preventDefault(), t.stopPropagation(); Nh.classList.add("was-validated") })) } if (document.getElementById("menues")) { const Fh = document.querySelectorAll(".menu-item"), Vh = document.getElementById("menues"); "si" == Vh.dataset.ocultarmenues ? Fh.forEach((t => { t.remove() })) : "si" == Vh.dataset.ocultarmantenimiento && document.querySelector(".admin").remove() } function Is(t) { if (t.target.getAttribute("data-editar")) { const i = t.target, s = i.dataset.url, n = i.dataset.editar; if (document.getElementById("editar_nombre_comite")) { document.getElementById("elemento_id").value = n; const t = document.getElementById("editar_nombre_comite"); fetch(s).then((t => t.json())).then((e => { document.getElementById("nombrecomite").value = e.title.rendered, Rs(t) })).catch((t => console.log(t))) } if (document.getElementById("editar_acuerdo")) { var e = ""; document.getElementById("elemento_id").value = i.dataset.editar, document.getElementById("asignar_id").value = i.dataset.usr_id, fetch(s).then((t => t.json())).then((t => { document.getElementById("titulo_acuerdo").innerHTML = "Editar Acuerdo-" + t.meta._n_acuerdo, document.getElementById("f_compromiso").value = t.meta._f_compromiso, document.getElementById("vigente").value = t.meta._vigente, 1 == t.meta._vigente ? (document.getElementById("vigente").setAttribute("checked", ""), document.getElementById("lbl_vigente").innerHTML = "Vigente") : (document.getElementById("vigente").removeAttribute("checked"), document.getElementById("lbl_vigente").innerHTML = "Ejecutado"), document.getElementById("f_seguimiento").value = t.meta._f_seguimiento, e = t.meta._f_seguimiento, document.getElementById("asignar_id").value = t.meta._asignar_id; const i = t.content.rendered.replace(/<\/?[^>]+(>|$)/g, ""); document.getElementById("contenido").value = i, Rs(document.getElementById("editar_acuerdo")) })).catch((t => console.log(t))), document.getElementById("btn_cerrar").addEventListener("click", (function () { location.reload() })), console.log(e), document.getElementById("vigente").addEventListener("change", (function () { 1 == document.getElementById("vigente").value ? (document.getElementById("vigente").value = 0, document.getElementById("vigente").removeAttribute("checked", ""), document.getElementById("lbl_vigente").innerHTML = "Ejecutado", document.getElementById("f_seguimiento").removeAttribute("disabled"), document.getElementById("f_seguimiento").value = e) : (document.getElementById("vigente").value = 1, document.getElementById("vigente").setAttribute("checked", ""), document.getElementById("lbl_vigente").innerHTML = "Vigente", document.getElementById("f_seguimiento").setAttribute("disabled", ""), document.getElementById("f_seguimiento").value = "") })) } } if (t.target.getAttribute("data-eliminar")) { const e = t.target.dataset.post_id, i = document.getElementById(e), s = "titulo_" + t.target.getAttribute("data-eliminar"), n = document.getElementById(s).value, o = "msg_" + t.target.getAttribute("data-eliminar"), a = document.getElementById(o).value, r = "msg2_" + t.target.getAttribute("data-eliminar"); document.getElementById(r).value, Ds().fire({ icon: "warning", title: "Eliminar " + n, showClass: { popup: "animate__animated animate__fadeInDown" }, hideClass: { popup: "animate__animated animate__fadeOutUp" }, text: a, showCancelButton: !0, cancelButtonText: "Cancelar", confirmButtonColor: "#3085d6", cancelButtonColor: "#d33", confirmButtonText: "Sí, eliminar " + n }).then((t => { t.isConfirmed && function (t) { const e = new FormData(t); fetch(e.get("endpoint"), { method: "POST", body: e }).then((t => t.json())).then((t => { t.success ? (Ds().fire({ icon: "success", title: "Eliminación", showConfirmButton: !1, showClass: { popup: "animate__animated animate__fadeInDown" }, hideClass: { popup: "animate__animated animate__fadeOutUp" }, text: "Eliminación exitosa", timer: 2e3 }), setTimeout((() => { location.reload() }), 2e3), elemento.remove()) : console.log(t) })).catch((t => console.log(t))) }(i) })) } } if (document.addEventListener("click", Is), document.addEventListener("touchstart", Is), document.getElementById("btn_agregar_comite") && document.getElementById("btn_agregar_comite").addEventListener("click", (function () { Rs(document.getElementById("agregar_comite")) })), document.getElementById("agregar_acta")) { const Hh = document.getElementById("n_acta"), Wh = Hh.dataset.n_actas.split(","); Hh.addEventListener("change", (function () { Wh.forEach((t => { t == Hh.value && (Ds().fire({ icon: "error", title: "Error en Consecutivo", showConfirmButton: !1, showClass: { popup: "animate__animated animate__fadeInDown" }, hideClass: { popup: "animate__animated animate__fadeOutUp" }, text: "El número de Acta ya existe.", timer: 2e3 }), Hh.focus()) })) })), document.getElementById("btn_agregar_acta").addEventListener("click", (function () { Rs(document.getElementById("agregar_acta")) })) } if (document.getElementById("mantener_membresia")) { const $h = document.getElementById("mantener_membresia"); let qh = 0; const Uh = document.getElementById("btn_agregar_miembro"), Yh = document.getElementById("btn_modificar_miembro"), Xh = document.getElementById("btn_eliminar_miembro"), Kh = new FormData, Zh = document.getElementById("usr_id"), Qh = document.getElementById("comite_id"), Gh = document.getElementById("endpoint").value, Jh = document.getElementById("nonce").value, td = document.getElementById("action").value; function ed(t, e) { Kh.append("usr_id", t), Kh.append("comite_id", e), Kh.append("boton", "duplicados"), Kh.append("nonce", Jh), Kh.append("action", td), fetch(Gh, { method: "POST", body: Kh }).then((t => t.json())).then((t => { t.success ? "agregar" == t.data ? (qh = 0, Uh.classList.remove("disabled"), Yh.classList.add("disabled"), Xh.classList.add("disabled")) : (qh = t.data.ID, document.getElementById("puesto_id").value = t.data.puesto_id, document.getElementById("f_inicio").value = t.data.f_inicio, document.getElementById("f_final").value = t.data.f_final, Uh.classList.add("disabled"), Yh.classList.remove("disabled"), Xh.classList.remove("disabled")) : console.log(t) })).catch((t => console.log(t))) } document.getElementById("btn_cerrar_miembro").addEventListener("click", (function () { location.reload() })), Zh.addEventListener("change", (function () { ed(Zh.value, Qh.value) })), Qh.addEventListener("change", (function () { ed(Zh.value, Qh.value) })), Uh.addEventListener("click", (function () { Bs($h, qh, "agregar_miembro") })), Yh.addEventListener("click", (function () { Bs($h, qh, "modificar_miembro") })), Xh.addEventListener("click", (function () { Bs($h, qh, "eliminar") })) } if (document.getElementById("mantener_puesto")) { const id = document.getElementById("mantener_puesto"), sd = document.getElementById("btn_agregar_puesto2"), nd = document.getElementById("btn_modificar_puesto"), od = document.getElementById("btn_eliminar_puesto"), ad = document.getElementById("nombrePuesto"); let rd = "0"; document.getElementById("btn_cerrar_puesto").addEventListener("click", (function () { location.reload() })), ad.addEventListener("change", (function () { let t = ad.value, e = parseInt(t.trim().substring(0, 1)); isNaN(e) ? "" != t ? (console.log("Nombre", t), sd.classList.remove("disabled"), nd.classList.add("disabled"), od.classList.add("disabled")) : (sd.classList.add("disabled"), nd.classList.add("disabled"), od.classList.add("disabled")) : (sd.classList.add("disabled"), nd.classList.remove("disabled"), od.classList.remove("disabled"), rd = t.substring(0, t.indexOf("-"))) })), sd.addEventListener("click", (function () { Bs(id, rd, "agregar_puesto") })), nd.addEventListener("click", (function () { Bs(id, rd, "modificar_puesto") })), od.addEventListener("click", (function () { Bs(id, rd, "eliminar") })) } if (document.getElementById("mantener_usuario")) { const ld = document.getElementById("mantener_usuario"), cd = document.getElementById("btn_agregar_usuario"), hd = document.getElementById("btn_modificar_usuario"), dd = document.getElementById("btn_eliminar_usuario"); let ud = "0"; document.getElementById("btn_cerrar_usuario").addEventListener("click", (function () { location.reload() })), document.getElementById("user_email").addEventListener("change", (function () { const t = new FormData(ld); t.append("boton", "validar_usr"), fetch(t.get("endpoint"), { method: "POST", body: t }).then((t => t.json())).then((t => { t.success ? (console.log(t.data), "agregar" == t.data ? (document.getElementById("first_name").value = "", document.getElementById("last_name").value = "", document.getElementById("user_login").value = "", document.getElementById("user_pass").setAttribute("type", "text"), document.getElementById("user_pass").removeAttribute("readonly", ""), document.getElementById("user_pass").classList.remove("bg-secondary"), document.getElementById("user_pass").classList.remove("disabled"), document.getElementById("user_pass").value = "", cd.classList.remove("disabled"), hd.classList.add("disabled"), dd.classList.add("disabled"), document.getElementById("first_name").focus()) : (document.getElementById("first_name").value = t.data.first_name, document.getElementById("last_name").value = t.data.last_name, document.getElementById("user_login").value = t.data.user_login, ud = t.data.ID, document.getElementById("user_pass").setAttribute("type", "password"), document.getElementById("user_pass").setAttribute("readonly", ""), document.getElementById("user_pass").classList.add("bg-secondary"), document.getElementById("user_pass").classList.add("disabled"), document.getElementById("user_pass").value = t.data.user_pass, cd.classList.add("disabled"), hd.classList.remove("disabled"), dd.classList.remove("disabled"))) : console.log(t) })).catch((t => console.log(t))) })), document.getElementById("user_login").addEventListener("change", (function () { const t = new FormData(ld); t.append("boton", "validar_login"), fetch(t.get("endpoint"), { method: "POST", body: t }).then((t => t.json())).then((t => { t.success ? (console.log(t.data), "agregar" == t.data ? 0 == ud ? (document.getElementById("user_pass").removeAttribute("readonly", ""), cd.classList.remove("disabled"), hd.classList.add("disabled"), dd.classList.add("disabled")) : (document.getElementById("user_pass").setAttribute("readonly", ""), cd.classList.add("disabled"), hd.classList.remove("disabled"), dd.classList.remove("disabled")) : 0 == ud ? (Ds().fire({ icon: "warning", title: "Usuario de Ingreso Existe", showClass: { popup: "animate__animated animate__fadeInDown" }, hideClass: { popup: "animate__animated animate__fadeOutUp" }, text: "El usuario de ingreso " + t.data.user_login + " ya existe registrado.", showConfirmButton: !1, timer: 3e3 }), document.getElementById("user_login").focus(), document.getElementById("user_pass").setAttribute("readonly", ""), cd.classList.remove("disabled"), hd.classList.add("disabled"), dd.classList.add("disabled")) : document.getElementById("user_email").value != t.data.user_email && (Ds().fire({ icon: "error", title: "Usuario de Ingreso Existe", showClass: { popup: "animate__animated animate__fadeInDown" }, hideClass: { popup: "animate__animated animate__fadeOutUp" }, text: "El usuario de ingreso " + t.data.user_login + " ya existe registrado.", showConfirmButton: !1, timer: 3e3 }), document.getElementById("user_login").value = "", document.getElementById("user_pass").setAttribute("readonly", ""), cd.classList.add("disabled"), hd.classList.remove("disabled"), dd.classList.remove("disabled"))) : console.log(t) })).catch((t => console.log(t))) })), cd.addEventListener("click", (function () { Bs(ld, ud, "agregar_usuario") })), hd.addEventListener("click", (function () { Bs(ld, ud, "modificar_usuario") })), dd.addEventListener("click", (function () { Bs(ld, ud, "eliminar") })) } function Bs(t, e, i) { t.addEventListener("submit", (function (s) { if (s.preventDefault(), t.checkValidity()) { const s = new FormData(t); s.append("post_id", e), s.append("boton", i), fetch(s.get("endpoint"), { method: "POST", body: s }).then((t => t.json())).then((t => { t.success ? (console.log(t.data), Ds().fire({ icon: "success", title: "Actualización Exitosa", showConfirmButton: !1, showClass: { popup: "animate__animated animate__fadeInDown" }, hideClass: { popup: "animate__animated animate__fadeOutUp" }, text: s.get("msgtxt"), timer: 2e3 }), setTimeout((() => { location.reload() }), 2e3)) : (console.log(t), Ds().fire({ icon: "error", title: "Error en el envío", showClass: { popup: "animate__animated animate__fadeInDown" }, hideClass: { popup: "animate__animated animate__fadeOutUp" }, text: t.data, showConfirmButton: !1, timer: 2e3 })) })).catch((t => console.log(t))), t.classList.add("was-validated") } else s.preventDefault(), s.stopPropagation(); t.classList.add("was-validated") })) } if (document.getElementById("agregar_acuerdo")) { const pd = document.getElementById("n_acuerdo"), fd = pd.dataset.n_acuerdos.split(","); pd.addEventListener("change", (function () { fd.forEach((t => { t == pd.value && (Ds().fire({ icon: "error", title: "Error en Consecutivo", showConfirmButton: !1, showClass: { popup: "animate__animated animate__fadeInDown" }, hideClass: { popup: "animate__animated animate__fadeOutUp" }, text: "El número de Acuerdo ya existe.", timer: 2e3 }), pd.focus()) })) })), document.getElementById("vigente_agregar").addEventListener("change", (function () { 1 == document.getElementById("vigente_agregar").value ? (document.getElementById("vigente_agregar").value = 0, document.getElementById("vigente_agregar").setAttribute("checked", ""), document.getElementById("lbl_vigente_agregar").innerHTML = "Ejecutado", document.getElementById("f_seguimiento_agregar").removeAttribute("disabled")) : (document.getElementById("vigente_agregar").value = 1, document.getElementById("vigente_agregar").removeAttribute("checked"), document.getElementById("lbl_vigente_agregar").innerHTML = "Vigente", document.getElementById("f_seguimiento_agregar").setAttribute("disabled", "")) })), document.getElementById("btn_agregar_acuerdo").addEventListener("click", (function () { Rs(document.getElementById("agregar_acuerdo")) })) } function Rs(t) { t.addEventListener("submit", (function (e) { if (e.preventDefault(), t.checkValidity()) { console.log(e.target); const i = new FormData(t); null == i.get("vigente") && i.set("vigente", "0"), document.getElementById("f_seguimiento") && null == i.get("f_seguimiento") && i.set("f_seguimiento", document.getElementById("f_seguimiento").value), fetch(i.get("endpoint"), { method: "POST", body: i }).then((t => t.json())).then((t => { t.success ? (console.log(t.data), Ds().fire({ icon: "success", title: "Actualización Exitosa", showConfirmButton: !1, showClass: { popup: "animate__animated animate__fadeInDown" }, hideClass: { popup: "animate__animated animate__fadeOutUp" }, text: i.get("msgtxt"), timer: 2e3 }), setTimeout((() => { location.reload() }), 2e3)) : (console.log(t), Ds().fire({ icon: "error", title: "Error en el envío", showClass: { popup: "animate__animated animate__fadeInDown" }, hideClass: { popup: "animate__animated animate__fadeOutUp" }, text: t.data, showConfirmButton: !1, timer: 2e3 })) })).catch((t => console.log(t))) } else e.preventDefault(), e.stopPropagation(); t.classList.add("was-validated") })) } function zs() { } i(641); const js = function () { let t = 0; return function () { return t++ } }(); function Ns(t) { return null == t } function Fs(t) { if (Array.isArray && Array.isArray(t)) return !0; const e = Object.prototype.toString.call(t); return "[object" === e.slice(0, 7) && "Array]" === e.slice(-6) } function Vs(t) { return null !== t && "[object Object]" === Object.prototype.toString.call(t) } const Hs = t => ("number" == typeof t || t instanceof Number) && isFinite(+t); function Ws(t, e) { return Hs(t) ? t : e } function $s(t, e) { return void 0 === t ? e : t } const qs = (t, e) => "string" == typeof t && t.endsWith("%") ? parseFloat(t) / 100 * e : +t; function Us(t, e, i) { if (t && "function" == typeof t.call) return t.apply(i, e) } function Ys(t, e, i, s) { let n, o, a; if (Fs(t)) if (o = t.length, s) for (n = o - 1; n >= 0; n--)e.call(i, t[n], n); else for (n = 0; n < o; n++)e.call(i, t[n], n); else if (Vs(t)) for (a = Object.keys(t), o = a.length, n = 0; n < o; n++)e.call(i, t[a[n]], a[n]) } function Xs(t, e) { let i, s, n, o; if (!t || !e || t.length !== e.length) return !1; for (i = 0, s = t.length; i < s; ++i)if (n = t[i], o = e[i], n.datasetIndex !== o.datasetIndex || n.index !== o.index) return !1; return !0 } function Ks(t) { if (Fs(t)) return t.map(Ks); if (Vs(t)) { const e = Object.create(null), i = Object.keys(t), s = i.length; let n = 0; for (; n < s; ++n)e[i[n]] = Ks(t[i[n]]); return e } return t } function Zs(t) { return -1 === ["__proto__", "prototype", "constructor"].indexOf(t) } function Qs(t, e, i, s) { if (!Zs(t)) return; const n = e[t], o = i[t]; Vs(n) && Vs(o) ? Gs(n, o, s) : e[t] = Ks(o) } function Gs(t, e, i) { const s = Fs(e) ? e : [e], n = s.length; if (!Vs(t)) return t; const o = (i = i || {}).merger || Qs; for (let a = 0; a < n; ++a) { if (!Vs(e = s[a])) continue; const n = Object.keys(e); for (let s = 0, a = n.length; s < a; ++s)o(n[s], t, e, i) } return t } function Js(t, e) { return Gs(t, e, { merger: tn }) } function tn(t, e, i) { if (!Zs(t)) return; const s = e[t], n = i[t]; Vs(s) && Vs(n) ? Js(s, n) : Object.prototype.hasOwnProperty.call(e, t) || (e[t] = Ks(n)) } const en = { "": t => t, x: t => t.x, y: t => t.y }; function sn(t, e) { const i = en[e] || (en[e] = function (t) { const e = function (t) { const e = t.split("."), i = []; let s = ""; for (const t of e) s += t, s.endsWith("\\") ? s = s.slice(0, -1) + "." : (i.push(s), s = ""); return i }(t); return t => { for (const i of e) { if ("" === i) break; t = t && t[i] } return t } }(e)); return i(t) } function nn(t) { return t.charAt(0).toUpperCase() + t.slice(1) } const on = t => void 0 !== t, an = t => "function" == typeof t, rn = (t, e) => { if (t.size !== e.size) return !1; for (const i of t) if (!e.has(i)) return !1; return !0 }, ln = Math.PI, cn = 2 * ln, hn = cn + ln, dn = Number.POSITIVE_INFINITY, un = ln / 180, pn = ln / 2, fn = ln / 4, gn = 2 * ln / 3, mn = Math.log10, bn = Math.sign; function _n(t) { const e = Math.round(t); t = wn(t, e, t / 1e3) ? e : t; const i = Math.pow(10, Math.floor(mn(t))), s = t / i; return (s <= 1 ? 1 : s <= 2 ? 2 : s <= 5 ? 5 : 10) * i } function yn(t) { return !isNaN(parseFloat(t)) && isFinite(t) } function wn(t, e, i) { return Math.abs(t - e) < i } function vn(t, e, i) { let s, n, o; for (s = 0, n = t.length; s < n; s++)o = t[s][i], isNaN(o) || (e.min = Math.min(e.min, o), e.max = Math.max(e.max, o)) } function xn(t) { return t * (ln / 180) } function kn(t) { return t * (180 / ln) } function En(t) { if (!Hs(t)) return; let e = 1, i = 0; for (; Math.round(t * e) / e !== t;)e *= 10, i++; return i } function Cn(t, e) { const i = e.x - t.x, s = e.y - t.y, n = Math.sqrt(i * i + s * s); let o = Math.atan2(s, i); return o < -.5 * ln && (o += cn), { angle: o, distance: n } } function An(t, e) { return Math.sqrt(Math.pow(e.x - t.x, 2) + Math.pow(e.y - t.y, 2)) } function Mn(t, e) { return (t - e + hn) % cn - ln } function Sn(t) { return (t % cn + cn) % cn } function On(t, e, i, s) { const n = Sn(t), o = Sn(e), a = Sn(i), r = Sn(o - n), l = Sn(a - n), c = Sn(n - o), h = Sn(n - a); return n === o || n === a || s && o === a || r > l && c < h } function Pn(t, e, i) { return Math.max(e, Math.min(i, t)) } function Tn(t, e, i, s = 1e-6) { return t >= Math.min(e, i) - s && t <= Math.max(e, i) + s } function Ln(t, e, i) { i = i || (i => t[i] < e); let s, n = t.length - 1, o = 0; for (; n - o > 1;)s = o + n >> 1, i(s) ? o = s : n = s; return { lo: o, hi: n } } const Dn = (t, e, i, s) => Ln(t, i, s ? s => t[s][e] <= i : s => t[s][e] < i), In = (t, e, i) => Ln(t, i, (s => t[s][e] >= i)), Bn = ["push", "pop", "shift", "splice", "unshift"]; function Rn(t, e) { const i = t._chartjs; if (!i) return; const s = i.listeners, n = s.indexOf(e); -1 !== n && s.splice(n, 1), s.length > 0 || (Bn.forEach((e => { delete t[e] })), delete t._chartjs) } function zn(t) { const e = new Set; let i, s; for (i = 0, s = t.length; i < s; ++i)e.add(t[i]); return e.size === s ? t : Array.from(e) } const jn = "undefined" == typeof window ? function (t) { return t() } : window.requestAnimationFrame; function Nn(t, e, i) { const s = i || (t => Array.prototype.slice.call(t)); let n = !1, o = []; return function (...i) { o = s(i), n || (n = !0, jn.call(window, (() => { n = !1, t.apply(e, o) }))) } } const Fn = t => "start" === t ? "left" : "end" === t ? "right" : "center", Vn = (t, e, i) => "start" === t ? e : "end" === t ? i : (e + i) / 2; function Hn(t, e, i) { const s = e.length; let n = 0, o = s; if (t._sorted) { const { iScale: a, _parsed: r } = t, l = a.axis, { min: c, max: h, minDefined: d, maxDefined: u } = a.getUserBounds(); d && (n = Pn(Math.min(Dn(r, a.axis, c).lo, i ? s : Dn(e, l, a.getPixelForValue(c)).lo), 0, s - 1)), o = u ? Pn(Math.max(Dn(r, a.axis, h, !0).hi + 1, i ? 0 : Dn(e, l, a.getPixelForValue(h), !0).hi + 1), n, s) - n : s - n } return { start: n, count: o } } function Wn(t) { const { xScale: e, yScale: i, _scaleRanges: s } = t, n = { xmin: e.min, xmax: e.max, ymin: i.min, ymax: i.max }; if (!s) return t._scaleRanges = n, !0; const o = s.xmin !== e.min || s.xmax !== e.max || s.ymin !== i.min || s.ymax !== i.max; return Object.assign(s, n), o } const $n = t => 0 === t || 1 === t, qn = (t, e, i) => -Math.pow(2, 10 * (t -= 1)) * Math.sin((t - e) * cn / i), Un = (t, e, i) => Math.pow(2, -10 * t) * Math.sin((t - e) * cn / i) + 1, Yn = { linear: t => t, easeInQuad: t => t * t, easeOutQuad: t => -t * (t - 2), easeInOutQuad: t => (t /= .5) < 1 ? .5 * t * t : -.5 * (--t * (t - 2) - 1), easeInCubic: t => t * t * t, easeOutCubic: t => (t -= 1) * t * t + 1, easeInOutCubic: t => (t /= .5) < 1 ? .5 * t * t * t : .5 * ((t -= 2) * t * t + 2), easeInQuart: t => t * t * t * t, easeOutQuart: t => -((t -= 1) * t * t * t - 1), easeInOutQuart: t => (t /= .5) < 1 ? .5 * t * t * t * t : -.5 * ((t -= 2) * t * t * t - 2), easeInQuint: t => t * t * t * t * t, easeOutQuint: t => (t -= 1) * t * t * t * t + 1, easeInOutQuint: t => (t /= .5) < 1 ? .5 * t * t * t * t * t : .5 * ((t -= 2) * t * t * t * t + 2), easeInSine: t => 1 - Math.cos(t * pn), easeOutSine: t => Math.sin(t * pn), easeInOutSine: t => -.5 * (Math.cos(ln * t) - 1), easeInExpo: t => 0 === t ? 0 : Math.pow(2, 10 * (t - 1)), easeOutExpo: t => 1 === t ? 1 : 1 - Math.pow(2, -10 * t), easeInOutExpo: t => $n(t) ? t : t < .5 ? .5 * Math.pow(2, 10 * (2 * t - 1)) : .5 * (2 - Math.pow(2, -10 * (2 * t - 1))), easeInCirc: t => t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1), easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t), easeInOutCirc: t => (t /= .5) < 1 ? -.5 * (Math.sqrt(1 - t * t) - 1) : .5 * (Math.sqrt(1 - (t -= 2) * t) + 1), easeInElastic: t => $n(t) ? t : qn(t, .075, .3), easeOutElastic: t => $n(t) ? t : Un(t, .075, .3), easeInOutElastic(t) { const e = .1125; return $n(t) ? t : t < .5 ? .5 * qn(2 * t, e, .45) : .5 + .5 * Un(2 * t - 1, e, .45) }, easeInBack(t) { const e = 1.70158; return t * t * ((e + 1) * t - e) }, easeOutBack(t) { const e = 1.70158; return (t -= 1) * t * ((e + 1) * t + e) + 1 }, easeInOutBack(t) { let e = 1.70158; return (t /= .5) < 1 ? t * t * ((1 + (e *= 1.525)) * t - e) * .5 : .5 * ((t -= 2) * t * ((1 + (e *= 1.525)) * t + e) + 2) }, easeInBounce: t => 1 - Yn.easeOutBounce(1 - t), easeOutBounce(t) { const e = 7.5625, i = 2.75; return t < 1 / i ? e * t * t : t < 2 / i ? e * (t -= 1.5 / i) * t + .75 : t < 2.5 / i ? e * (t -= 2.25 / i) * t + .9375 : e * (t -= 2.625 / i) * t + .984375 }, easeInOutBounce: t => t < .5 ? .5 * Yn.easeInBounce(2 * t) : .5 * Yn.easeOutBounce(2 * t - 1) + .5 }; function Xn(t) { return t + .5 | 0 } const Kn = (t, e, i) => Math.max(Math.min(t, i), e); function Zn(t) { return Kn(Xn(2.55 * t), 0, 255) } function Qn(t) { return Kn(Xn(255 * t), 0, 255) } function Gn(t) { return Kn(Xn(t / 2.55) / 100, 0, 1) } function Jn(t) { return Kn(Xn(100 * t), 0, 100) } const to = { 0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15 }, eo = [..."0123456789ABCDEF"], io = t => eo[15 & t], so = t => eo[(240 & t) >> 4] + eo[15 & t], no = t => (240 & t) >> 4 == (15 & t); const oo = /^(hsla?|hwb|hsv)\(\s*([-+.e\d]+)(?:deg)?[\s,]+([-+.e\d]+)%[\s,]+([-+.e\d]+)%(?:[\s,]+([-+.e\d]+)(%)?)?\s*\)$/; function ao(t, e, i) { const s = e * Math.min(i, 1 - i), n = (e, n = (e + t / 30) % 12) => i - s * Math.max(Math.min(n - 3, 9 - n, 1), -1); return [n(0), n(8), n(4)] } function ro(t, e, i) { const s = (s, n = (s + t / 60) % 6) => i - i * e * Math.max(Math.min(n, 4 - n, 1), 0); return [s(5), s(3), s(1)] } function lo(t, e, i) { const s = ao(t, 1, .5); let n; for (e + i > 1 && (n = 1 / (e + i), e *= n, i *= n), n = 0; n < 3; n++)s[n] *= 1 - e - i, s[n] += e; return s } function co(t) { const e = t.r / 255, i = t.g / 255, s = t.b / 255, n = Math.max(e, i, s), o = Math.min(e, i, s), a = (n + o) / 2; let r, l, c; return n !== o && (c = n - o, l = a > .5 ? c / (2 - n - o) : c / (n + o), r = function (t, e, i, s, n) { return t === n ? (e - i) / s + (e < i ? 6 : 0) : e === n ? (i - t) / s + 2 : (t - e) / s + 4 }(e, i, s, c, n), r = 60 * r + .5), [0 | r, l || 0, a] } function ho(t, e, i, s) { return (Array.isArray(e) ? t(e[0], e[1], e[2]) : t(e, i, s)).map(Qn) } function uo(t, e, i) { return ho(ao, t, e, i) } function po(t) { return (t % 360 + 360) % 360 } const fo = { x: "dark", Z: "light", Y: "re", X: "blu", W: "gr", V: "medium", U: "slate", A: "ee", T: "ol", S: "or", B: "ra", C: "lateg", D: "ights", R: "in", Q: "turquois", E: "hi", P: "ro", O: "al", N: "le", M: "de", L: "yello", F: "en", K: "ch", G: "arks", H: "ea", I: "ightg", J: "wh" }, go = { OiceXe: "f0f8ff", antiquewEte: "faebd7", aqua: "ffff", aquamarRe: "7fffd4", azuY: "f0ffff", beige: "f5f5dc", bisque: "ffe4c4", black: "0", blanKedOmond: "ffebcd", Xe: "ff", XeviTet: "8a2be2", bPwn: "a52a2a", burlywood: "deb887", caMtXe: "5f9ea0", KartYuse: "7fff00", KocTate: "d2691e", cSO: "ff7f50", cSnflowerXe: "6495ed", cSnsilk: "fff8dc", crimson: "dc143c", cyan: "ffff", xXe: "8b", xcyan: "8b8b", xgTMnPd: "b8860b", xWay: "a9a9a9", xgYF: "6400", xgYy: "a9a9a9", xkhaki: "bdb76b", xmagFta: "8b008b", xTivegYF: "556b2f", xSange: "ff8c00", xScEd: "9932cc", xYd: "8b0000", xsOmon: "e9967a", xsHgYF: "8fbc8f", xUXe: "483d8b", xUWay: "2f4f4f", xUgYy: "2f4f4f", xQe: "ced1", xviTet: "9400d3", dAppRk: "ff1493", dApskyXe: "bfff", dimWay: "696969", dimgYy: "696969", dodgerXe: "1e90ff", fiYbrick: "b22222", flSOwEte: "fffaf0", foYstWAn: "228b22", fuKsia: "ff00ff", gaRsbSo: "dcdcdc", ghostwEte: "f8f8ff", gTd: "ffd700", gTMnPd: "daa520", Way: "808080", gYF: "8000", gYFLw: "adff2f", gYy: "808080", honeyMw: "f0fff0", hotpRk: "ff69b4", RdianYd: "cd5c5c", Rdigo: "4b0082", ivSy: "fffff0", khaki: "f0e68c", lavFMr: "e6e6fa", lavFMrXsh: "fff0f5", lawngYF: "7cfc00", NmoncEffon: "fffacd", ZXe: "add8e6", ZcSO: "f08080", Zcyan: "e0ffff", ZgTMnPdLw: "fafad2", ZWay: "d3d3d3", ZgYF: "90ee90", ZgYy: "d3d3d3", ZpRk: "ffb6c1", ZsOmon: "ffa07a", ZsHgYF: "20b2aa", ZskyXe: "87cefa", ZUWay: "778899", ZUgYy: "778899", ZstAlXe: "b0c4de", ZLw: "ffffe0", lime: "ff00", limegYF: "32cd32", lRF: "faf0e6", magFta: "ff00ff", maPon: "800000", VaquamarRe: "66cdaa", VXe: "cd", VScEd: "ba55d3", VpurpN: "9370db", VsHgYF: "3cb371", VUXe: "7b68ee", VsprRggYF: "fa9a", VQe: "48d1cc", VviTetYd: "c71585", midnightXe: "191970", mRtcYam: "f5fffa", mistyPse: "ffe4e1", moccasR: "ffe4b5", navajowEte: "ffdead", navy: "80", Tdlace: "fdf5e6", Tive: "808000", TivedBb: "6b8e23", Sange: "ffa500", SangeYd: "ff4500", ScEd: "da70d6", pOegTMnPd: "eee8aa", pOegYF: "98fb98", pOeQe: "afeeee", pOeviTetYd: "db7093", papayawEp: "ffefd5", pHKpuff: "ffdab9", peru: "cd853f", pRk: "ffc0cb", plum: "dda0dd", powMrXe: "b0e0e6", purpN: "800080", YbeccapurpN: "663399", Yd: "ff0000", Psybrown: "bc8f8f", PyOXe: "4169e1", saddNbPwn: "8b4513", sOmon: "fa8072", sandybPwn: "f4a460", sHgYF: "2e8b57", sHshell: "fff5ee", siFna: "a0522d", silver: "c0c0c0", skyXe: "87ceeb", UXe: "6a5acd", UWay: "708090", UgYy: "708090", snow: "fffafa", sprRggYF: "ff7f", stAlXe: "4682b4", tan: "d2b48c", teO: "8080", tEstN: "d8bfd8", tomato: "ff6347", Qe: "40e0d0", viTet: "ee82ee", JHt: "f5deb3", wEte: "ffffff", wEtesmoke: "f5f5f5", Lw: "ffff00", LwgYF: "9acd32" }; let mo; const bo = /^rgba?\(\s*([-+.\d]+)(%)?[\s,]+([-+.e\d]+)(%)?[\s,]+([-+.e\d]+)(%)?(?:[\s,/]+([-+.e\d]+)(%)?)?\s*\)$/, _o = t => t <= .0031308 ? 12.92 * t : 1.055 * Math.pow(t, 1 / 2.4) - .055, yo = t => t <= .04045 ? t / 12.92 : Math.pow((t + .055) / 1.055, 2.4); function wo(t, e, i) { if (t) { let s = co(t); s[e] = Math.max(0, Math.min(s[e] + s[e] * i, 0 === e ? 360 : 1)), s = uo(s), t.r = s[0], t.g = s[1], t.b = s[2] } } function vo(t, e) { return t ? Object.assign(e || {}, t) : t } function xo(t) { var e = { r: 0, g: 0, b: 0, a: 255 }; return Array.isArray(t) ? t.length >= 3 && (e = { r: t[0], g: t[1], b: t[2], a: 255 }, t.length > 3 && (e.a = Qn(t[3]))) : (e = vo(t, { r: 0, g: 0, b: 0, a: 1 })).a = Qn(e.a), e } function ko(t) { return "r" === t.charAt(0) ? function (t) { const e = bo.exec(t); let i, s, n, o = 255; if (e) { if (e[7] !== i) { const t = +e[7]; o = e[8] ? Zn(t) : Kn(255 * t, 0, 255) } return i = +e[1], s = +e[3], n = +e[5], i = 255 & (e[2] ? Zn(i) : Kn(i, 0, 255)), s = 255 & (e[4] ? Zn(s) : Kn(s, 0, 255)), n = 255 & (e[6] ? Zn(n) : Kn(n, 0, 255)), { r: i, g: s, b: n, a: o } } }(t) : function (t) { const e = oo.exec(t); let i, s = 255; if (!e) return; e[5] !== i && (s = e[6] ? Zn(+e[5]) : Qn(+e[5])); const n = po(+e[2]), o = +e[3] / 100, a = +e[4] / 100; return i = "hwb" === e[1] ? function (t, e, i) { return ho(lo, t, e, i) }(n, o, a) : "hsv" === e[1] ? function (t, e, i) { return ho(ro, t, e, i) }(n, o, a) : uo(n, o, a), { r: i[0], g: i[1], b: i[2], a: s } }(t) } class Eo { constructor(t) { if (t instanceof Eo) return t; const e = typeof t; let i; var s, n, o; "object" === e ? i = xo(t) : "string" === e && (o = (s = t).length, "#" === s[0] && (4 === o || 5 === o ? n = { r: 255 & 17 * to[s[1]], g: 255 & 17 * to[s[2]], b: 255 & 17 * to[s[3]], a: 5 === o ? 17 * to[s[4]] : 255 } : 7 !== o && 9 !== o || (n = { r: to[s[1]] << 4 | to[s[2]], g: to[s[3]] << 4 | to[s[4]], b: to[s[5]] << 4 | to[s[6]], a: 9 === o ? to[s[7]] << 4 | to[s[8]] : 255 })), i = n || function (t) { mo || (mo = function () { const t = {}, e = Object.keys(go), i = Object.keys(fo); let s, n, o, a, r; for (s = 0; s < e.length; s++) { for (a = r = e[s], n = 0; n < i.length; n++)o = i[n], r = r.replace(o, fo[o]); o = parseInt(go[a], 16), t[r] = [o >> 16 & 255, o >> 8 & 255, 255 & o] } return t }(), mo.transparent = [0, 0, 0, 0]); const e = mo[t.toLowerCase()]; return e && { r: e[0], g: e[1], b: e[2], a: 4 === e.length ? e[3] : 255 } }(t) || ko(t)), this._rgb = i, this._valid = !!i } get valid() { return this._valid } get rgb() { var t = vo(this._rgb); return t && (t.a = Gn(t.a)), t } set rgb(t) { this._rgb = xo(t) } rgbString() { return this._valid ? (t = this._rgb) && (t.a < 255 ? `rgba(${t.r}, ${t.g}, ${t.b}, ${Gn(t.a)})` : `rgb(${t.r}, ${t.g}, ${t.b})`) : void 0; var t } hexString() { return this._valid ? (t = this._rgb, e = (t => no(t.r) && no(t.g) && no(t.b) && no(t.a))(t) ? io : so, t ? "#" + e(t.r) + e(t.g) + e(t.b) + ((t, e) => t < 255 ? e(t) : "")(t.a, e) : void 0) : void 0; var t, e } hslString() { return this._valid ? function (t) { if (!t) return; const e = co(t), i = e[0], s = Jn(e[1]), n = Jn(e[2]); return t.a < 255 ? `hsla(${i}, ${s}%, ${n}%, ${Gn(t.a)})` : `hsl(${i}, ${s}%, ${n}%)` }(this._rgb) : void 0 } mix(t, e) { if (t) { const i = this.rgb, s = t.rgb; let n; const o = e === n ? .5 : e, a = 2 * o - 1, r = i.a - s.a, l = ((a * r == -1 ? a : (a + r) / (1 + a * r)) + 1) / 2; n = 1 - l, i.r = 255 & l * i.r + n * s.r + .5, i.g = 255 & l * i.g + n * s.g + .5, i.b = 255 & l * i.b + n * s.b + .5, i.a = o * i.a + (1 - o) * s.a, this.rgb = i } return this } interpolate(t, e) { return t && (this._rgb = function (t, e, i) { const s = yo(Gn(t.r)), n = yo(Gn(t.g)), o = yo(Gn(t.b)); return { r: Qn(_o(s + i * (yo(Gn(e.r)) - s))), g: Qn(_o(n + i * (yo(Gn(e.g)) - n))), b: Qn(_o(o + i * (yo(Gn(e.b)) - o))), a: t.a + i * (e.a - t.a) } }(this._rgb, t._rgb, e)), this } clone() { return new Eo(this.rgb) } alpha(t) { return this._rgb.a = Qn(t), this } clearer(t) { return this._rgb.a *= 1 - t, this } greyscale() { const t = this._rgb, e = Xn(.3 * t.r + .59 * t.g + .11 * t.b); return t.r = t.g = t.b = e, this } opaquer(t) { return this._rgb.a *= 1 + t, this } negate() { const t = this._rgb; return t.r = 255 - t.r, t.g = 255 - t.g, t.b = 255 - t.b, this } lighten(t) { return wo(this._rgb, 2, t), this } darken(t) { return wo(this._rgb, 2, -t), this } saturate(t) { return wo(this._rgb, 1, t), this } desaturate(t) { return wo(this._rgb, 1, -t), this } rotate(t) { return function (t, e) { var i = co(t); i[0] = po(i[0] + e), i = uo(i), t.r = i[0], t.g = i[1], t.b = i[2] }(this._rgb, t), this } } function Co(t) { return new Eo(t) } function Ao(t) { if (t && "object" == typeof t) { const e = t.toString(); return "[object CanvasPattern]" === e || "[object CanvasGradient]" === e } return !1 } function Mo(t) { return Ao(t) ? t : Co(t) } function So(t) { return Ao(t) ? t : Co(t).saturate(.5).darken(.1).hexString() } const Oo = Object.create(null), Po = Object.create(null); function To(t, e) { if (!e) return t; const i = e.split("."); for (let e = 0, s = i.length; e < s; ++e) { const s = i[e]; t = t[s] || (t[s] = Object.create(null)) } return t } function Lo(t, e, i) { return "string" == typeof e ? Gs(To(t, e), i) : Gs(To(t, ""), e) } var Do = new class { constructor(t) { this.animation = void 0, this.backgroundColor = "rgba(0,0,0,0.1)", this.borderColor = "rgba(0,0,0,0.1)", this.color = "#666", this.datasets = {}, this.devicePixelRatio = t => t.chart.platform.getDevicePixelRatio(), this.elements = {}, this.events = ["mousemove", "mouseout", "click", "touchstart", "touchmove"], this.font = { family: "'Helvetica Neue', 'Helvetica', 'Arial', sans-serif", size: 12, style: "normal", lineHeight: 1.2, weight: null }, this.hover = {}, this.hoverBackgroundColor = (t, e) => So(e.backgroundColor), this.hoverBorderColor = (t, e) => So(e.borderColor), this.hoverColor = (t, e) => So(e.color), this.indexAxis = "x", this.interaction = { mode: "nearest", intersect: !0, includeInvisible: !1 }, this.maintainAspectRatio = !0, this.onHover = null, this.onClick = null, this.parsing = !0, this.plugins = {}, this.responsive = !0, this.scale = void 0, this.scales = {}, this.showLine = !0, this.drawActiveElementsOnTop = !0, this.describe(t) } set(t, e) { return Lo(this, t, e) } get(t) { return To(this, t) } describe(t, e) { return Lo(Po, t, e) } override(t, e) { return Lo(Oo, t, e) } route(t, e, i, s) { const n = To(this, t), o = To(this, i), a = "_" + e; Object.defineProperties(n, { [a]: { value: n[e], writable: !0 }, [e]: { enumerable: !0, get() { const t = this[a], e = o[s]; return Vs(t) ? Object.assign({}, e, t) : $s(t, e) }, set(t) { this[a] = t } } }) } }({ _scriptable: t => !t.startsWith("on"), _indexable: t => "events" !== t, hover: { _fallback: "interaction" }, interaction: { _scriptable: !1, _indexable: !1 } }); function Io(t, e, i, s, n) { let o = e[n]; return o || (o = e[n] = t.measureText(n).width, i.push(n)), o > s && (s = o), s } function Bo(t, e, i, s) { let n = (s = s || {}).data = s.data || {}, o = s.garbageCollect = s.garbageCollect || []; s.font !== e && (n = s.data = {}, o = s.garbageCollect = [], s.font = e), t.save(), t.font = e; let a = 0; const r = i.length; let l, c, h, d, u; for (l = 0; l < r; l++)if (d = i[l], null != d && !0 !== Fs(d)) a = Io(t, n, o, a, d); else if (Fs(d)) for (c = 0, h = d.length; c < h; c++)u = d[c], null == u || Fs(u) || (a = Io(t, n, o, a, u)); t.restore(); const p = o.length / 2; if (p > i.length) { for (l = 0; l < p; l++)delete n[o[l]]; o.splice(0, p) } return a } function Ro(t, e, i) { const s = t.currentDevicePixelRatio, n = 0 !== i ? Math.max(i / 2, .5) : 0; return Math.round((e - n) * s) / s + n } function zo(t, e) { (e = e || t.getContext("2d")).save(), e.resetTransform(), e.clearRect(0, 0, t.width, t.height), e.restore() } function jo(t, e, i, s) { No(t, e, i, s, null) } function No(t, e, i, s, n) { let o, a, r, l, c, h; const d = e.pointStyle, u = e.rotation, p = e.radius; let f = (u || 0) * un; if (d && "object" == typeof d && (o = d.toString(), "[object HTMLImageElement]" === o || "[object HTMLCanvasElement]" === o)) return t.save(), t.translate(i, s), t.rotate(f), t.drawImage(d, -d.width / 2, -d.height / 2, d.width, d.height), void t.restore(); if (!(isNaN(p) || p <= 0)) { switch (t.beginPath(), d) { default: n ? t.ellipse(i, s, n / 2, p, 0, 0, cn) : t.arc(i, s, p, 0, cn), t.closePath(); break; case "triangle": t.moveTo(i + Math.sin(f) * p, s - Math.cos(f) * p), f += gn, t.lineTo(i + Math.sin(f) * p, s - Math.cos(f) * p), f += gn, t.lineTo(i + Math.sin(f) * p, s - Math.cos(f) * p), t.closePath(); break; case "rectRounded": c = .516 * p, l = p - c, a = Math.cos(f + fn) * l, r = Math.sin(f + fn) * l, t.arc(i - a, s - r, c, f - ln, f - pn), t.arc(i + r, s - a, c, f - pn, f), t.arc(i + a, s + r, c, f, f + pn), t.arc(i - r, s + a, c, f + pn, f + ln), t.closePath(); break; case "rect": if (!u) { l = Math.SQRT1_2 * p, h = n ? n / 2 : l, t.rect(i - h, s - l, 2 * h, 2 * l); break } f += fn; case "rectRot": a = Math.cos(f) * p, r = Math.sin(f) * p, t.moveTo(i - a, s - r), t.lineTo(i + r, s - a), t.lineTo(i + a, s + r), t.lineTo(i - r, s + a), t.closePath(); break; case "crossRot": f += fn; case "cross": a = Math.cos(f) * p, r = Math.sin(f) * p, t.moveTo(i - a, s - r), t.lineTo(i + a, s + r), t.moveTo(i + r, s - a), t.lineTo(i - r, s + a); break; case "star": a = Math.cos(f) * p, r = Math.sin(f) * p, t.moveTo(i - a, s - r), t.lineTo(i + a, s + r), t.moveTo(i + r, s - a), t.lineTo(i - r, s + a), f += fn, a = Math.cos(f) * p, r = Math.sin(f) * p, t.moveTo(i - a, s - r), t.lineTo(i + a, s + r), t.moveTo(i + r, s - a), t.lineTo(i - r, s + a); break; case "line": a = n ? n / 2 : Math.cos(f) * p, r = Math.sin(f) * p, t.moveTo(i - a, s - r), t.lineTo(i + a, s + r); break; case "dash": t.moveTo(i, s), t.lineTo(i + Math.cos(f) * p, s + Math.sin(f) * p) }t.fill(), e.borderWidth > 0 && t.stroke() } } function Fo(t, e, i) { return i = i || .5, !e || t && t.x > e.left - i && t.x < e.right + i && t.y > e.top - i && t.y < e.bottom + i } function Vo(t, e) { t.save(), t.beginPath(), t.rect(e.left, e.top, e.right - e.left, e.bottom - e.top), t.clip() } function Ho(t) { t.restore() } function Wo(t, e, i, s, n) { if (!e) return t.lineTo(i.x, i.y); if ("middle" === n) { const s = (e.x + i.x) / 2; t.lineTo(s, e.y), t.lineTo(s, i.y) } else "after" === n != !!s ? t.lineTo(e.x, i.y) : t.lineTo(i.x, e.y); t.lineTo(i.x, i.y) } function $o(t, e, i, s) { if (!e) return t.lineTo(i.x, i.y); t.bezierCurveTo(s ? e.cp1x : e.cp2x, s ? e.cp1y : e.cp2y, s ? i.cp2x : i.cp1x, s ? i.cp2y : i.cp1y, i.x, i.y) } function qo(t, e, i, s, n, o = {}) { const a = Fs(e) ? e : [e], r = o.strokeWidth > 0 && "" !== o.strokeColor; let l, c; for (t.save(), t.font = n.string, function (t, e) { e.translation && t.translate(e.translation[0], e.translation[1]), Ns(e.rotation) || t.rotate(e.rotation), e.color && (t.fillStyle = e.color), e.textAlign && (t.textAlign = e.textAlign), e.textBaseline && (t.textBaseline = e.textBaseline) }(t, o), l = 0; l < a.length; ++l)c = a[l], r && (o.strokeColor && (t.strokeStyle = o.strokeColor), Ns(o.strokeWidth) || (t.lineWidth = o.strokeWidth), t.strokeText(c, i, s, o.maxWidth)), t.fillText(c, i, s, o.maxWidth), Uo(t, i, s, c, o), s += n.lineHeight; t.restore() } function Uo(t, e, i, s, n) { if (n.strikethrough || n.underline) { const o = t.measureText(s), a = e - o.actualBoundingBoxLeft, r = e + o.actualBoundingBoxRight, l = i - o.actualBoundingBoxAscent, c = i + o.actualBoundingBoxDescent, h = n.strikethrough ? (l + c) / 2 : c; t.strokeStyle = t.fillStyle, t.beginPath(), t.lineWidth = n.decorationWidth || 2, t.moveTo(a, h), t.lineTo(r, h), t.stroke() } } function Yo(t, e) { const { x: i, y: s, w: n, h: o, radius: a } = e; t.arc(i + a.topLeft, s + a.topLeft, a.topLeft, -pn, ln, !0), t.lineTo(i, s + o - a.bottomLeft), t.arc(i + a.bottomLeft, s + o - a.bottomLeft, a.bottomLeft, ln, pn, !0), t.lineTo(i + n - a.bottomRight, s + o), t.arc(i + n - a.bottomRight, s + o - a.bottomRight, a.bottomRight, pn, 0, !0), t.lineTo(i + n, s + a.topRight), t.arc(i + n - a.topRight, s + a.topRight, a.topRight, 0, -pn, !0), t.lineTo(i + a.topLeft, s) } const Xo = new RegExp(/^(normal|(\d+(?:\.\d+)?)(px|em|%)?)$/), Ko = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/); function Zo(t, e) { const i = ("" + t).match(Xo); if (!i || "normal" === i[1]) return 1.2 * e; switch (t = +i[2], i[3]) { case "px": return t; case "%": t /= 100 }return e * t } function Qo(t, e) { const i = {}, s = Vs(e), n = s ? Object.keys(e) : e, o = Vs(t) ? s ? i => $s(t[i], t[e[i]]) : e => t[e] : () => t; for (const t of n) i[t] = +o(t) || 0; return i } function Go(t) { return Qo(t, { top: "y", right: "x", bottom: "y", left: "x" }) } function Jo(t) { return Qo(t, ["topLeft", "topRight", "bottomLeft", "bottomRight"]) } function ta(t) { const e = Go(t); return e.width = e.left + e.right, e.height = e.top + e.bottom, e } function ea(t, e) { t = t || {}, e = e || Do.font; let i = $s(t.size, e.size); "string" == typeof i && (i = parseInt(i, 10)); let s = $s(t.style, e.style); s && !("" + s).match(Ko) && (console.warn('Invalid font style specified: "' + s + '"'), s = ""); const n = { family: $s(t.family, e.family), lineHeight: Zo($s(t.lineHeight, e.lineHeight), i), size: i, style: s, weight: $s(t.weight, e.weight), string: "" }; return n.string = function (t) { return !t || Ns(t.size) || Ns(t.family) ? null : (t.style ? t.style + " " : "") + (t.weight ? t.weight + " " : "") + t.size + "px " + t.family }(n), n } function ia(t, e, i, s) { let n, o, a, r = !0; for (n = 0, o = t.length; n < o; ++n)if (a = t[n], void 0 !== a && (void 0 !== e && "function" == typeof a && (a = a(e), r = !1), void 0 !== i && Fs(a) && (a = a[i % a.length], r = !1), void 0 !== a)) return s && !r && (s.cacheable = !1), a } function sa(t, e) { return Object.assign(Object.create(t), e) } function na(t, e = [""], i = t, s, n = (() => t[0])) { on(s) || (s = ga("_fallback", t)); const o = { [Symbol.toStringTag]: "Object", _cacheable: !0, _scopes: t, _rootScopes: i, _fallback: s, _getTarget: n, override: n => na([n, ...t], e, i, s) }; return new Proxy(o, { deleteProperty: (e, i) => (delete e[i], delete e._keys, delete t[0][i], !0), get: (i, s) => ca(i, s, (() => function (t, e, i, s) { let n; for (const o of e) if (n = ga(ra(o, t), i), on(n)) return la(t, n) ? pa(i, s, t, n) : n }(s, e, t, i))), getOwnPropertyDescriptor: (t, e) => Reflect.getOwnPropertyDescriptor(t._scopes[0], e), getPrototypeOf: () => Reflect.getPrototypeOf(t[0]), has: (t, e) => ma(t).includes(e), ownKeys: t => ma(t), set(t, e, i) { const s = t._storage || (t._storage = n()); return t[e] = s[e] = i, delete t._keys, !0 } }) } function oa(t, e, i, s) { const n = { _cacheable: !1, _proxy: t, _context: e, _subProxy: i, _stack: new Set, _descriptors: aa(t, s), setContext: e => oa(t, e, i, s), override: n => oa(t.override(n), e, i, s) }; return new Proxy(n, { deleteProperty: (e, i) => (delete e[i], delete t[i], !0), get: (t, e, i) => ca(t, e, (() => function (t, e, i) { const { _proxy: s, _context: n, _subProxy: o, _descriptors: a } = t; let r = s[e]; return an(r) && a.isScriptable(e) && (r = function (t, e, i, s) { const { _proxy: n, _context: o, _subProxy: a, _stack: r } = i; if (r.has(t)) throw new Error("Recursion detected: " + Array.from(r).join("->") + "->" + t); return r.add(t), e = e(o, a || s), r.delete(t), la(t, e) && (e = pa(n._scopes, n, t, e)), e }(e, r, t, i)), Fs(r) && r.length && (r = function (t, e, i, s) { const { _proxy: n, _context: o, _subProxy: a, _descriptors: r } = i; if (on(o.index) && s(t)) e = e[o.index % e.length]; else if (Vs(e[0])) { const i = e, s = n._scopes.filter((t => t !== i)); e = []; for (const l of i) { const i = pa(s, n, t, l); e.push(oa(i, o, a && a[t], r)) } } return e }(e, r, t, a.isIndexable)), la(e, r) && (r = oa(r, n, o && o[e], a)), r }(t, e, i))), getOwnPropertyDescriptor: (e, i) => e._descriptors.allKeys ? Reflect.has(t, i) ? { enumerable: !0, configurable: !0 } : void 0 : Reflect.getOwnPropertyDescriptor(t, i), getPrototypeOf: () => Reflect.getPrototypeOf(t), has: (e, i) => Reflect.has(t, i), ownKeys: () => Reflect.ownKeys(t), set: (e, i, s) => (t[i] = s, delete e[i], !0) }) } function aa(t, e = { scriptable: !0, indexable: !0 }) { const { _scriptable: i = e.scriptable, _indexable: s = e.indexable, _allKeys: n = e.allKeys } = t; return { allKeys: n, scriptable: i, indexable: s, isScriptable: an(i) ? i : () => i, isIndexable: an(s) ? s : () => s } } const ra = (t, e) => t ? t + nn(e) : e, la = (t, e) => Vs(e) && "adapters" !== t && (null === Object.getPrototypeOf(e) || e.constructor === Object); function ca(t, e, i) { if (Object.prototype.hasOwnProperty.call(t, e)) return t[e]; const s = i(); return t[e] = s, s } function ha(t, e, i) { return an(t) ? t(e, i) : t } const da = (t, e) => !0 === t ? e : "string" == typeof t ? sn(e, t) : void 0; function ua(t, e, i, s, n) { for (const o of e) { const e = da(i, o); if (e) { t.add(e); const o = ha(e._fallback, i, n); if (on(o) && o !== i && o !== s) return o } else if (!1 === e && on(s) && i !== s) return null } return !1 } function pa(t, e, i, s) { const n = e._rootScopes, o = ha(e._fallback, i, s), a = [...t, ...n], r = new Set; r.add(s); let l = fa(r, a, i, o || i, s); return null !== l && (!on(o) || o === i || (l = fa(r, a, o, l, s), null !== l)) && na(Array.from(r), [""], n, o, (() => function (t, e, i) { const s = t._getTarget(); e in s || (s[e] = {}); const n = s[e]; return Fs(n) && Vs(i) ? i : n }(e, i, s))) } function fa(t, e, i, s, n) { for (; i;)i = ua(t, e, i, s, n); return i } function ga(t, e) { for (const i of e) { if (!i) continue; const e = i[t]; if (on(e)) return e } } function ma(t) { let e = t._keys; return e || (e = t._keys = function (t) { const e = new Set; for (const i of t) for (const t of Object.keys(i).filter((t => !t.startsWith("_")))) e.add(t); return Array.from(e) }(t._scopes)), e } function ba(t, e, i, s) { const { iScale: n } = t, { key: o = "r" } = this._parsing, a = new Array(s); let r, l, c, h; for (r = 0, l = s; r < l; ++r)c = r + i, h = e[c], a[r] = { r: n.parse(sn(h, o), c) }; return a } const _a = Number.EPSILON || 1e-14, ya = (t, e) => e < t.length && !t[e].skip && t[e], wa = t => "x" === t ? "y" : "x"; function va(t, e, i, s) { const n = t.skip ? e : t, o = e, a = i.skip ? e : i, r = An(o, n), l = An(a, o); let c = r / (r + l), h = l / (r + l); c = isNaN(c) ? 0 : c, h = isNaN(h) ? 0 : h; const d = s * c, u = s * h; return { previous: { x: o.x - d * (a.x - n.x), y: o.y - d * (a.y - n.y) }, next: { x: o.x + u * (a.x - n.x), y: o.y + u * (a.y - n.y) } } } function xa(t, e, i) { return Math.max(Math.min(t, i), e) } function ka(t, e, i, s, n) { let o, a, r, l; if (e.spanGaps && (t = t.filter((t => !t.skip))), "monotone" === e.cubicInterpolationMode) !function (t, e = "x") { const i = wa(e), s = t.length, n = Array(s).fill(0), o = Array(s); let a, r, l, c = ya(t, 0); for (a = 0; a < s; ++a)if (r = l, l = c, c = ya(t, a + 1), l) { if (c) { const t = c[e] - l[e]; n[a] = 0 !== t ? (c[i] - l[i]) / t : 0 } o[a] = r ? c ? bn(n[a - 1]) !== bn(n[a]) ? 0 : (n[a - 1] + n[a]) / 2 : n[a - 1] : n[a] } !function (t, e, i) { const s = t.length; let n, o, a, r, l, c = ya(t, 0); for (let h = 0; h < s - 1; ++h)l = c, c = ya(t, h + 1), l && c && (wn(e[h], 0, _a) ? i[h] = i[h + 1] = 0 : (n = i[h] / e[h], o = i[h + 1] / e[h], r = Math.pow(n, 2) + Math.pow(o, 2), r <= 9 || (a = 3 / Math.sqrt(r), i[h] = n * a * e[h], i[h + 1] = o * a * e[h]))) }(t, n, o), function (t, e, i = "x") { const s = wa(i), n = t.length; let o, a, r, l = ya(t, 0); for (let c = 0; c < n; ++c) { if (a = r, r = l, l = ya(t, c + 1), !r) continue; const n = r[i], h = r[s]; a && (o = (n - a[i]) / 3, r[`cp1${i}`] = n - o, r[`cp1${s}`] = h - o * e[c]), l && (o = (l[i] - n) / 3, r[`cp2${i}`] = n + o, r[`cp2${s}`] = h + o * e[c]) } }(t, o, e) }(t, n); else { let i = s ? t[t.length - 1] : t[0]; for (o = 0, a = t.length; o < a; ++o)r = t[o], l = va(i, r, t[Math.min(o + 1, a - (s ? 0 : 1)) % a], e.tension), r.cp1x = l.previous.x, r.cp1y = l.previous.y, r.cp2x = l.next.x, r.cp2y = l.next.y, i = r } e.capBezierPoints && function (t, e) { let i, s, n, o, a, r = Fo(t[0], e); for (i = 0, s = t.length; i < s; ++i)a = o, o = r, r = i < s - 1 && Fo(t[i + 1], e), o && (n = t[i], a && (n.cp1x = xa(n.cp1x, e.left, e.right), n.cp1y = xa(n.cp1y, e.top, e.bottom)), r && (n.cp2x = xa(n.cp2x, e.left, e.right), n.cp2y = xa(n.cp2y, e.top, e.bottom))) }(t, i) } function Ea() { return "undefined" != typeof window && "undefined" != typeof document } function Ca(t) { let e = t.parentNode; return e && "[object ShadowRoot]" === e.toString() && (e = e.host), e } function Aa(t, e, i) { let s; return "string" == typeof t ? (s = parseInt(t, 10), -1 !== t.indexOf("%") && (s = s / 100 * e.parentNode[i])) : s = t, s } const Ma = t => window.getComputedStyle(t, null), Sa = ["top", "right", "bottom", "left"]; function Oa(t, e, i) { const s = {}; i = i ? "-" + i : ""; for (let n = 0; n < 4; n++) { const o = Sa[n]; s[o] = parseFloat(t[e + "-" + o + i]) || 0 } return s.width = s.left + s.right, s.height = s.top + s.bottom, s } function Pa(t, e) { if ("native" in t) return t; const { canvas: i, currentDevicePixelRatio: s } = e, n = Ma(i), o = "border-box" === n.boxSizing, a = Oa(n, "padding"), r = Oa(n, "border", "width"), { x: l, y: c, box: h } = function (t, e) { const i = t.touches, s = i && i.length ? i[0] : t, { offsetX: n, offsetY: o } = s; let a, r, l = !1; if (((t, e, i) => (t > 0 || e > 0) && (!i || !i.shadowRoot))(n, o, t.target)) a = n, r = o; else { const t = e.getBoundingClientRect(); a = s.clientX - t.left, r = s.clientY - t.top, l = !0 } return { x: a, y: r, box: l } }(t, i), d = a.left + (h && r.left), u = a.top + (h && r.top); let { width: p, height: f } = e; return o && (p -= a.width + r.width, f -= a.height + r.height), { x: Math.round((l - d) / p * i.width / s), y: Math.round((c - u) / f * i.height / s) } } const Ta = t => Math.round(10 * t) / 10; function La(t, e, i) { const s = e || 1, n = Math.floor(t.height * s), o = Math.floor(t.width * s); t.height = n / s, t.width = o / s; const a = t.canvas; return a.style && (i || !a.style.height && !a.style.width) && (a.style.height = `${t.height}px`, a.style.width = `${t.width}px`), (t.currentDevicePixelRatio !== s || a.height !== n || a.width !== o) && (t.currentDevicePixelRatio = s, a.height = n, a.width = o, t.ctx.setTransform(s, 0, 0, s, 0, 0), !0) } const Da = function () { let t = !1; try { const e = { get passive() { return t = !0, !1 } }; window.addEventListener("test", null, e), window.removeEventListener("test", null, e) } catch (t) { } return t }(); function Ia(t, e) { const i = function (t, e) { return Ma(t).getPropertyValue(e) }(t, e), s = i && i.match(/^(\d+)(\.\d+)?px$/); return s ? +s[1] : void 0 } function Ba(t, e, i, s) { return { x: t.x + i * (e.x - t.x), y: t.y + i * (e.y - t.y) } } function Ra(t, e, i, s) { return { x: t.x + i * (e.x - t.x), y: "middle" === s ? i < .5 ? t.y : e.y : "after" === s ? i < 1 ? t.y : e.y : i > 0 ? e.y : t.y } } function za(t, e, i, s) { const n = { x: t.cp2x, y: t.cp2y }, o = { x: e.cp1x, y: e.cp1y }, a = Ba(t, n, i), r = Ba(n, o, i), l = Ba(o, e, i), c = Ba(a, r, i), h = Ba(r, l, i); return Ba(c, h, i) } const ja = new Map; function Na(t, e, i) { return function (t, e) { e = e || {}; const i = t + JSON.stringify(e); let s = ja.get(i); return s || (s = new Intl.NumberFormat(t, e), ja.set(i, s)), s }(e, i).format(t) } function Fa(t, e, i) { return t ? function (t, e) { return { x: i => t + t + e - i, setWidth(t) { e = t }, textAlign: t => "center" === t ? t : "right" === t ? "left" : "right", xPlus: (t, e) => t - e, leftForLtr: (t, e) => t - e } }(e, i) : { x: t => t, setWidth(t) { }, textAlign: t => t, xPlus: (t, e) => t + e, leftForLtr: (t, e) => t } } function Va(t, e) { let i, s; "ltr" !== e && "rtl" !== e || (i = t.canvas.style, s = [i.getPropertyValue("direction"), i.getPropertyPriority("direction")], i.setProperty("direction", e, "important"), t.prevTextDirection = s) } function Ha(t, e) { void 0 !== e && (delete t.prevTextDirection, t.canvas.style.setProperty("direction", e[0], e[1])) } function Wa(t) { return "angle" === t ? { between: On, compare: Mn, normalize: Sn } : { between: Tn, compare: (t, e) => t - e, normalize: t => t } } function $a({ start: t, end: e, count: i, loop: s, style: n }) { return { start: t % i, end: e % i, loop: s && (e - t + 1) % i == 0, style: n } } function qa(t, e, i) { if (!i) return [t]; const { property: s, start: n, end: o } = i, a = e.length, { compare: r, between: l, normalize: c } = Wa(s), { start: h, end: d, loop: u, style: p } = function (t, e, i) { const { property: s, start: n, end: o } = i, { between: a, normalize: r } = Wa(s), l = e.length; let c, h, { start: d, end: u, loop: p } = t; if (p) { for (d += l, u += l, c = 0, h = l; c < h && a(r(e[d % l][s]), n, o); ++c)d--, u--; d %= l, u %= l } return u < d && (u += l), { start: d, end: u, loop: p, style: t.style } }(t, e, i), f = []; let g, m, b, _ = !1, y = null; for (let t = h, i = h; t <= d; ++t)m = e[t % a], m.skip || (g = c(m[s]), g !== b && (_ = l(g, n, o), null === y && (_ || l(n, b, g) && 0 !== r(n, b)) && (y = 0 === r(g, n) ? t : i), null !== y && (!_ || 0 === r(o, g) || l(o, b, g)) && (f.push($a({ start: y, end: t, loop: u, count: a, style: p })), y = null), i = t, b = g)); return null !== y && f.push($a({ start: y, end: d, loop: u, count: a, style: p })), f } function Ua(t, e) { const i = [], s = t.segments; for (let n = 0; n < s.length; n++) { const o = qa(s[n], t.points, e); o.length && i.push(...o) } return i } function Ya(t) { return { backgroundColor: t.backgroundColor, borderCapStyle: t.borderCapStyle, borderDash: t.borderDash, borderDashOffset: t.borderDashOffset, borderJoinStyle: t.borderJoinStyle, borderWidth: t.borderWidth, borderColor: t.borderColor } } function Xa(t, e) { return e && JSON.stringify(t) !== JSON.stringify(e) } var Ka = new class { constructor() { this._request = null, this._charts = new Map, this._running = !1, this._lastDate = void 0 } _notify(t, e, i, s) { const n = e.listeners[s], o = e.duration; n.forEach((s => s({ chart: t, initial: e.initial, numSteps: o, currentStep: Math.min(i - e.start, o) }))) } _refresh() { this._request || (this._running = !0, this._request = jn.call(window, (() => { this._update(), this._request = null, this._running && this._refresh() }))) } _update(t = Date.now()) { let e = 0; this._charts.forEach(((i, s) => { if (!i.running || !i.items.length) return; const n = i.items; let o, a = n.length - 1, r = !1; for (; a >= 0; --a)o = n[a], o._active ? (o._total > i.duration && (i.duration = o._total), o.tick(t), r = !0) : (n[a] = n[n.length - 1], n.pop()); r && (s.draw(), this._notify(s, i, t, "progress")), n.length || (i.running = !1, this._notify(s, i, t, "complete"), i.initial = !1), e += n.length })), this._lastDate = t, 0 === e && (this._running = !1) } _getAnims(t) { const e = this._charts; let i = e.get(t); return i || (i = { running: !1, initial: !0, items: [], listeners: { complete: [], progress: [] } }, e.set(t, i)), i } listen(t, e, i) { this._getAnims(t).listeners[e].push(i) } add(t, e) { e && e.length && this._getAnims(t).items.push(...e) } has(t) { return this._getAnims(t).items.length > 0 } start(t) { const e = this._charts.get(t); e && (e.running = !0, e.start = Date.now(), e.duration = e.items.reduce(((t, e) => Math.max(t, e._duration)), 0), this._refresh()) } running(t) { if (!this._running) return !1; const e = this._charts.get(t); return !!(e && e.running && e.items.length) } stop(t) { const e = this._charts.get(t); if (!e || !e.items.length) return; const i = e.items; let s = i.length - 1; for (; s >= 0; --s)i[s].cancel(); e.items = [], this._notify(t, e, Date.now(), "complete") } remove(t) { return this._charts.delete(t) } }; const Za = "transparent", Qa = { boolean: (t, e, i) => i > .5 ? e : t, color(t, e, i) { const s = Mo(t || Za), n = s.valid && Mo(e || Za); return n && n.valid ? n.mix(s, i).hexString() : e }, number: (t, e, i) => t + (e - t) * i }; class Ga { constructor(t, e, i, s) { const n = e[i]; s = ia([t.to, s, n, t.from]); const o = ia([t.from, n, s]); this._active = !0, this._fn = t.fn || Qa[t.type || typeof o], this._easing = Yn[t.easing] || Yn.linear, this._start = Math.floor(Date.now() + (t.delay || 0)), this._duration = this._total = Math.floor(t.duration), this._loop = !!t.loop, this._target = e, this._prop = i, this._from = o, this._to = s, this._promises = void 0 } active() { return this._active } update(t, e, i) { if (this._active) { this._notify(!1); const s = this._target[this._prop], n = i - this._start, o = this._duration - n; this._start = i, this._duration = Math.floor(Math.max(o, t.duration)), this._total += n, this._loop = !!t.loop, this._to = ia([t.to, e, s, t.from]), this._from = ia([t.from, s, e]) } } cancel() { this._active && (this.tick(Date.now()), this._active = !1, this._notify(!1)) } tick(t) { const e = t - this._start, i = this._duration, s = this._prop, n = this._from, o = this._loop, a = this._to; let r; if (this._active = n !== a && (o || e < i), !this._active) return this._target[s] = a, void this._notify(!0); e < 0 ? this._target[s] = n : (r = e / i % 2, r = o && r > 1 ? 2 - r : r, r = this._easing(Math.min(1, Math.max(0, r))), this._target[s] = this._fn(n, a, r)) } wait() { const t = this._promises || (this._promises = []); return new Promise(((e, i) => { t.push({ res: e, rej: i }) })) } _notify(t) { const e = t ? "res" : "rej", i = this._promises || []; for (let t = 0; t < i.length; t++)i[t][e]() } } Do.set("animation", { delay: void 0, duration: 1e3, easing: "easeOutQuart", fn: void 0, from: void 0, loop: void 0, to: void 0, type: void 0 }); const Ja = Object.keys(Do.animation); Do.describe("animation", { _fallback: !1, _indexable: !1, _scriptable: t => "onProgress" !== t && "onComplete" !== t && "fn" !== t }), Do.set("animations", { colors: { type: "color", properties: ["color", "borderColor", "backgroundColor"] }, numbers: { type: "number", properties: ["x", "y", "borderWidth", "radius", "tension"] } }), Do.describe("animations", { _fallback: "animation" }), Do.set("transitions", { active: { animation: { duration: 400 } }, resize: { animation: { duration: 0 } }, show: { animations: { colors: { from: "transparent" }, visible: { type: "boolean", duration: 0 } } }, hide: { animations: { colors: { to: "transparent" }, visible: { type: "boolean", easing: "linear", fn: t => 0 | t } } } }); class tr { constructor(t, e) { this._chart = t, this._properties = new Map, this.configure(e) } configure(t) { if (!Vs(t)) return; const e = this._properties; Object.getOwnPropertyNames(t).forEach((i => { const s = t[i]; if (!Vs(s)) return; const n = {}; for (const t of Ja) n[t] = s[t]; (Fs(s.properties) && s.properties || [i]).forEach((t => { t !== i && e.has(t) || e.set(t, n) })) })) } _animateOptions(t, e) { const i = e.options, s = function (t, e) { if (!e) return; let i = t.options; if (i) return i.$shared && (t.options = i = Object.assign({}, i, { $shared: !1, $animations: {} })), i; t.options = e }(t, i); if (!s) return []; const n = this._createAnimations(s, i); return i.$shared && function (t, e) { const i = [], s = Object.keys(e); for (let e = 0; e < s.length; e++) { const n = t[s[e]]; n && n.active() && i.push(n.wait()) } return Promise.all(i) }(t.options.$animations, i).then((() => { t.options = i }), (() => { })), n } _createAnimations(t, e) { const i = this._properties, s = [], n = t.$animations || (t.$animations = {}), o = Object.keys(e), a = Date.now(); let r; for (r = o.length - 1; r >= 0; --r) { const l = o[r]; if ("$" === l.charAt(0)) continue; if ("options" === l) { s.push(...this._animateOptions(t, e)); continue } const c = e[l]; let h = n[l]; const d = i.get(l); if (h) { if (d && h.active()) { h.update(d, c, a); continue } h.cancel() } d && d.duration ? (n[l] = h = new Ga(d, t, l, c), s.push(h)) : t[l] = c } return s } update(t, e) { if (0 === this._properties.size) return void Object.assign(t, e); const i = this._createAnimations(t, e); return i.length ? (Ka.add(this._chart, i), !0) : void 0 } } function er(t, e) { const i = t && t.options || {}, s = i.reverse, n = void 0 === i.min ? e : 0, o = void 0 === i.max ? e : 0; return { start: s ? o : n, end: s ? n : o } } function ir(t, e) { const i = [], s = t._getSortedDatasetMetas(e); let n, o; for (n = 0, o = s.length; n < o; ++n)i.push(s[n].index); return i } function sr(t, e, i, s = {}) { const n = t.keys, o = "single" === s.mode; let a, r, l, c; if (null !== e) { for (a = 0, r = n.length; a < r; ++a) { if (l = +n[a], l === i) { if (s.all) continue; break } c = t.values[l], Hs(c) && (o || 0 === e || bn(e) === bn(c)) && (e += c) } return e } } function nr(t, e) { const i = t && t.options.stacked; return i || void 0 === i && void 0 !== e.stack } function or(t, e, i) { const s = t[e] || (t[e] = {}); return s[i] || (s[i] = {}) } function ar(t, e, i, s) { for (const n of e.getMatchingVisibleMetas(s).reverse()) { const e = t[n.index]; if (i && e > 0 || !i && e < 0) return n.index } return null } function rr(t, e) { const { chart: i, _cachedMeta: s } = t, n = i._stacks || (i._stacks = {}), { iScale: o, vScale: a, index: r } = s, l = o.axis, c = a.axis, h = function (t, e, i) { return `${t.id}.${e.id}.${i.stack || i.type}` }(o, a, s), d = e.length; let u; for (let t = 0; t < d; ++t) { const i = e[t], { [l]: o, [c]: d } = i; u = (i._stacks || (i._stacks = {}))[c] = or(n, h, o), u[r] = d, u._top = ar(u, a, !0, s.type), u._bottom = ar(u, a, !1, s.type) } } function lr(t, e) { const i = t.scales; return Object.keys(i).filter((t => i[t].axis === e)).shift() } function cr(t, e) { const i = t.controller.index, s = t.vScale && t.vScale.axis; if (s) { e = e || t._parsed; for (const t of e) { const e = t._stacks; if (!e || void 0 === e[s] || void 0 === e[s][i]) return; delete e[s][i] } } } const hr = t => "reset" === t || "none" === t, dr = (t, e) => e ? t : Object.assign({}, t); class ur { constructor(t, e) { this.chart = t, this._ctx = t.ctx, this.index = e, this._cachedDataOpts = {}, this._cachedMeta = this.getMeta(), this._type = this._cachedMeta.type, this.options = void 0, this._parsing = !1, this._data = void 0, this._objectData = void 0, this._sharedOptions = void 0, this._drawStart = void 0, this._drawCount = void 0, this.enableOptionSharing = !1, this.supportsDecimation = !1, this.$context = void 0, this._syncList = [], this.initialize() } initialize() { const t = this._cachedMeta; this.configure(), this.linkScales(), t._stacked = nr(t.vScale, t), this.addElements() } updateIndex(t) { this.index !== t && cr(this._cachedMeta), this.index = t } linkScales() { const t = this.chart, e = this._cachedMeta, i = this.getDataset(), s = (t, e, i, s) => "x" === t ? e : "r" === t ? s : i, n = e.xAxisID = $s(i.xAxisID, lr(t, "x")), o = e.yAxisID = $s(i.yAxisID, lr(t, "y")), a = e.rAxisID = $s(i.rAxisID, lr(t, "r")), r = e.indexAxis, l = e.iAxisID = s(r, n, o, a), c = e.vAxisID = s(r, o, n, a); e.xScale = this.getScaleForId(n), e.yScale = this.getScaleForId(o), e.rScale = this.getScaleForId(a), e.iScale = this.getScaleForId(l), e.vScale = this.getScaleForId(c) } getDataset() { return this.chart.data.datasets[this.index] } getMeta() { return this.chart.getDatasetMeta(this.index) } getScaleForId(t) { return this.chart.scales[t] } _getOtherScale(t) { const e = this._cachedMeta; return t === e.iScale ? e.vScale : e.iScale } reset() { this._update("reset") } _destroy() { const t = this._cachedMeta; this._data && Rn(this._data, this), t._stacked && cr(t) } _dataCheck() { const t = this.getDataset(), e = t.data || (t.data = []), i = this._data; if (Vs(e)) this._data = function (t) { const e = Object.keys(t), i = new Array(e.length); let s, n, o; for (s = 0, n = e.length; s < n; ++s)o = e[s], i[s] = { x: o, y: t[o] }; return i }(e); else if (i !== e) { if (i) { Rn(i, this); const t = this._cachedMeta; cr(t), t._parsed = [] } e && Object.isExtensible(e) && (this, (s = e)._chartjs ? s._chartjs.listeners.push(this) : (Object.defineProperty(s, "_chartjs", { configurable: !0, enumerable: !1, value: { listeners: [this] } }), Bn.forEach((t => { const e = "_onData" + nn(t), i = s[t]; Object.defineProperty(s, t, { configurable: !0, enumerable: !1, value(...t) { const n = i.apply(this, t); return s._chartjs.listeners.forEach((i => { "function" == typeof i[e] && i[e](...t) })), n } }) })))), this._syncList = [], this._data = e } var s } addElements() { const t = this._cachedMeta; this._dataCheck(), this.datasetElementType && (t.dataset = new this.datasetElementType) } buildOrUpdateElements(t) { const e = this._cachedMeta, i = this.getDataset(); let s = !1; this._dataCheck(); const n = e._stacked; e._stacked = nr(e.vScale, e), e.stack !== i.stack && (s = !0, cr(e), e.stack = i.stack), this._resyncElements(t), (s || n !== e._stacked) && rr(this, e._parsed) } configure() { const t = this.chart.config, e = t.datasetScopeKeys(this._type), i = t.getOptionScopes(this.getDataset(), e, !0); this.options = t.createResolver(i, this.getContext()), this._parsing = this.options.parsing, this._cachedDataOpts = {} } parse(t, e) { const { _cachedMeta: i, _data: s } = this, { iScale: n, _stacked: o } = i, a = n.axis; let r, l, c, h = 0 === t && e === s.length || i._sorted, d = t > 0 && i._parsed[t - 1]; if (!1 === this._parsing) i._parsed = s, i._sorted = !0, c = s; else { c = Fs(s[t]) ? this.parseArrayData(i, s, t, e) : Vs(s[t]) ? this.parseObjectData(i, s, t, e) : this.parsePrimitiveData(i, s, t, e); const n = () => null === l[a] || d && l[a] < d[a]; for (r = 0; r < e; ++r)i._parsed[r + t] = l = c[r], h && (n() && (h = !1), d = l); i._sorted = h } o && rr(this, c) } parsePrimitiveData(t, e, i, s) { const { iScale: n, vScale: o } = t, a = n.axis, r = o.axis, l = n.getLabels(), c = n === o, h = new Array(s); let d, u, p; for (d = 0, u = s; d < u; ++d)p = d + i, h[d] = { [a]: c || n.parse(l[p], p), [r]: o.parse(e[p], p) }; return h } parseArrayData(t, e, i, s) { const { xScale: n, yScale: o } = t, a = new Array(s); let r, l, c, h; for (r = 0, l = s; r < l; ++r)c = r + i, h = e[c], a[r] = { x: n.parse(h[0], c), y: o.parse(h[1], c) }; return a } parseObjectData(t, e, i, s) { const { xScale: n, yScale: o } = t, { xAxisKey: a = "x", yAxisKey: r = "y" } = this._parsing, l = new Array(s); let c, h, d, u; for (c = 0, h = s; c < h; ++c)d = c + i, u = e[d], l[c] = { x: n.parse(sn(u, a), d), y: o.parse(sn(u, r), d) }; return l } getParsed(t) { return this._cachedMeta._parsed[t] } getDataElement(t) { return this._cachedMeta.data[t] } applyStack(t, e, i) { const s = this.chart, n = this._cachedMeta, o = e[t.axis]; return sr({ keys: ir(s, !0), values: e._stacks[t.axis] }, o, n.index, { mode: i }) } updateRangeFromParsed(t, e, i, s) { const n = i[e.axis]; let o = null === n ? NaN : n; const a = s && i._stacks[e.axis]; s && a && (s.values = a, o = sr(s, n, this._cachedMeta.index)), t.min = Math.min(t.min, o), t.max = Math.max(t.max, o) } getMinMax(t, e) { const i = this._cachedMeta, s = i._parsed, n = i._sorted && t === i.iScale, o = s.length, a = this._getOtherScale(t), r = ((t, e, i) => t && !e.hidden && e._stacked && { keys: ir(i, !0), values: null })(e, i, this.chart), l = { min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY }, { min: c, max: h } = function (t) { const { min: e, max: i, minDefined: s, maxDefined: n } = t.getUserBounds(); return { min: s ? e : Number.NEGATIVE_INFINITY, max: n ? i : Number.POSITIVE_INFINITY } }(a); let d, u; function p() { u = s[d]; const e = u[a.axis]; return !Hs(u[t.axis]) || c > e || h < e } for (d = 0; d < o && (p() || (this.updateRangeFromParsed(l, t, u, r), !n)); ++d); if (n) for (d = o - 1; d >= 0; --d)if (!p()) { this.updateRangeFromParsed(l, t, u, r); break } return l } getAllParsedValues(t) { const e = this._cachedMeta._parsed, i = []; let s, n, o; for (s = 0, n = e.length; s < n; ++s)o = e[s][t.axis], Hs(o) && i.push(o); return i } getMaxOverflow() { return !1 } getLabelAndValue(t) { const e = this._cachedMeta, i = e.iScale, s = e.vScale, n = this.getParsed(t); return { label: i ? "" + i.getLabelForValue(n[i.axis]) : "", value: s ? "" + s.getLabelForValue(n[s.axis]) : "" } } _update(t) { const e = this._cachedMeta; this.update(t || "default"), e._clip = function (t) { let e, i, s, n; return Vs(t) ? (e = t.top, i = t.right, s = t.bottom, n = t.left) : e = i = s = n = t, { top: e, right: i, bottom: s, left: n, disabled: !1 === t } }($s(this.options.clip, function (t, e, i) { if (!1 === i) return !1; const s = er(t, i), n = er(e, i); return { top: n.end, right: s.end, bottom: n.start, left: s.start } }(e.xScale, e.yScale, this.getMaxOverflow()))) } update(t) { } draw() { const t = this._ctx, e = this.chart, i = this._cachedMeta, s = i.data || [], n = e.chartArea, o = [], a = this._drawStart || 0, r = this._drawCount || s.length - a, l = this.options.drawActiveElementsOnTop; let c; for (i.dataset && i.dataset.draw(t, n, a, r), c = a; c < a + r; ++c) { const e = s[c]; e.hidden || (e.active && l ? o.push(e) : e.draw(t, n)) } for (c = 0; c < o.length; ++c)o[c].draw(t, n) } getStyle(t, e) { const i = e ? "active" : "default"; return void 0 === t && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(i) : this.resolveDataElementOptions(t || 0, i) } getContext(t, e, i) { const s = this.getDataset(); let n; if (t >= 0 && t < this._cachedMeta.data.length) { const e = this._cachedMeta.data[t]; n = e.$context || (e.$context = function (t, e, i) { return sa(t, { active: !1, dataIndex: e, parsed: void 0, raw: void 0, element: i, index: e, mode: "default", type: "data" }) }(this.getContext(), t, e)), n.parsed = this.getParsed(t), n.raw = s.data[t], n.index = n.dataIndex = t } else n = this.$context || (this.$context = function (t, e) { return sa(t, { active: !1, dataset: void 0, datasetIndex: e, index: e, mode: "default", type: "dataset" }) }(this.chart.getContext(), this.index)), n.dataset = s, n.index = n.datasetIndex = this.index; return n.active = !!e, n.mode = i, n } resolveDatasetElementOptions(t) { return this._resolveElementOptions(this.datasetElementType.id, t) } resolveDataElementOptions(t, e) { return this._resolveElementOptions(this.dataElementType.id, e, t) } _resolveElementOptions(t, e = "default", i) { const s = "active" === e, n = this._cachedDataOpts, o = t + "-" + e, a = n[o], r = this.enableOptionSharing && on(i); if (a) return dr(a, r); const l = this.chart.config, c = l.datasetElementScopeKeys(this._type, t), h = s ? [`${t}Hover`, "hover", t, ""] : [t, ""], d = l.getOptionScopes(this.getDataset(), c), u = Object.keys(Do.elements[t]), p = l.resolveNamedOptions(d, u, (() => this.getContext(i, s)), h); return p.$shared && (p.$shared = r, n[o] = Object.freeze(dr(p, r))), p } _resolveAnimations(t, e, i) { const s = this.chart, n = this._cachedDataOpts, o = `animation-${e}`, a = n[o]; if (a) return a; let r; if (!1 !== s.options.animation) { const s = this.chart.config, n = s.datasetAnimationScopeKeys(this._type, e), o = s.getOptionScopes(this.getDataset(), n); r = s.createResolver(o, this.getContext(t, i, e)) } const l = new tr(s, r && r.animations); return r && r._cacheable && (n[o] = Object.freeze(l)), l } getSharedOptions(t) { if (t.$shared) return this._sharedOptions || (this._sharedOptions = Object.assign({}, t)) } includeOptions(t, e) { return !e || hr(t) || this.chart._animationsDisabled } _getSharedOptions(t, e) { const i = this.resolveDataElementOptions(t, e), s = this._sharedOptions, n = this.getSharedOptions(i), o = this.includeOptions(e, n) || n !== s; return this.updateSharedOptions(n, e, i), { sharedOptions: n, includeOptions: o } } updateElement(t, e, i, s) { hr(s) ? Object.assign(t, i) : this._resolveAnimations(e, s).update(t, i) } updateSharedOptions(t, e, i) { t && !hr(e) && this._resolveAnimations(void 0, e).update(t, i) } _setStyle(t, e, i, s) { t.active = s; const n = this.getStyle(e, s); this._resolveAnimations(e, i, s).update(t, { options: !s && this.getSharedOptions(n) || n }) } removeHoverStyle(t, e, i) { this._setStyle(t, i, "active", !1) } setHoverStyle(t, e, i) { this._setStyle(t, i, "active", !0) } _removeDatasetHoverStyle() { const t = this._cachedMeta.dataset; t && this._setStyle(t, void 0, "active", !1) } _setDatasetHoverStyle() { const t = this._cachedMeta.dataset; t && this._setStyle(t, void 0, "active", !0) } _resyncElements(t) { const e = this._data, i = this._cachedMeta.data; for (const [t, e, i] of this._syncList) this[t](e, i); this._syncList = []; const s = i.length, n = e.length, o = Math.min(n, s); o && this.parse(0, o), n > s ? this._insertElements(s, n - s, t) : n < s && this._removeElements(n, s - n) } _insertElements(t, e, i = !0) { const s = this._cachedMeta, n = s.data, o = t + e; let a; const r = t => { for (t.length += e, a = t.length - 1; a >= o; a--)t[a] = t[a - e] }; for (r(n), a = t; a < o; ++a)n[a] = new this.dataElementType; this._parsing && r(s._parsed), this.parse(t, e), i && this.updateElements(n, t, e, "reset") } updateElements(t, e, i, s) { } _removeElements(t, e) { const i = this._cachedMeta; if (this._parsing) { const s = i._parsed.splice(t, e); i._stacked && cr(i, s) } i.data.splice(t, e) } _sync(t) { if (this._parsing) this._syncList.push(t); else { const [e, i, s] = t; this[e](i, s) } this.chart._dataChanges.push([this.index, ...t]) } _onDataPush() { const t = arguments.length; this._sync(["_insertElements", this.getDataset().data.length - t, t]) } _onDataPop() { this._sync(["_removeElements", this._cachedMeta.data.length - 1, 1]) } _onDataShift() { this._sync(["_removeElements", 0, 1]) } _onDataSplice(t, e) { e && this._sync(["_removeElements", t, e]); const i = arguments.length - 2; i && this._sync(["_insertElements", t, i]) } _onDataUnshift() { this._sync(["_insertElements", 0, arguments.length]) } } function pr(t) { const e = t.iScale, i = function (t, e) { if (!t._cache.$bar) { const i = t.getMatchingVisibleMetas(e); let s = []; for (let e = 0, n = i.length; e < n; e++)s = s.concat(i[e].controller.getAllParsedValues(t)); t._cache.$bar = zn(s.sort(((t, e) => t - e))) } return t._cache.$bar }(e, t.type); let s, n, o, a, r = e._length; const l = () => { 32767 !== o && -32768 !== o && (on(a) && (r = Math.min(r, Math.abs(o - a) || r)), a = o) }; for (s = 0, n = i.length; s < n; ++s)o = e.getPixelForValue(i[s]), l(); for (a = void 0, s = 0, n = e.ticks.length; s < n; ++s)o = e.getPixelForTick(s), l(); return r } function fr(t, e, i, s) { return Fs(t) ? function (t, e, i, s) { const n = i.parse(t[0], s), o = i.parse(t[1], s), a = Math.min(n, o), r = Math.max(n, o); let l = a, c = r; Math.abs(a) > Math.abs(r) && (l = r, c = a), e[i.axis] = c, e._custom = { barStart: l, barEnd: c, start: n, end: o, min: a, max: r } }(t, e, i, s) : e[i.axis] = i.parse(t, s), e } function gr(t, e, i, s) { const n = t.iScale, o = t.vScale, a = n.getLabels(), r = n === o, l = []; let c, h, d, u; for (c = i, h = i + s; c < h; ++c)u = e[c], d = {}, d[n.axis] = r || n.parse(a[c], c), l.push(fr(u, d, o, c)); return l } function mr(t) { return t && void 0 !== t.barStart && void 0 !== t.barEnd } function br(t, e, i, s) { let n = e.borderSkipped; const o = {}; if (!n) return void (t.borderSkipped = o); if (!0 === n) return void (t.borderSkipped = { top: !0, right: !0, bottom: !0, left: !0 }); const { start: a, end: r, reverse: l, top: c, bottom: h } = function (t) { let e, i, s, n, o; return t.horizontal ? (e = t.base > t.x, i = "left", s = "right") : (e = t.base < t.y, i = "bottom", s = "top"), e ? (n = "end", o = "start") : (n = "start", o = "end"), { start: i, end: s, reverse: e, top: n, bottom: o } }(t); "middle" === n && i && (t.enableBorderRadius = !0, (i._top || 0) === s ? n = c : (i._bottom || 0) === s ? n = h : (o[_r(h, a, r, l)] = !0, n = c)), o[_r(n, a, r, l)] = !0, t.borderSkipped = o } function _r(t, e, i, s) { var n, o, a; return s ? (a = i, t = yr(t = (n = t) === (o = e) ? a : n === a ? o : n, i, e)) : t = yr(t, e, i), t } function yr(t, e, i) { return "start" === t ? e : "end" === t ? i : t } function wr(t, { inflateAmount: e }, i) { t.inflateAmount = "auto" === e ? 1 === i ? .33 : 0 : e } ur.defaults = {}, ur.prototype.datasetElementType = null, ur.prototype.dataElementType = null; class vr extends ur { parsePrimitiveData(t, e, i, s) { return gr(t, e, i, s) } parseArrayData(t, e, i, s) { return gr(t, e, i, s) } parseObjectData(t, e, i, s) { const { iScale: n, vScale: o } = t, { xAxisKey: a = "x", yAxisKey: r = "y" } = this._parsing, l = "x" === n.axis ? a : r, c = "x" === o.axis ? a : r, h = []; let d, u, p, f; for (d = i, u = i + s; d < u; ++d)f = e[d], p = {}, p[n.axis] = n.parse(sn(f, l), d), h.push(fr(sn(f, c), p, o, d)); return h } updateRangeFromParsed(t, e, i, s) { super.updateRangeFromParsed(t, e, i, s); const n = i._custom; n && e === this._cachedMeta.vScale && (t.min = Math.min(t.min, n.min), t.max = Math.max(t.max, n.max)) } getMaxOverflow() { return 0 } getLabelAndValue(t) { const e = this._cachedMeta, { iScale: i, vScale: s } = e, n = this.getParsed(t), o = n._custom, a = mr(o) ? "[" + o.start + ", " + o.end + "]" : "" + s.getLabelForValue(n[s.axis]); return { label: "" + i.getLabelForValue(n[i.axis]), value: a } } initialize() { this.enableOptionSharing = !0, super.initialize(), this._cachedMeta.stack = this.getDataset().stack } update(t) { const e = this._cachedMeta; this.updateElements(e.data, 0, e.data.length, t) } updateElements(t, e, i, s) { const n = "reset" === s, { index: o, _cachedMeta: { vScale: a } } = this, r = a.getBasePixel(), l = a.isHorizontal(), c = this._getRuler(), { sharedOptions: h, includeOptions: d } = this._getSharedOptions(e, s); for (let u = e; u < e + i; u++) { const e = this.getParsed(u), i = n || Ns(e[a.axis]) ? { base: r, head: r } : this._calculateBarValuePixels(u), p = this._calculateBarIndexPixels(u, c), f = (e._stacks || {})[a.axis], g = { horizontal: l, base: i.base, enableBorderRadius: !f || mr(e._custom) || o === f._top || o === f._bottom, x: l ? i.head : p.center, y: l ? p.center : i.head, height: l ? p.size : Math.abs(i.size), width: l ? Math.abs(i.size) : p.size }; d && (g.options = h || this.resolveDataElementOptions(u, t[u].active ? "active" : s)); const m = g.options || t[u].options; br(g, m, f, o), wr(g, m, c.ratio), this.updateElement(t[u], u, g, s) } } _getStacks(t, e) { const { iScale: i } = this._cachedMeta, s = i.getMatchingVisibleMetas(this._type).filter((t => t.controller.options.grouped)), n = i.options.stacked, o = [], a = t => { const i = t.controller.getParsed(e), s = i && i[t.vScale.axis]; if (Ns(s) || isNaN(s)) return !0 }; for (const i of s) if ((void 0 === e || !a(i)) && ((!1 === n || -1 === o.indexOf(i.stack) || void 0 === n && void 0 === i.stack) && o.push(i.stack), i.index === t)) break; return o.length || o.push(void 0), o } _getStackCount(t) { return this._getStacks(void 0, t).length } _getStackIndex(t, e, i) { const s = this._getStacks(t, i), n = void 0 !== e ? s.indexOf(e) : -1; return -1 === n ? s.length - 1 : n } _getRuler() { const t = this.options, e = this._cachedMeta, i = e.iScale, s = []; let n, o; for (n = 0, o = e.data.length; n < o; ++n)s.push(i.getPixelForValue(this.getParsed(n)[i.axis], n)); const a = t.barThickness; return { min: a || pr(e), pixels: s, start: i._startPixel, end: i._endPixel, stackCount: this._getStackCount(), scale: i, grouped: t.grouped, ratio: a ? 1 : t.categoryPercentage * t.barPercentage } } _calculateBarValuePixels(t) { const { _cachedMeta: { vScale: e, _stacked: i }, options: { base: s, minBarLength: n } } = this, o = s || 0, a = this.getParsed(t), r = a._custom, l = mr(r); let c, h, d = a[e.axis], u = 0, p = i ? this.applyStack(e, a, i) : d; p !== d && (u = p - d, p = d), l && (d = r.barStart, p = r.barEnd - r.barStart, 0 !== d && bn(d) !== bn(r.barEnd) && (u = 0), u += d); const f = Ns(s) || l ? u : s; let g = e.getPixelForValue(f); if (c = this.chart.getDataVisibility(t) ? e.getPixelForValue(u + p) : g, h = c - g, Math.abs(h) < n) { h = function (t, e, i) { return 0 !== t ? bn(t) : (e.isHorizontal() ? 1 : -1) * (e.min >= i ? 1 : -1) }(h, e, o) * n, d === o && (g -= h / 2); const t = e.getPixelForDecimal(0), i = e.getPixelForDecimal(1), s = Math.min(t, i), a = Math.max(t, i); g = Math.max(Math.min(g, a), s), c = g + h } if (g === e.getPixelForValue(o)) { const t = bn(h) * e.getLineWidthForValue(o) / 2; g += t, h -= t } return { size: h, base: g, head: c, center: c + h / 2 } } _calculateBarIndexPixels(t, e) { const i = e.scale, s = this.options, n = s.skipNull, o = $s(s.maxBarThickness, 1 / 0); let a, r; if (e.grouped) { const i = n ? this._getStackCount(t) : e.stackCount, l = "flex" === s.barThickness ? function (t, e, i, s) { const n = e.pixels, o = n[t]; let a = t > 0 ? n[t - 1] : null, r = t < n.length - 1 ? n[t + 1] : null; const l = i.categoryPercentage; null === a && (a = o - (null === r ? e.end - e.start : r - o)), null === r && (r = o + o - a); const c = o - (o - Math.min(a, r)) / 2 * l; return { chunk: Math.abs(r - a) / 2 * l / s, ratio: i.barPercentage, start: c } }(t, e, s, i) : function (t, e, i, s) { const n = i.barThickness; let o, a; return Ns(n) ? (o = e.min * i.categoryPercentage, a = i.barPercentage) : (o = n * s, a = 1), { chunk: o / s, ratio: a, start: e.pixels[t] - o / 2 } }(t, e, s, i), c = this._getStackIndex(this.index, this._cachedMeta.stack, n ? t : void 0); a = l.start + l.chunk * c + l.chunk / 2, r = Math.min(o, l.chunk * l.ratio) } else a = i.getPixelForValue(this.getParsed(t)[i.axis], t), r = Math.min(o, e.min * e.ratio); return { base: a - r / 2, head: a + r / 2, center: a, size: r } } draw() { const t = this._cachedMeta, e = t.vScale, i = t.data, s = i.length; let n = 0; for (; n < s; ++n)null !== this.getParsed(n)[e.axis] && i[n].draw(this._ctx) } } vr.id = "bar", vr.defaults = { datasetElementType: !1, dataElementType: "bar", categoryPercentage: .8, barPercentage: .9, grouped: !0, animations: { numbers: { type: "number", properties: ["x", "y", "base", "width", "height"] } } }, vr.overrides = { scales: { _index_: { type: "category", offset: !0, grid: { offset: !0 } }, _value_: { type: "linear", beginAtZero: !0 } } }; class xr extends ur { initialize() { this.enableOptionSharing = !0, super.initialize() } parsePrimitiveData(t, e, i, s) { const n = super.parsePrimitiveData(t, e, i, s); for (let t = 0; t < n.length; t++)n[t]._custom = this.resolveDataElementOptions(t + i).radius; return n } parseArrayData(t, e, i, s) { const n = super.parseArrayData(t, e, i, s); for (let t = 0; t < n.length; t++) { const s = e[i + t]; n[t]._custom = $s(s[2], this.resolveDataElementOptions(t + i).radius) } return n } parseObjectData(t, e, i, s) { const n = super.parseObjectData(t, e, i, s); for (let t = 0; t < n.length; t++) { const s = e[i + t]; n[t]._custom = $s(s && s.r && +s.r, this.resolveDataElementOptions(t + i).radius) } return n } getMaxOverflow() { const t = this._cachedMeta.data; let e = 0; for (let i = t.length - 1; i >= 0; --i)e = Math.max(e, t[i].size(this.resolveDataElementOptions(i)) / 2); return e > 0 && e } getLabelAndValue(t) { const e = this._cachedMeta, { xScale: i, yScale: s } = e, n = this.getParsed(t), o = i.getLabelForValue(n.x), a = s.getLabelForValue(n.y), r = n._custom; return { label: e.label, value: "(" + o + ", " + a + (r ? ", " + r : "") + ")" } } update(t) { const e = this._cachedMeta.data; this.updateElements(e, 0, e.length, t) } updateElements(t, e, i, s) { const n = "reset" === s, { iScale: o, vScale: a } = this._cachedMeta, { sharedOptions: r, includeOptions: l } = this._getSharedOptions(e, s), c = o.axis, h = a.axis; for (let d = e; d < e + i; d++) { const e = t[d], i = !n && this.getParsed(d), u = {}, p = u[c] = n ? o.getPixelForDecimal(.5) : o.getPixelForValue(i[c]), f = u[h] = n ? a.getBasePixel() : a.getPixelForValue(i[h]); u.skip = isNaN(p) || isNaN(f), l && (u.options = r || this.resolveDataElementOptions(d, e.active ? "active" : s), n && (u.options.radius = 0)), this.updateElement(e, d, u, s) } } resolveDataElementOptions(t, e) { const i = this.getParsed(t); let s = super.resolveDataElementOptions(t, e); s.$shared && (s = Object.assign({}, s, { $shared: !1 })); const n = s.radius; return "active" !== e && (s.radius = 0), s.radius += $s(i && i._custom, n), s } } xr.id = "bubble", xr.defaults = { datasetElementType: !1, dataElementType: "point", animations: { numbers: { type: "number", properties: ["x", "y", "borderWidth", "radius"] } } }, xr.overrides = { scales: { x: { type: "linear" }, y: { type: "linear" } }, plugins: { tooltip: { callbacks: { title: () => "" } } } }; class kr extends ur { constructor(t, e) { super(t, e), this.enableOptionSharing = !0, this.innerRadius = void 0, this.outerRadius = void 0, this.offsetX = void 0, this.offsetY = void 0 } linkScales() { } parse(t, e) { const i = this.getDataset().data, s = this._cachedMeta; if (!1 === this._parsing) s._parsed = i; else { let n, o, a = t => +i[t]; if (Vs(i[t])) { const { key: t = "value" } = this._parsing; a = e => +sn(i[e], t) } for (n = t, o = t + e; n < o; ++n)s._parsed[n] = a(n) } } _getRotation() { return xn(this.options.rotation - 90) } _getCircumference() { return xn(this.options.circumference) } _getRotationExtents() { let t = cn, e = -cn; for (let i = 0; i < this.chart.data.datasets.length; ++i)if (this.chart.isDatasetVisible(i)) { const s = this.chart.getDatasetMeta(i).controller, n = s._getRotation(), o = s._getCircumference(); t = Math.min(t, n), e = Math.max(e, n + o) } return { rotation: t, circumference: e - t } } update(t) { const e = this.chart, { chartArea: i } = e, s = this._cachedMeta, n = s.data, o = this.getMaxBorderWidth() + this.getMaxOffset(n) + this.options.spacing, a = Math.max((Math.min(i.width, i.height) - o) / 2, 0), r = Math.min((c = a, "string" == typeof (l = this.options.cutout) && l.endsWith("%") ? parseFloat(l) / 100 : l / c), 1); var l, c; const h = this._getRingWeight(this.index), { circumference: d, rotation: u } = this._getRotationExtents(), { ratioX: p, ratioY: f, offsetX: g, offsetY: m } = function (t, e, i) { let s = 1, n = 1, o = 0, a = 0; if (e < cn) { const r = t, l = r + e, c = Math.cos(r), h = Math.sin(r), d = Math.cos(l), u = Math.sin(l), p = (t, e, s) => On(t, r, l, !0) ? 1 : Math.max(e, e * i, s, s * i), f = (t, e, s) => On(t, r, l, !0) ? -1 : Math.min(e, e * i, s, s * i), g = p(0, c, d), m = p(pn, h, u), b = f(ln, c, d), _ = f(ln + pn, h, u); s = (g - b) / 2, n = (m - _) / 2, o = -(g + b) / 2, a = -(m + _) / 2 } return { ratioX: s, ratioY: n, offsetX: o, offsetY: a } }(u, d, r), b = (i.width - o) / p, _ = (i.height - o) / f, y = Math.max(Math.min(b, _) / 2, 0), w = qs(this.options.radius, y), v = (w - Math.max(w * r, 0)) / this._getVisibleDatasetWeightTotal(); this.offsetX = g * w, this.offsetY = m * w, s.total = this.calculateTotal(), this.outerRadius = w - v * this._getRingWeightOffset(this.index), this.innerRadius = Math.max(this.outerRadius - v * h, 0), this.updateElements(n, 0, n.length, t) } _circumference(t, e) { const i = this.options, s = this._cachedMeta, n = this._getCircumference(); return e && i.animation.animateRotate || !this.chart.getDataVisibility(t) || null === s._parsed[t] || s.data[t].hidden ? 0 : this.calculateCircumference(s._parsed[t] * n / cn) } updateElements(t, e, i, s) { const n = "reset" === s, o = this.chart, a = o.chartArea, r = o.options.animation, l = (a.left + a.right) / 2, c = (a.top + a.bottom) / 2, h = n && r.animateScale, d = h ? 0 : this.innerRadius, u = h ? 0 : this.outerRadius, { sharedOptions: p, includeOptions: f } = this._getSharedOptions(e, s); let g, m = this._getRotation(); for (g = 0; g < e; ++g)m += this._circumference(g, n); for (g = e; g < e + i; ++g) { const e = this._circumference(g, n), i = t[g], o = { x: l + this.offsetX, y: c + this.offsetY, startAngle: m, endAngle: m + e, circumference: e, outerRadius: u, innerRadius: d }; f && (o.options = p || this.resolveDataElementOptions(g, i.active ? "active" : s)), m += e, this.updateElement(i, g, o, s) } } calculateTotal() { const t = this._cachedMeta, e = t.data; let i, s = 0; for (i = 0; i < e.length; i++) { const n = t._parsed[i]; null === n || isNaN(n) || !this.chart.getDataVisibility(i) || e[i].hidden || (s += Math.abs(n)) } return s } calculateCircumference(t) { const e = this._cachedMeta.total; return e > 0 && !isNaN(t) ? cn * (Math.abs(t) / e) : 0 } getLabelAndValue(t) { const e = this._cachedMeta, i = this.chart, s = i.data.labels || [], n = Na(e._parsed[t], i.options.locale); return { label: s[t] || "", value: n } } getMaxBorderWidth(t) { let e = 0; const i = this.chart; let s, n, o, a, r; if (!t) for (s = 0, n = i.data.datasets.length; s < n; ++s)if (i.isDatasetVisible(s)) { o = i.getDatasetMeta(s), t = o.data, a = o.controller; break } if (!t) return 0; for (s = 0, n = t.length; s < n; ++s)r = a.resolveDataElementOptions(s), "inner" !== r.borderAlign && (e = Math.max(e, r.borderWidth || 0, r.hoverBorderWidth || 0)); return e } getMaxOffset(t) { let e = 0; for (let i = 0, s = t.length; i < s; ++i) { const t = this.resolveDataElementOptions(i); e = Math.max(e, t.offset || 0, t.hoverOffset || 0) } return e } _getRingWeightOffset(t) { let e = 0; for (let i = 0; i < t; ++i)this.chart.isDatasetVisible(i) && (e += this._getRingWeight(i)); return e } _getRingWeight(t) { return Math.max($s(this.chart.data.datasets[t].weight, 1), 0) } _getVisibleDatasetWeightTotal() { return this._getRingWeightOffset(this.chart.data.datasets.length) || 1 } } kr.id = "doughnut", kr.defaults = { datasetElementType: !1, dataElementType: "arc", animation: { animateRotate: !0, animateScale: !1 }, animations: { numbers: { type: "number", properties: ["circumference", "endAngle", "innerRadius", "outerRadius", "startAngle", "x", "y", "offset", "borderWidth", "spacing"] } }, cutout: "50%", rotation: 0, circumference: 360, radius: "100%", spacing: 0, indexAxis: "r" }, kr.descriptors = { _scriptable: t => "spacing" !== t, _indexable: t => "spacing" !== t }, kr.overrides = { aspectRatio: 1, plugins: { legend: { labels: { generateLabels(t) { const e = t.data; if (e.labels.length && e.datasets.length) { const { labels: { pointStyle: i } } = t.legend.options; return e.labels.map(((e, s) => { const n = t.getDatasetMeta(0).controller.getStyle(s); return { text: e, fillStyle: n.backgroundColor, strokeStyle: n.borderColor, lineWidth: n.borderWidth, pointStyle: i, hidden: !t.getDataVisibility(s), index: s } })) } return [] } }, onClick(t, e, i) { i.chart.toggleDataVisibility(e.index), i.chart.update() } }, tooltip: { callbacks: { title: () => "", label(t) { let e = t.label; const i = ": " + t.formattedValue; return Fs(e) ? (e = e.slice(), e[0] += i) : e += i, e } } } } }; class Er extends ur { initialize() { this.enableOptionSharing = !0, this.supportsDecimation = !0, super.initialize() } update(t) { const e = this._cachedMeta, { dataset: i, data: s = [], _dataset: n } = e, o = this.chart._animationsDisabled; let { start: a, count: r } = Hn(e, s, o); this._drawStart = a, this._drawCount = r, Wn(e) && (a = 0, r = s.length), i._chart = this.chart, i._datasetIndex = this.index, i._decimated = !!n._decimated, i.points = s; const l = this.resolveDatasetElementOptions(t); this.options.showLine || (l.borderWidth = 0), l.segment = this.options.segment, this.updateElement(i, void 0, { animated: !o, options: l }, t), this.updateElements(s, a, r, t) } updateElements(t, e, i, s) { const n = "reset" === s, { iScale: o, vScale: a, _stacked: r, _dataset: l } = this._cachedMeta, { sharedOptions: c, includeOptions: h } = this._getSharedOptions(e, s), d = o.axis, u = a.axis, { spanGaps: p, segment: f } = this.options, g = yn(p) ? p : Number.POSITIVE_INFINITY, m = this.chart._animationsDisabled || n || "none" === s; let b = e > 0 && this.getParsed(e - 1); for (let p = e; p < e + i; ++p) { const e = t[p], i = this.getParsed(p), _ = m ? e : {}, y = Ns(i[u]), w = _[d] = o.getPixelForValue(i[d], p), v = _[u] = n || y ? a.getBasePixel() : a.getPixelForValue(r ? this.applyStack(a, i, r) : i[u], p); _.skip = isNaN(w) || isNaN(v) || y, _.stop = p > 0 && Math.abs(i[d] - b[d]) > g, f && (_.parsed = i, _.raw = l.data[p]), h && (_.options = c || this.resolveDataElementOptions(p, e.active ? "active" : s)), m || this.updateElement(e, p, _, s), b = i } } getMaxOverflow() { const t = this._cachedMeta, e = t.dataset, i = e.options && e.options.borderWidth || 0, s = t.data || []; if (!s.length) return i; const n = s[0].size(this.resolveDataElementOptions(0)), o = s[s.length - 1].size(this.resolveDataElementOptions(s.length - 1)); return Math.max(i, n, o) / 2 } draw() { const t = this._cachedMeta; t.dataset.updateControlPoints(this.chart.chartArea, t.iScale.axis), super.draw() } } Er.id = "line", Er.defaults = { datasetElementType: "line", dataElementType: "point", showLine: !0, spanGaps: !1 }, Er.overrides = { scales: { _index_: { type: "category" }, _value_: { type: "linear" } } }; class Cr extends ur { constructor(t, e) { super(t, e), this.innerRadius = void 0, this.outerRadius = void 0 } getLabelAndValue(t) { const e = this._cachedMeta, i = this.chart, s = i.data.labels || [], n = Na(e._parsed[t].r, i.options.locale); return { label: s[t] || "", value: n } } parseObjectData(t, e, i, s) { return ba.bind(this)(t, e, i, s) } update(t) { const e = this._cachedMeta.data; this._updateRadius(), this.updateElements(e, 0, e.length, t) } getMinMax() { const t = this._cachedMeta, e = { min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY }; return t.data.forEach(((t, i) => { const s = this.getParsed(i).r; !isNaN(s) && this.chart.getDataVisibility(i) && (s < e.min && (e.min = s), s > e.max && (e.max = s)) })), e } _updateRadius() { const t = this.chart, e = t.chartArea, i = t.options, s = Math.min(e.right - e.left, e.bottom - e.top), n = Math.max(s / 2, 0), o = (n - Math.max(i.cutoutPercentage ? n / 100 * i.cutoutPercentage : 1, 0)) / t.getVisibleDatasetCount(); this.outerRadius = n - o * this.index, this.innerRadius = this.outerRadius - o } updateElements(t, e, i, s) { const n = "reset" === s, o = this.chart, a = o.options.animation, r = this._cachedMeta.rScale, l = r.xCenter, c = r.yCenter, h = r.getIndexAngle(0) - .5 * ln; let d, u = h; const p = 360 / this.countVisibleElements(); for (d = 0; d < e; ++d)u += this._computeAngle(d, s, p); for (d = e; d < e + i; d++) { const e = t[d]; let i = u, f = u + this._computeAngle(d, s, p), g = o.getDataVisibility(d) ? r.getDistanceFromCenterForValue(this.getParsed(d).r) : 0; u = f, n && (a.animateScale && (g = 0), a.animateRotate && (i = f = h)); const m = { x: l, y: c, innerRadius: 0, outerRadius: g, startAngle: i, endAngle: f, options: this.resolveDataElementOptions(d, e.active ? "active" : s) }; this.updateElement(e, d, m, s) } } countVisibleElements() { const t = this._cachedMeta; let e = 0; return t.data.forEach(((t, i) => { !isNaN(this.getParsed(i).r) && this.chart.getDataVisibility(i) && e++ })), e } _computeAngle(t, e, i) { return this.chart.getDataVisibility(t) ? xn(this.resolveDataElementOptions(t, e).angle || i) : 0 } } Cr.id = "polarArea", Cr.defaults = { dataElementType: "arc", animation: { animateRotate: !0, animateScale: !0 }, animations: { numbers: { type: "number", properties: ["x", "y", "startAngle", "endAngle", "innerRadius", "outerRadius"] } }, indexAxis: "r", startAngle: 0 }, Cr.overrides = { aspectRatio: 1, plugins: { legend: { labels: { generateLabels(t) { const e = t.data; if (e.labels.length && e.datasets.length) { const { labels: { pointStyle: i } } = t.legend.options; return e.labels.map(((e, s) => { const n = t.getDatasetMeta(0).controller.getStyle(s); return { text: e, fillStyle: n.backgroundColor, strokeStyle: n.borderColor, lineWidth: n.borderWidth, pointStyle: i, hidden: !t.getDataVisibility(s), index: s } })) } return [] } }, onClick(t, e, i) { i.chart.toggleDataVisibility(e.index), i.chart.update() } }, tooltip: { callbacks: { title: () => "", label: t => t.chart.data.labels[t.dataIndex] + ": " + t.formattedValue } } }, scales: { r: { type: "radialLinear", angleLines: { display: !1 }, beginAtZero: !0, grid: { circular: !0 }, pointLabels: { display: !1 }, startAngle: 0 } } }; class Ar extends kr { } Ar.id = "pie", Ar.defaults = { cutout: 0, rotation: 0, circumference: 360, radius: "100%" }; class Mr extends ur { getLabelAndValue(t) { const e = this._cachedMeta.vScale, i = this.getParsed(t); return { label: e.getLabels()[t], value: "" + e.getLabelForValue(i[e.axis]) } } parseObjectData(t, e, i, s) { return ba.bind(this)(t, e, i, s) } update(t) { const e = this._cachedMeta, i = e.dataset, s = e.data || [], n = e.iScale.getLabels(); if (i.points = s, "resize" !== t) { const e = this.resolveDatasetElementOptions(t); this.options.showLine || (e.borderWidth = 0); const o = { _loop: !0, _fullLoop: n.length === s.length, options: e }; this.updateElement(i, void 0, o, t) } this.updateElements(s, 0, s.length, t) } updateElements(t, e, i, s) { const n = this._cachedMeta.rScale, o = "reset" === s; for (let a = e; a < e + i; a++) { const e = t[a], i = this.resolveDataElementOptions(a, e.active ? "active" : s), r = n.getPointPositionForValue(a, this.getParsed(a).r), l = o ? n.xCenter : r.x, c = o ? n.yCenter : r.y, h = { x: l, y: c, angle: r.angle, skip: isNaN(l) || isNaN(c), options: i }; this.updateElement(e, a, h, s) } } } Mr.id = "radar", Mr.defaults = { datasetElementType: "line", dataElementType: "point", indexAxis: "r", showLine: !0, elements: { line: { fill: "start" } } }, Mr.overrides = { aspectRatio: 1, scales: { r: { type: "radialLinear" } } }; class Sr { constructor() { this.x = void 0, this.y = void 0, this.active = !1, this.options = void 0, this.$animations = void 0 } tooltipPosition(t) { const { x: e, y: i } = this.getProps(["x", "y"], t); return { x: e, y: i } } hasValue() { return yn(this.x) && yn(this.y) } getProps(t, e) { const i = this.$animations; if (!e || !i) return this; const s = {}; return t.forEach((t => { s[t] = i[t] && i[t].active() ? i[t]._to : this[t] })), s } } Sr.defaults = {}, Sr.defaultRoutes = void 0; const Or = { values: t => Fs(t) ? t : "" + t, numeric(t, e, i) { if (0 === t) return "0"; const s = this.chart.options.locale; let n, o = t; if (i.length > 1) { const e = Math.max(Math.abs(i[0].value), Math.abs(i[i.length - 1].value)); (e < 1e-4 || e > 1e15) && (n = "scientific"), o = function (t, e) { let i = e.length > 3 ? e[2].value - e[1].value : e[1].value - e[0].value; return Math.abs(i) >= 1 && t !== Math.floor(t) && (i = t - Math.floor(t)), i }(t, i) } const a = mn(Math.abs(o)), r = Math.max(Math.min(-1 * Math.floor(a), 20), 0), l = { notation: n, minimumFractionDigits: r, maximumFractionDigits: r }; return Object.assign(l, this.options.ticks.format), Na(t, s, l) }, logarithmic(t, e, i) { if (0 === t) return "0"; const s = t / Math.pow(10, Math.floor(mn(t))); return 1 === s || 2 === s || 5 === s ? Or.numeric.call(this, t, e, i) : "" } }; var Pr = { formatters: Or }; function Tr(t, e, i, s, n) { const o = $s(s, 0), a = Math.min($s(n, t.length), t.length); let r, l, c, h = 0; for (i = Math.ceil(i), n && (r = n - s, i = r / Math.floor(r / i)), c = o; c < 0;)h++, c = Math.round(o + h * i); for (l = Math.max(o, 0); l < a; l++)l === c && (e.push(t[l]), h++, c = Math.round(o + h * i)) } Do.set("scale", { display: !0, offset: !1, reverse: !1, beginAtZero: !1, bounds: "ticks", grace: 0, grid: { display: !0, lineWidth: 1, drawBorder: !0, drawOnChartArea: !0, drawTicks: !0, tickLength: 8, tickWidth: (t, e) => e.lineWidth, tickColor: (t, e) => e.color, offset: !1, borderDash: [], borderDashOffset: 0, borderWidth: 1 }, title: { display: !1, text: "", padding: { top: 4, bottom: 4 } }, ticks: { minRotation: 0, maxRotation: 50, mirror: !1, textStrokeWidth: 0, textStrokeColor: "", padding: 3, display: !0, autoSkip: !0, autoSkipPadding: 3, labelOffset: 0, callback: Pr.formatters.values, minor: {}, major: {}, align: "center", crossAlign: "near", showLabelBackdrop: !1, backdropColor: "rgba(255, 255, 255, 0.75)", backdropPadding: 2 } }), Do.route("scale.ticks", "color", "", "color"), Do.route("scale.grid", "color", "", "borderColor"), Do.route("scale.grid", "borderColor", "", "borderColor"), Do.route("scale.title", "color", "", "color"), Do.describe("scale", { _fallback: !1, _scriptable: t => !t.startsWith("before") && !t.startsWith("after") && "callback" !== t && "parser" !== t, _indexable: t => "borderDash" !== t && "tickBorderDash" !== t }), Do.describe("scales", { _fallback: "scale" }), Do.describe("scale.ticks", { _scriptable: t => "backdropPadding" !== t && "callback" !== t, _indexable: t => "backdropPadding" !== t }); const Lr = (t, e, i) => "top" === e || "left" === e ? t[e] + i : t[e] - i; function Dr(t, e) { const i = [], s = t.length / e, n = t.length; let o = 0; for (; o < n; o += s)i.push(t[Math.floor(o)]); return i } function Ir(t, e, i) { const s = t.ticks.length, n = Math.min(e, s - 1), o = t._startPixel, a = t._endPixel, r = 1e-6; let l, c = t.getPixelForTick(n); if (!(i && (l = 1 === s ? Math.max(c - o, a - c) : 0 === e ? (t.getPixelForTick(1) - c) / 2 : (c - t.getPixelForTick(n - 1)) / 2, c += n < e ? l : -l, c < o - r || c > a + r))) return c } function Br(t) { return t.drawTicks ? t.tickLength : 0 } function Rr(t, e) { if (!t.display) return 0; const i = ea(t.font, e), s = ta(t.padding); return (Fs(t.text) ? t.text.length : 1) * i.lineHeight + s.height } function zr(t, e, i) { let s = Fn(t); return (i && "right" !== e || !i && "right" === e) && (s = (t => "left" === t ? "right" : "right" === t ? "left" : t)(s)), s } class jr extends Sr { constructor(t) { super(), this.id = t.id, this.type = t.type, this.options = void 0, this.ctx = t.ctx, this.chart = t.chart, this.top = void 0, this.bottom = void 0, this.left = void 0, this.right = void 0, this.width = void 0, this.height = void 0, this._margins = { left: 0, right: 0, top: 0, bottom: 0 }, this.maxWidth = void 0, this.maxHeight = void 0, this.paddingTop = void 0, this.paddingBottom = void 0, this.paddingLeft = void 0, this.paddingRight = void 0, this.axis = void 0, this.labelRotation = void 0, this.min = void 0, this.max = void 0, this._range = void 0, this.ticks = [], this._gridLineItems = null, this._labelItems = null, this._labelSizes = null, this._length = 0, this._maxLength = 0, this._longestTextCache = {}, this._startPixel = void 0, this._endPixel = void 0, this._reversePixels = !1, this._userMax = void 0, this._userMin = void 0, this._suggestedMax = void 0, this._suggestedMin = void 0, this._ticksLength = 0, this._borderValue = 0, this._cache = {}, this._dataLimitsCached = !1, this.$context = void 0 } init(t) { this.options = t.setContext(this.getContext()), this.axis = t.axis, this._userMin = this.parse(t.min), this._userMax = this.parse(t.max), this._suggestedMin = this.parse(t.suggestedMin), this._suggestedMax = this.parse(t.suggestedMax) } parse(t, e) { return t } getUserBounds() { let { _userMin: t, _userMax: e, _suggestedMin: i, _suggestedMax: s } = this; return t = Ws(t, Number.POSITIVE_INFINITY), e = Ws(e, Number.NEGATIVE_INFINITY), i = Ws(i, Number.POSITIVE_INFINITY), s = Ws(s, Number.NEGATIVE_INFINITY), { min: Ws(t, i), max: Ws(e, s), minDefined: Hs(t), maxDefined: Hs(e) } } getMinMax(t) { let e, { min: i, max: s, minDefined: n, maxDefined: o } = this.getUserBounds(); if (n && o) return { min: i, max: s }; const a = this.getMatchingVisibleMetas(); for (let r = 0, l = a.length; r < l; ++r)e = a[r].controller.getMinMax(this, t), n || (i = Math.min(i, e.min)), o || (s = Math.max(s, e.max)); return i = o && i > s ? s : i, s = n && i > s ? i : s, { min: Ws(i, Ws(s, i)), max: Ws(s, Ws(i, s)) } } getPadding() { return { left: this.paddingLeft || 0, top: this.paddingTop || 0, right: this.paddingRight || 0, bottom: this.paddingBottom || 0 } } getTicks() { return this.ticks } getLabels() { const t = this.chart.data; return this.options.labels || (this.isHorizontal() ? t.xLabels : t.yLabels) || t.labels || [] } beforeLayout() { this._cache = {}, this._dataLimitsCached = !1 } beforeUpdate() { Us(this.options.beforeUpdate, [this]) } update(t, e, i) { const { beginAtZero: s, grace: n, ticks: o } = this.options, a = o.sampleSize; this.beforeUpdate(), this.maxWidth = t, this.maxHeight = e, this._margins = i = Object.assign({ left: 0, right: 0, top: 0, bottom: 0 }, i), this.ticks = null, this._labelSizes = null, this._gridLineItems = null, this._labelItems = null, this.beforeSetDimensions(), this.setDimensions(), this.afterSetDimensions(), this._maxLength = this.isHorizontal() ? this.width + i.left + i.right : this.height + i.top + i.bottom, this._dataLimitsCached || (this.beforeDataLimits(), this.determineDataLimits(), this.afterDataLimits(), this._range = function (t, e, i) { const { min: s, max: n } = t, o = qs(e, (n - s) / 2), a = (t, e) => i && 0 === t ? 0 : t + e; return { min: a(s, -Math.abs(o)), max: a(n, o) } }(this, n, s), this._dataLimitsCached = !0), this.beforeBuildTicks(), this.ticks = this.buildTicks() || [], this.afterBuildTicks(); const r = a < this.ticks.length; this._convertTicksToLabels(r ? Dr(this.ticks, a) : this.ticks), this.configure(), this.beforeCalculateLabelRotation(), this.calculateLabelRotation(), this.afterCalculateLabelRotation(), o.display && (o.autoSkip || "auto" === o.source) && (this.ticks = function (t, e) { const i = t.options.ticks, s = i.maxTicksLimit || function (t) { const e = t.options.offset, i = t._tickSize(), s = t._length / i + (e ? 0 : 1), n = t._maxLength / i; return Math.floor(Math.min(s, n)) }(t), n = i.major.enabled ? function (t) { const e = []; let i, s; for (i = 0, s = t.length; i < s; i++)t[i].major && e.push(i); return e }(e) : [], o = n.length, a = n[0], r = n[o - 1], l = []; if (o > s) return function (t, e, i, s) { let n, o = 0, a = i[0]; for (s = Math.ceil(s), n = 0; n < t.length; n++)n === a && (e.push(t[n]), o++, a = i[o * s]) }(e, l, n, o / s), l; const c = function (t, e, i) { const s = function (t) { const e = t.length; let i, s; if (e < 2) return !1; for (s = t[0], i = 1; i < e; ++i)if (t[i] - t[i - 1] !== s) return !1; return s }(t), n = e.length / i; if (!s) return Math.max(n, 1); const o = function (t) { const e = [], i = Math.sqrt(t); let s; for (s = 1; s < i; s++)t % s == 0 && (e.push(s), e.push(t / s)); return i === (0 | i) && e.push(i), e.sort(((t, e) => t - e)).pop(), e }(s); for (let t = 0, e = o.length - 1; t < e; t++) { const e = o[t]; if (e > n) return e } return Math.max(n, 1) }(n, e, s); if (o > 0) { let t, i; const s = o > 1 ? Math.round((r - a) / (o - 1)) : null; for (Tr(e, l, c, Ns(s) ? 0 : a - s, a), t = 0, i = o - 1; t < i; t++)Tr(e, l, c, n[t], n[t + 1]); return Tr(e, l, c, r, Ns(s) ? e.length : r + s), l } return Tr(e, l, c), l }(this, this.ticks), this._labelSizes = null, this.afterAutoSkip()), r && this._convertTicksToLabels(this.ticks), this.beforeFit(), this.fit(), this.afterFit(), this.afterUpdate() } configure() { let t, e, i = this.options.reverse; this.isHorizontal() ? (t = this.left, e = this.right) : (t = this.top, e = this.bottom, i = !i), this._startPixel = t, this._endPixel = e, this._reversePixels = i, this._length = e - t, this._alignToPixels = this.options.alignToPixels } afterUpdate() { Us(this.options.afterUpdate, [this]) } beforeSetDimensions() { Us(this.options.beforeSetDimensions, [this]) } setDimensions() { this.isHorizontal() ? (this.width = this.maxWidth, this.left = 0, this.right = this.width) : (this.height = this.maxHeight, this.top = 0, this.bottom = this.height), this.paddingLeft = 0, this.paddingTop = 0, this.paddingRight = 0, this.paddingBottom = 0 } afterSetDimensions() { Us(this.options.afterSetDimensions, [this]) } _callHooks(t) { this.chart.notifyPlugins(t, this.getContext()), Us(this.options[t], [this]) } beforeDataLimits() { this._callHooks("beforeDataLimits") } determineDataLimits() { } afterDataLimits() { this._callHooks("afterDataLimits") } beforeBuildTicks() { this._callHooks("beforeBuildTicks") } buildTicks() { return [] } afterBuildTicks() { this._callHooks("afterBuildTicks") } beforeTickToLabelConversion() { Us(this.options.beforeTickToLabelConversion, [this]) } generateTickLabels(t) { const e = this.options.ticks; let i, s, n; for (i = 0, s = t.length; i < s; i++)n = t[i], n.label = Us(e.callback, [n.value, i, t], this) } afterTickToLabelConversion() { Us(this.options.afterTickToLabelConversion, [this]) } beforeCalculateLabelRotation() { Us(this.options.beforeCalculateLabelRotation, [this]) } calculateLabelRotation() { const t = this.options, e = t.ticks, i = this.ticks.length, s = e.minRotation || 0, n = e.maxRotation; let o, a, r, l = s; if (!this._isVisible() || !e.display || s >= n || i <= 1 || !this.isHorizontal()) return void (this.labelRotation = s); const c = this._getLabelSizes(), h = c.widest.width, d = c.highest.height, u = Pn(this.chart.width - h, 0, this.maxWidth); o = t.offset ? this.maxWidth / i : u / (i - 1), h + 6 > o && (o = u / (i - (t.offset ? .5 : 1)), a = this.maxHeight - Br(t.grid) - e.padding - Rr(t.title, this.chart.options.font), r = Math.sqrt(h * h + d * d), l = kn(Math.min(Math.asin(Pn((c.highest.height + 6) / o, -1, 1)), Math.asin(Pn(a / r, -1, 1)) - Math.asin(Pn(d / r, -1, 1)))), l = Math.max(s, Math.min(n, l))), this.labelRotation = l } afterCalculateLabelRotation() { Us(this.options.afterCalculateLabelRotation, [this]) } afterAutoSkip() { } beforeFit() { Us(this.options.beforeFit, [this]) } fit() { const t = { width: 0, height: 0 }, { chart: e, options: { ticks: i, title: s, grid: n } } = this, o = this._isVisible(), a = this.isHorizontal(); if (o) { const o = Rr(s, e.options.font); if (a ? (t.width = this.maxWidth, t.height = Br(n) + o) : (t.height = this.maxHeight, t.width = Br(n) + o), i.display && this.ticks.length) { const { first: e, last: s, widest: n, highest: o } = this._getLabelSizes(), r = 2 * i.padding, l = xn(this.labelRotation), c = Math.cos(l), h = Math.sin(l); if (a) { const e = i.mirror ? 0 : h * n.width + c * o.height; t.height = Math.min(this.maxHeight, t.height + e + r) } else { const e = i.mirror ? 0 : c * n.width + h * o.height; t.width = Math.min(this.maxWidth, t.width + e + r) } this._calculatePadding(e, s, h, c) } } this._handleMargins(), a ? (this.width = this._length = e.width - this._margins.left - this._margins.right, this.height = t.height) : (this.width = t.width, this.height = this._length = e.height - this._margins.top - this._margins.bottom) } _calculatePadding(t, e, i, s) { const { ticks: { align: n, padding: o }, position: a } = this.options, r = 0 !== this.labelRotation, l = "top" !== a && "x" === this.axis; if (this.isHorizontal()) { const a = this.getPixelForTick(0) - this.left, c = this.right - this.getPixelForTick(this.ticks.length - 1); let h = 0, d = 0; r ? l ? (h = s * t.width, d = i * e.height) : (h = i * t.height, d = s * e.width) : "start" === n ? d = e.width : "end" === n ? h = t.width : "inner" !== n && (h = t.width / 2, d = e.width / 2), this.paddingLeft = Math.max((h - a + o) * this.width / (this.width - a), 0), this.paddingRight = Math.max((d - c + o) * this.width / (this.width - c), 0) } else { let i = e.height / 2, s = t.height / 2; "start" === n ? (i = 0, s = t.height) : "end" === n && (i = e.height, s = 0), this.paddingTop = i + o, this.paddingBottom = s + o } } _handleMargins() { this._margins && (this._margins.left = Math.max(this.paddingLeft, this._margins.left), this._margins.top = Math.max(this.paddingTop, this._margins.top), this._margins.right = Math.max(this.paddingRight, this._margins.right), this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom)) } afterFit() { Us(this.options.afterFit, [this]) } isHorizontal() { const { axis: t, position: e } = this.options; return "top" === e || "bottom" === e || "x" === t } isFullSize() { return this.options.fullSize } _convertTicksToLabels(t) { let e, i; for (this.beforeTickToLabelConversion(), this.generateTickLabels(t), e = 0, i = t.length; e < i; e++)Ns(t[e].label) && (t.splice(e, 1), i--, e--); this.afterTickToLabelConversion() } _getLabelSizes() { let t = this._labelSizes; if (!t) { const e = this.options.ticks.sampleSize; let i = this.ticks; e < i.length && (i = Dr(i, e)), this._labelSizes = t = this._computeLabelSizes(i, i.length) } return t } _computeLabelSizes(t, e) { const { ctx: i, _longestTextCache: s } = this, n = [], o = []; let a, r, l, c, h, d, u, p, f, g, m, b = 0, _ = 0; for (a = 0; a < e; ++a) { if (c = t[a].label, h = this._resolveTickFontOptions(a), i.font = d = h.string, u = s[d] = s[d] || { data: {}, gc: [] }, p = h.lineHeight, f = g = 0, Ns(c) || Fs(c)) { if (Fs(c)) for (r = 0, l = c.length; r < l; ++r)m = c[r], Ns(m) || Fs(m) || (f = Io(i, u.data, u.gc, f, m), g += p) } else f = Io(i, u.data, u.gc, f, c), g = p; n.push(f), o.push(g), b = Math.max(f, b), _ = Math.max(g, _) } !function (t, e) { Ys(t, (t => { const i = t.gc, s = i.length / 2; let n; if (s > e) { for (n = 0; n < s; ++n)delete t.data[i[n]]; i.splice(0, s) } })) }(s, e); const y = n.indexOf(b), w = o.indexOf(_), v = t => ({ width: n[t] || 0, height: o[t] || 0 }); return { first: v(0), last: v(e - 1), widest: v(y), highest: v(w), widths: n, heights: o } } getLabelForValue(t) { return t } getPixelForValue(t, e) { return NaN } getValueForPixel(t) { } getPixelForTick(t) { const e = this.ticks; return t < 0 || t > e.length - 1 ? null : this.getPixelForValue(e[t].value) } getPixelForDecimal(t) { this._reversePixels && (t = 1 - t); const e = this._startPixel + t * this._length; return Pn(this._alignToPixels ? Ro(this.chart, e, 0) : e, -32768, 32767) } getDecimalForPixel(t) { const e = (t - this._startPixel) / this._length; return this._reversePixels ? 1 - e : e } getBasePixel() { return this.getPixelForValue(this.getBaseValue()) } getBaseValue() { const { min: t, max: e } = this; return t < 0 && e < 0 ? e : t > 0 && e > 0 ? t : 0 } getContext(t) { const e = this.ticks || []; if (t >= 0 && t < e.length) { const i = e[t]; return i.$context || (i.$context = function (t, e, i) { return sa(t, { tick: i, index: e, type: "tick" }) }(this.getContext(), t, i)) } return this.$context || (this.$context = sa(this.chart.getContext(), { scale: this, type: "scale" })) } _tickSize() { const t = this.options.ticks, e = xn(this.labelRotation), i = Math.abs(Math.cos(e)), s = Math.abs(Math.sin(e)), n = this._getLabelSizes(), o = t.autoSkipPadding || 0, a = n ? n.widest.width + o : 0, r = n ? n.highest.height + o : 0; return this.isHorizontal() ? r * i > a * s ? a / i : r / s : r * s < a * i ? r / i : a / s } _isVisible() { const t = this.options.display; return "auto" !== t ? !!t : this.getMatchingVisibleMetas().length > 0 } _computeGridLineItems(t) { const e = this.axis, i = this.chart, s = this.options, { grid: n, position: o } = s, a = n.offset, r = this.isHorizontal(), l = this.ticks.length + (a ? 1 : 0), c = Br(n), h = [], d = n.setContext(this.getContext()), u = d.drawBorder ? d.borderWidth : 0, p = u / 2, f = function (t) { return Ro(i, t, u) }; let g, m, b, _, y, w, v, x, k, E, C, A; if ("top" === o) g = f(this.bottom), w = this.bottom - c, x = g - p, E = f(t.top) + p, A = t.bottom; else if ("bottom" === o) g = f(this.top), E = t.top, A = f(t.bottom) - p, w = g + p, x = this.top + c; else if ("left" === o) g = f(this.right), y = this.right - c, v = g - p, k = f(t.left) + p, C = t.right; else if ("right" === o) g = f(this.left), k = t.left, C = f(t.right) - p, y = g + p, v = this.left + c; else if ("x" === e) { if ("center" === o) g = f((t.top + t.bottom) / 2 + .5); else if (Vs(o)) { const t = Object.keys(o)[0], e = o[t]; g = f(this.chart.scales[t].getPixelForValue(e)) } E = t.top, A = t.bottom, w = g + p, x = w + c } else if ("y" === e) { if ("center" === o) g = f((t.left + t.right) / 2); else if (Vs(o)) { const t = Object.keys(o)[0], e = o[t]; g = f(this.chart.scales[t].getPixelForValue(e)) } y = g - p, v = y - c, k = t.left, C = t.right } const M = $s(s.ticks.maxTicksLimit, l), S = Math.max(1, Math.ceil(l / M)); for (m = 0; m < l; m += S) { const t = n.setContext(this.getContext(m)), e = t.lineWidth, s = t.color, o = t.borderDash || [], l = t.borderDashOffset, c = t.tickWidth, d = t.tickColor, u = t.tickBorderDash || [], p = t.tickBorderDashOffset; b = Ir(this, m, a), void 0 !== b && (_ = Ro(i, b, e), r ? y = v = k = C = _ : w = x = E = A = _, h.push({ tx1: y, ty1: w, tx2: v, ty2: x, x1: k, y1: E, x2: C, y2: A, width: e, color: s, borderDash: o, borderDashOffset: l, tickWidth: c, tickColor: d, tickBorderDash: u, tickBorderDashOffset: p })) } return this._ticksLength = l, this._borderValue = g, h } _computeLabelItems(t) { const e = this.axis, i = this.options, { position: s, ticks: n } = i, o = this.isHorizontal(), a = this.ticks, { align: r, crossAlign: l, padding: c, mirror: h } = n, d = Br(i.grid), u = d + c, p = h ? -c : u, f = -xn(this.labelRotation), g = []; let m, b, _, y, w, v, x, k, E, C, A, M, S = "middle"; if ("top" === s) v = this.bottom - p, x = this._getXAxisLabelAlignment(); else if ("bottom" === s) v = this.top + p, x = this._getXAxisLabelAlignment(); else if ("left" === s) { const t = this._getYAxisLabelAlignment(d); x = t.textAlign, w = t.x } else if ("right" === s) { const t = this._getYAxisLabelAlignment(d); x = t.textAlign, w = t.x } else if ("x" === e) { if ("center" === s) v = (t.top + t.bottom) / 2 + u; else if (Vs(s)) { const t = Object.keys(s)[0], e = s[t]; v = this.chart.scales[t].getPixelForValue(e) + u } x = this._getXAxisLabelAlignment() } else if ("y" === e) { if ("center" === s) w = (t.left + t.right) / 2 - u; else if (Vs(s)) { const t = Object.keys(s)[0], e = s[t]; w = this.chart.scales[t].getPixelForValue(e) } x = this._getYAxisLabelAlignment(d).textAlign } "y" === e && ("start" === r ? S = "top" : "end" === r && (S = "bottom")); const O = this._getLabelSizes(); for (m = 0, b = a.length; m < b; ++m) { _ = a[m], y = _.label; const t = n.setContext(this.getContext(m)); k = this.getPixelForTick(m) + n.labelOffset, E = this._resolveTickFontOptions(m), C = E.lineHeight, A = Fs(y) ? y.length : 1; const e = A / 2, i = t.color, r = t.textStrokeColor, c = t.textStrokeWidth; let d, u = x; if (o ? (w = k, "inner" === x && (u = m === b - 1 ? this.options.reverse ? "left" : "right" : 0 === m ? this.options.reverse ? "right" : "left" : "center"), M = "top" === s ? "near" === l || 0 !== f ? -A * C + C / 2 : "center" === l ? -O.highest.height / 2 - e * C + C : -O.highest.height + C / 2 : "near" === l || 0 !== f ? C / 2 : "center" === l ? O.highest.height / 2 - e * C : O.highest.height - A * C, h && (M *= -1)) : (v = k, M = (1 - A) * C / 2), t.showLabelBackdrop) { const e = ta(t.backdropPadding), i = O.heights[m], s = O.widths[m]; let n = v + M - e.top, o = w - e.left; switch (S) { case "middle": n -= i / 2; break; case "bottom": n -= i }switch (x) { case "center": o -= s / 2; break; case "right": o -= s }d = { left: o, top: n, width: s + e.width, height: i + e.height, color: t.backdropColor } } g.push({ rotation: f, label: y, font: E, color: i, strokeColor: r, strokeWidth: c, textOffset: M, textAlign: u, textBaseline: S, translation: [w, v], backdrop: d }) } return g } _getXAxisLabelAlignment() { const { position: t, ticks: e } = this.options; if (-xn(this.labelRotation)) return "top" === t ? "left" : "right"; let i = "center"; return "start" === e.align ? i = "left" : "end" === e.align ? i = "right" : "inner" === e.align && (i = "inner"), i } _getYAxisLabelAlignment(t) { const { position: e, ticks: { crossAlign: i, mirror: s, padding: n } } = this.options, o = t + n, a = this._getLabelSizes().widest.width; let r, l; return "left" === e ? s ? (l = this.right + n, "near" === i ? r = "left" : "center" === i ? (r = "center", l += a / 2) : (r = "right", l += a)) : (l = this.right - o, "near" === i ? r = "right" : "center" === i ? (r = "center", l -= a / 2) : (r = "left", l = this.left)) : "right" === e ? s ? (l = this.left + n, "near" === i ? r = "right" : "center" === i ? (r = "center", l -= a / 2) : (r = "left", l -= a)) : (l = this.left + o, "near" === i ? r = "left" : "center" === i ? (r = "center", l += a / 2) : (r = "right", l = this.right)) : r = "right", { textAlign: r, x: l } } _computeLabelArea() { if (this.options.ticks.mirror) return; const t = this.chart, e = this.options.position; return "left" === e || "right" === e ? { top: 0, left: this.left, bottom: t.height, right: this.right } : "top" === e || "bottom" === e ? { top: this.top, left: 0, bottom: this.bottom, right: t.width } : void 0 } drawBackground() { const { ctx: t, options: { backgroundColor: e }, left: i, top: s, width: n, height: o } = this; e && (t.save(), t.fillStyle = e, t.fillRect(i, s, n, o), t.restore()) } getLineWidthForValue(t) { const e = this.options.grid; if (!this._isVisible() || !e.display) return 0; const i = this.ticks.findIndex((e => e.value === t)); return i >= 0 ? e.setContext(this.getContext(i)).lineWidth : 0 } drawGrid(t) { const e = this.options.grid, i = this.ctx, s = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(t)); let n, o; const a = (t, e, s) => { s.width && s.color && (i.save(), i.lineWidth = s.width, i.strokeStyle = s.color, i.setLineDash(s.borderDash || []), i.lineDashOffset = s.borderDashOffset, i.beginPath(), i.moveTo(t.x, t.y), i.lineTo(e.x, e.y), i.stroke(), i.restore()) }; if (e.display) for (n = 0, o = s.length; n < o; ++n) { const t = s[n]; e.drawOnChartArea && a({ x: t.x1, y: t.y1 }, { x: t.x2, y: t.y2 }, t), e.drawTicks && a({ x: t.tx1, y: t.ty1 }, { x: t.tx2, y: t.ty2 }, { color: t.tickColor, width: t.tickWidth, borderDash: t.tickBorderDash, borderDashOffset: t.tickBorderDashOffset }) } } drawBorder() { const { chart: t, ctx: e, options: { grid: i } } = this, s = i.setContext(this.getContext()), n = i.drawBorder ? s.borderWidth : 0; if (!n) return; const o = i.setContext(this.getContext(0)).lineWidth, a = this._borderValue; let r, l, c, h; this.isHorizontal() ? (r = Ro(t, this.left, n) - n / 2, l = Ro(t, this.right, o) + o / 2, c = h = a) : (c = Ro(t, this.top, n) - n / 2, h = Ro(t, this.bottom, o) + o / 2, r = l = a), e.save(), e.lineWidth = s.borderWidth, e.strokeStyle = s.borderColor, e.beginPath(), e.moveTo(r, c), e.lineTo(l, h), e.stroke(), e.restore() } drawLabels(t) { if (!this.options.ticks.display) return; const e = this.ctx, i = this._computeLabelArea(); i && Vo(e, i); const s = this._labelItems || (this._labelItems = this._computeLabelItems(t)); let n, o; for (n = 0, o = s.length; n < o; ++n) { const t = s[n], i = t.font, o = t.label; t.backdrop && (e.fillStyle = t.backdrop.color, e.fillRect(t.backdrop.left, t.backdrop.top, t.backdrop.width, t.backdrop.height)), qo(e, o, 0, t.textOffset, i, t) } i && Ho(e) } drawTitle() { const { ctx: t, options: { position: e, title: i, reverse: s } } = this; if (!i.display) return; const n = ea(i.font), o = ta(i.padding), a = i.align; let r = n.lineHeight / 2; "bottom" === e || "center" === e || Vs(e) ? (r += o.bottom, Fs(i.text) && (r += n.lineHeight * (i.text.length - 1))) : r += o.top; const { titleX: l, titleY: c, maxWidth: h, rotation: d } = function (t, e, i, s) { const { top: n, left: o, bottom: a, right: r, chart: l } = t, { chartArea: c, scales: h } = l; let d, u, p, f = 0; const g = a - n, m = r - o; if (t.isHorizontal()) { if (u = Vn(s, o, r), Vs(i)) { const t = Object.keys(i)[0], s = i[t]; p = h[t].getPixelForValue(s) + g - e } else p = "center" === i ? (c.bottom + c.top) / 2 + g - e : Lr(t, i, e); d = r - o } else { if (Vs(i)) { const t = Object.keys(i)[0], s = i[t]; u = h[t].getPixelForValue(s) - m + e } else u = "center" === i ? (c.left + c.right) / 2 - m + e : Lr(t, i, e); p = Vn(s, a, n), f = "left" === i ? -pn : pn } return { titleX: u, titleY: p, maxWidth: d, rotation: f } }(this, r, e, a); qo(t, i.text, 0, 0, n, { color: i.color, maxWidth: h, rotation: d, textAlign: zr(a, e, s), textBaseline: "middle", translation: [l, c] }) } draw(t) { this._isVisible() && (this.drawBackground(), this.drawGrid(t), this.drawBorder(), this.drawTitle(), this.drawLabels(t)) } _layers() { const t = this.options, e = t.ticks && t.ticks.z || 0, i = $s(t.grid && t.grid.z, -1); return this._isVisible() && this.draw === jr.prototype.draw ? [{ z: i, draw: t => { this.drawBackground(), this.drawGrid(t), this.drawTitle() } }, { z: i + 1, draw: () => { this.drawBorder() } }, { z: e, draw: t => { this.drawLabels(t) } }] : [{ z: e, draw: t => { this.draw(t) } }] } getMatchingVisibleMetas(t) { const e = this.chart.getSortedVisibleDatasetMetas(), i = this.axis + "AxisID", s = []; let n, o; for (n = 0, o = e.length; n < o; ++n) { const o = e[n]; o[i] !== this.id || t && o.type !== t || s.push(o) } return s } _resolveTickFontOptions(t) { return ea(this.options.ticks.setContext(this.getContext(t)).font) } _maxDigits() { const t = this._resolveTickFontOptions(0).lineHeight; return (this.isHorizontal() ? this.width : this.height) / t } } class Nr { constructor(t, e, i) { this.type = t, this.scope = e, this.override = i, this.items = Object.create(null) } isForType(t) { return Object.prototype.isPrototypeOf.call(this.type.prototype, t.prototype) } register(t) { const e = Object.getPrototypeOf(t); let i; (function (t) { return "id" in t && "defaults" in t })(e) && (i = this.register(e)); const s = this.items, n = t.id, o = this.scope + "." + n; if (!n) throw new Error("class does not have id: " + t); return n in s || (s[n] = t, function (t, e, i) { const s = Gs(Object.create(null), [i ? Do.get(i) : {}, Do.get(e), t.defaults]); Do.set(e, s), t.defaultRoutes && function (t, e) { Object.keys(e).forEach((i => { const s = i.split("."), n = s.pop(), o = [t].concat(s).join("."), a = e[i].split("."), r = a.pop(), l = a.join("."); Do.route(o, n, l, r) })) }(e, t.defaultRoutes), t.descriptors && Do.describe(e, t.descriptors) }(t, o, i), this.override && Do.override(t.id, t.overrides)), o } get(t) { return this.items[t] } unregister(t) { const e = this.items, i = t.id, s = this.scope; i in e && delete e[i], s && i in Do[s] && (delete Do[s][i], this.override && delete Oo[i]) } } var Fr = new class { constructor() { this.controllers = new Nr(ur, "datasets", !0), this.elements = new Nr(Sr, "elements"), this.plugins = new Nr(Object, "plugins"), this.scales = new Nr(jr, "scales"), this._typedRegistries = [this.controllers, this.scales, this.elements] } add(...t) { this._each("register", t) } remove(...t) { this._each("unregister", t) } addControllers(...t) { this._each("register", t, this.controllers) } addElements(...t) { this._each("register", t, this.elements) } addPlugins(...t) { this._each("register", t, this.plugins) } addScales(...t) { this._each("register", t, this.scales) } getController(t) { return this._get(t, this.controllers, "controller") } getElement(t) { return this._get(t, this.elements, "element") } getPlugin(t) { return this._get(t, this.plugins, "plugin") } getScale(t) { return this._get(t, this.scales, "scale") } removeControllers(...t) { this._each("unregister", t, this.controllers) } removeElements(...t) { this._each("unregister", t, this.elements) } removePlugins(...t) { this._each("unregister", t, this.plugins) } removeScales(...t) { this._each("unregister", t, this.scales) } _each(t, e, i) { [...e].forEach((e => { const s = i || this._getRegistryForType(e); i || s.isForType(e) || s === this.plugins && e.id ? this._exec(t, s, e) : Ys(e, (e => { const s = i || this._getRegistryForType(e); this._exec(t, s, e) })) })) } _exec(t, e, i) { const s = nn(t); Us(i["before" + s], [], i), e[t](i), Us(i["after" + s], [], i) } _getRegistryForType(t) { for (let e = 0; e < this._typedRegistries.length; e++) { const i = this._typedRegistries[e]; if (i.isForType(t)) return i } return this.plugins } _get(t, e, i) { const s = e.get(t); if (void 0 === s) throw new Error('"' + t + '" is not a registered ' + i + "."); return s } }; class Vr extends ur { update(t) { const e = this._cachedMeta, { data: i = [] } = e, s = this.chart._animationsDisabled; let { start: n, count: o } = Hn(e, i, s); if (this._drawStart = n, this._drawCount = o, Wn(e) && (n = 0, o = i.length), this.options.showLine) { const { dataset: n, _dataset: o } = e; n._chart = this.chart, n._datasetIndex = this.index, n._decimated = !!o._decimated, n.points = i; const a = this.resolveDatasetElementOptions(t); a.segment = this.options.segment, this.updateElement(n, void 0, { animated: !s, options: a }, t) } this.updateElements(i, n, o, t) } addElements() { const { showLine: t } = this.options; !this.datasetElementType && t && (this.datasetElementType = Fr.getElement("line")), super.addElements() } updateElements(t, e, i, s) { const n = "reset" === s, { iScale: o, vScale: a, _stacked: r, _dataset: l } = this._cachedMeta, c = this.resolveDataElementOptions(e, s), h = this.getSharedOptions(c), d = this.includeOptions(s, h), u = o.axis, p = a.axis, { spanGaps: f, segment: g } = this.options, m = yn(f) ? f : Number.POSITIVE_INFINITY, b = this.chart._animationsDisabled || n || "none" === s; let _ = e > 0 && this.getParsed(e - 1); for (let c = e; c < e + i; ++c) { const e = t[c], i = this.getParsed(c), f = b ? e : {}, y = Ns(i[p]), w = f[u] = o.getPixelForValue(i[u], c), v = f[p] = n || y ? a.getBasePixel() : a.getPixelForValue(r ? this.applyStack(a, i, r) : i[p], c); f.skip = isNaN(w) || isNaN(v) || y, f.stop = c > 0 && Math.abs(i[u] - _[u]) > m, g && (f.parsed = i, f.raw = l.data[c]), d && (f.options = h || this.resolveDataElementOptions(c, e.active ? "active" : s)), b || this.updateElement(e, c, f, s), _ = i } this.updateSharedOptions(h, s, c) } getMaxOverflow() { const t = this._cachedMeta, e = t.data || []; if (!this.options.showLine) { let t = 0; for (let i = e.length - 1; i >= 0; --i)t = Math.max(t, e[i].size(this.resolveDataElementOptions(i)) / 2); return t > 0 && t } const i = t.dataset, s = i.options && i.options.borderWidth || 0; if (!e.length) return s; const n = e[0].size(this.resolveDataElementOptions(0)), o = e[e.length - 1].size(this.resolveDataElementOptions(e.length - 1)); return Math.max(s, n, o) / 2 } } Vr.id = "scatter", Vr.defaults = { datasetElementType: !1, dataElementType: "point", showLine: !1, fill: !1 }, Vr.overrides = { interaction: { mode: "point" }, plugins: { tooltip: { callbacks: { title: () => "", label: t => "(" + t.label + ", " + t.formattedValue + ")" } } }, scales: { x: { type: "linear" }, y: { type: "linear" } } }; var Hr = Object.freeze({ __proto__: null, BarController: vr, BubbleController: xr, DoughnutController: kr, LineController: Er, PolarAreaController: Cr, PieController: Ar, RadarController: Mr, ScatterController: Vr }); function Wr() { throw new Error("This method is not implemented: Check that a complete date adapter is provided.") } class $r { constructor(t) { this.options = t || {} } init(t) { } formats() { return Wr() } parse(t, e) { return Wr() } format(t, e) { return Wr() } add(t, e, i) { return Wr() } diff(t, e, i) { return Wr() } startOf(t, e, i) { return Wr() } endOf(t, e) { return Wr() } } $r.override = function (t) { Object.assign($r.prototype, t) }; var qr = { _date: $r }; function Ur(t, e, i, s) { const { controller: n, data: o, _sorted: a } = t, r = n._cachedMeta.iScale; if (r && e === r.axis && "r" !== e && a && o.length) { const t = r._reversePixels ? In : Dn; if (!s) return t(o, e, i); if (n._sharedOptions) { const s = o[0], n = "function" == typeof s.getRange && s.getRange(e); if (n) { const s = t(o, e, i - n), a = t(o, e, i + n); return { lo: s.lo, hi: a.hi } } } } return { lo: 0, hi: o.length - 1 } } function Yr(t, e, i, s, n) { const o = t.getSortedVisibleDatasetMetas(), a = i[e]; for (let t = 0, i = o.length; t < i; ++t) { const { index: i, data: r } = o[t], { lo: l, hi: c } = Ur(o[t], e, a, n); for (let t = l; t <= c; ++t) { const e = r[t]; e.skip || s(e, i, t) } } } function Xr(t, e, i, s, n) { const o = []; return n || t.isPointInArea(e) ? (Yr(t, i, e, (function (i, a, r) { (n || Fo(i, t.chartArea, 0)) && i.inRange(e.x, e.y, s) && o.push({ element: i, datasetIndex: a, index: r }) }), !0), o) : o } function Kr(t, e, i, s, n, o) { return o || t.isPointInArea(e) ? "r" !== i || s ? function (t, e, i, s, n, o) { let a = []; const r = function (t) { const e = -1 !== t.indexOf("x"), i = -1 !== t.indexOf("y"); return function (t, s) { const n = e ? Math.abs(t.x - s.x) : 0, o = i ? Math.abs(t.y - s.y) : 0; return Math.sqrt(Math.pow(n, 2) + Math.pow(o, 2)) } }(i); let l = Number.POSITIVE_INFINITY; return Yr(t, i, e, (function (i, c, h) { const d = i.inRange(e.x, e.y, n); if (s && !d) return; const u = i.getCenterPoint(n); if (!o && !t.isPointInArea(u) && !d) return; const p = r(e, u); p < l ? (a = [{ element: i, datasetIndex: c, index: h }], l = p) : p === l && a.push({ element: i, datasetIndex: c, index: h }) })), a }(t, e, i, s, n, o) : function (t, e, i, s) { let n = []; return Yr(t, i, e, (function (t, i, o) { const { startAngle: a, endAngle: r } = t.getProps(["startAngle", "endAngle"], s), { angle: l } = Cn(t, { x: e.x, y: e.y }); On(l, a, r) && n.push({ element: t, datasetIndex: i, index: o }) })), n }(t, e, i, n) : [] } function Zr(t, e, i, s, n) { const o = [], a = "x" === i ? "inXRange" : "inYRange"; let r = !1; return Yr(t, i, e, ((t, s, l) => { t[a](e[i], n) && (o.push({ element: t, datasetIndex: s, index: l }), r = r || t.inRange(e.x, e.y, n)) })), s && !r ? [] : o } var Qr = { evaluateInteractionItems: Yr, modes: { index(t, e, i, s) { const n = Pa(e, t), o = i.axis || "x", a = i.includeInvisible || !1, r = i.intersect ? Xr(t, n, o, s, a) : Kr(t, n, o, !1, s, a), l = []; return r.length ? (t.getSortedVisibleDatasetMetas().forEach((t => { const e = r[0].index, i = t.data[e]; i && !i.skip && l.push({ element: i, datasetIndex: t.index, index: e }) })), l) : [] }, dataset(t, e, i, s) { const n = Pa(e, t), o = i.axis || "xy", a = i.includeInvisible || !1; let r = i.intersect ? Xr(t, n, o, s, a) : Kr(t, n, o, !1, s, a); if (r.length > 0) { const e = r[0].datasetIndex, i = t.getDatasetMeta(e).data; r = []; for (let t = 0; t < i.length; ++t)r.push({ element: i[t], datasetIndex: e, index: t }) } return r }, point: (t, e, i, s) => Xr(t, Pa(e, t), i.axis || "xy", s, i.includeInvisible || !1), nearest(t, e, i, s) { const n = Pa(e, t), o = i.axis || "xy", a = i.includeInvisible || !1; return Kr(t, n, o, i.intersect, s, a) }, x: (t, e, i, s) => Zr(t, Pa(e, t), "x", i.intersect, s), y: (t, e, i, s) => Zr(t, Pa(e, t), "y", i.intersect, s) } }; const Gr = ["left", "top", "right", "bottom"]; function Jr(t, e) { return t.filter((t => t.pos === e)) } function tl(t, e) { return t.filter((t => -1 === Gr.indexOf(t.pos) && t.box.axis === e)) } function el(t, e) { return t.sort(((t, i) => { const s = e ? i : t, n = e ? t : i; return s.weight === n.weight ? s.index - n.index : s.weight - n.weight })) } function il(t, e, i, s) { return Math.max(t[i], e[i]) + Math.max(t[s], e[s]) } function sl(t, e) { t.top = Math.max(t.top, e.top), t.left = Math.max(t.left, e.left), t.bottom = Math.max(t.bottom, e.bottom), t.right = Math.max(t.right, e.right) } function nl(t, e, i, s) { const { pos: n, box: o } = i, a = t.maxPadding; if (!Vs(n)) { i.size && (t[n] -= i.size); const e = s[i.stack] || { size: 0, count: 1 }; e.size = Math.max(e.size, i.horizontal ? o.height : o.width), i.size = e.size / e.count, t[n] += i.size } o.getPadding && sl(a, o.getPadding()); const r = Math.max(0, e.outerWidth - il(a, t, "left", "right")), l = Math.max(0, e.outerHeight - il(a, t, "top", "bottom")), c = r !== t.w, h = l !== t.h; return t.w = r, t.h = l, i.horizontal ? { same: c, other: h } : { same: h, other: c } } function ol(t, e) { const i = e.maxPadding; return function (t) { const s = { left: 0, top: 0, right: 0, bottom: 0 }; return t.forEach((t => { s[t] = Math.max(e[t], i[t]) })), s }(t ? ["left", "right"] : ["top", "bottom"]) } function al(t, e, i, s) { const n = []; let o, a, r, l, c, h; for (o = 0, a = t.length, c = 0; o < a; ++o) { r = t[o], l = r.box, l.update(r.width || e.w, r.height || e.h, ol(r.horizontal, e)); const { same: a, other: d } = nl(e, i, r, s); c |= a && n.length, h = h || d, l.fullSize || n.push(r) } return c && al(n, e, i, s) || h } function rl(t, e, i, s, n) { t.top = i, t.left = e, t.right = e + s, t.bottom = i + n, t.width = s, t.height = n } function ll(t, e, i, s) { const n = i.padding; let { x: o, y: a } = e; for (const r of t) { const t = r.box, l = s[r.stack] || { count: 1, placed: 0, weight: 1 }, c = r.stackWeight / l.weight || 1; if (r.horizontal) { const s = e.w * c, o = l.size || t.height; on(l.start) && (a = l.start), t.fullSize ? rl(t, n.left, a, i.outerWidth - n.right - n.left, o) : rl(t, e.left + l.placed, a, s, o), l.start = a, l.placed += s, a = t.bottom } else { const s = e.h * c, a = l.size || t.width; on(l.start) && (o = l.start), t.fullSize ? rl(t, o, n.top, a, i.outerHeight - n.bottom - n.top) : rl(t, o, e.top + l.placed, a, s), l.start = o, l.placed += s, o = t.right } } e.x = o, e.y = a } Do.set("layout", { autoPadding: !0, padding: { top: 0, right: 0, bottom: 0, left: 0 } }); var cl = { addBox(t, e) { t.boxes || (t.boxes = []), e.fullSize = e.fullSize || !1, e.position = e.position || "top", e.weight = e.weight || 0, e._layers = e._layers || function () { return [{ z: 0, draw(t) { e.draw(t) } }] }, t.boxes.push(e) }, removeBox(t, e) { const i = t.boxes ? t.boxes.indexOf(e) : -1; -1 !== i && t.boxes.splice(i, 1) }, configure(t, e, i) { e.fullSize = i.fullSize, e.position = i.position, e.weight = i.weight }, update(t, e, i, s) { if (!t) return; const n = ta(t.options.layout.padding), o = Math.max(e - n.width, 0), a = Math.max(i - n.height, 0), r = function (t) { const e = function (t) { const e = []; let i, s, n, o, a, r; for (i = 0, s = (t || []).length; i < s; ++i)n = t[i], ({ position: o, options: { stack: a, stackWeight: r = 1 } } = n), e.push({ index: i, box: n, pos: o, horizontal: n.isHorizontal(), weight: n.weight, stack: a && o + a, stackWeight: r }); return e }(t), i = el(e.filter((t => t.box.fullSize)), !0), s = el(Jr(e, "left"), !0), n = el(Jr(e, "right")), o = el(Jr(e, "top"), !0), a = el(Jr(e, "bottom")), r = tl(e, "x"), l = tl(e, "y"); return { fullSize: i, leftAndTop: s.concat(o), rightAndBottom: n.concat(l).concat(a).concat(r), chartArea: Jr(e, "chartArea"), vertical: s.concat(n).concat(l), horizontal: o.concat(a).concat(r) } }(t.boxes), l = r.vertical, c = r.horizontal; Ys(t.boxes, (t => { "function" == typeof t.beforeLayout && t.beforeLayout() })); const h = l.reduce(((t, e) => e.box.options && !1 === e.box.options.display ? t : t + 1), 0) || 1, d = Object.freeze({ outerWidth: e, outerHeight: i, padding: n, availableWidth: o, availableHeight: a, vBoxMaxWidth: o / 2 / h, hBoxMaxHeight: a / 2 }), u = Object.assign({}, n); sl(u, ta(s)); const p = Object.assign({ maxPadding: u, w: o, h: a, x: n.left, y: n.top }, n), f = function (t, e) { const i = function (t) { const e = {}; for (const i of t) { const { stack: t, pos: s, stackWeight: n } = i; if (!t || !Gr.includes(s)) continue; const o = e[t] || (e[t] = { count: 0, placed: 0, weight: 0, size: 0 }); o.count++, o.weight += n } return e }(t), { vBoxMaxWidth: s, hBoxMaxHeight: n } = e; let o, a, r; for (o = 0, a = t.length; o < a; ++o) { r = t[o]; const { fullSize: a } = r.box, l = i[r.stack], c = l && r.stackWeight / l.weight; r.horizontal ? (r.width = c ? c * s : a && e.availableWidth, r.height = n) : (r.width = s, r.height = c ? c * n : a && e.availableHeight) } return i }(l.concat(c), d); al(r.fullSize, p, d, f), al(l, p, d, f), al(c, p, d, f) && al(l, p, d, f), function (t) { const e = t.maxPadding; function i(i) { const s = Math.max(e[i] - t[i], 0); return t[i] += s, s } t.y += i("top"), t.x += i("left"), i("right"), i("bottom") }(p), ll(r.leftAndTop, p, d, f), p.x += p.w, p.y += p.h, ll(r.rightAndBottom, p, d, f), t.chartArea = { left: p.left, top: p.top, right: p.left + p.w, bottom: p.top + p.h, height: p.h, width: p.w }, Ys(r.chartArea, (e => { const i = e.box; Object.assign(i, t.chartArea), i.update(p.w, p.h, { left: 0, top: 0, right: 0, bottom: 0 }) })) } }; class hl { acquireContext(t, e) { } releaseContext(t) { return !1 } addEventListener(t, e, i) { } removeEventListener(t, e, i) { } getDevicePixelRatio() { return 1 } getMaximumSize(t, e, i, s) { return e = Math.max(0, e || t.width), i = i || t.height, { width: e, height: Math.max(0, s ? Math.floor(e / s) : i) } } isAttached(t) { return !0 } updateConfig(t) { } } class dl extends hl { acquireContext(t) { return t && t.getContext && t.getContext("2d") || null } updateConfig(t) { t.options.animation = !1 } } const ul = { touchstart: "mousedown", touchmove: "mousemove", touchend: "mouseup", pointerenter: "mouseenter", pointerdown: "mousedown", pointermove: "mousemove", pointerup: "mouseup", pointerleave: "mouseout", pointerout: "mouseout" }, pl = t => null === t || "" === t, fl = !!Da && { passive: !0 }; function gl(t, e, i) { t.canvas.removeEventListener(e, i, fl) } function ml(t, e) { for (const i of t) if (i === e || i.contains(e)) return !0 } function bl(t, e, i) { const s = t.canvas, n = new MutationObserver((t => { let e = !1; for (const i of t) e = e || ml(i.addedNodes, s), e = e && !ml(i.removedNodes, s); e && i() })); return n.observe(document, { childList: !0, subtree: !0 }), n } function _l(t, e, i) { const s = t.canvas, n = new MutationObserver((t => { let e = !1; for (const i of t) e = e || ml(i.removedNodes, s), e = e && !ml(i.addedNodes, s); e && i() })); return n.observe(document, { childList: !0, subtree: !0 }), n } const yl = new Map; let wl = 0; function vl() { const t = window.devicePixelRatio; t !== wl && (wl = t, yl.forEach(((e, i) => { i.currentDevicePixelRatio !== t && e() }))) } function xl(t, e, i) { const s = t.canvas, n = s && Ca(s); if (!n) return; const o = Nn(((t, e) => { const s = n.clientWidth; i(t, e), s < n.clientWidth && i() }), window), a = new ResizeObserver((t => { const e = t[0], i = e.contentRect.width, s = e.contentRect.height; 0 === i && 0 === s || o(i, s) })); return a.observe(n), function (t, e) { yl.size || window.addEventListener("resize", vl), yl.set(t, e) }(t, o), a } function kl(t, e, i) { i && i.disconnect(), "resize" === e && function (t) { yl.delete(t), yl.size || window.removeEventListener("resize", vl) }(t) } function El(t, e, i) { const s = t.canvas, n = Nn((e => { null !== t.ctx && i(function (t, e) { const i = ul[t.type] || t.type, { x: s, y: n } = Pa(t, e); return { type: i, chart: e, native: t, x: void 0 !== s ? s : null, y: void 0 !== n ? n : null } }(e, t)) }), t, (t => { const e = t[0]; return [e, e.offsetX, e.offsetY] })); return function (t, e, i) { t.addEventListener(e, i, fl) }(s, e, n), n } class Cl extends hl { acquireContext(t, e) { const i = t && t.getContext && t.getContext("2d"); return i && i.canvas === t ? (function (t, e) { const i = t.style, s = t.getAttribute("height"), n = t.getAttribute("width"); if (t.$chartjs = { initial: { height: s, width: n, style: { display: i.display, height: i.height, width: i.width } } }, i.display = i.display || "block", i.boxSizing = i.boxSizing || "border-box", pl(n)) { const e = Ia(t, "width"); void 0 !== e && (t.width = e) } if (pl(s)) if ("" === t.style.height) t.height = t.width / (e || 2); else { const e = Ia(t, "height"); void 0 !== e && (t.height = e) } }(t, e), i) : null } releaseContext(t) { const e = t.canvas; if (!e.$chartjs) return !1; const i = e.$chartjs.initial;["height", "width"].forEach((t => { const s = i[t]; Ns(s) ? e.removeAttribute(t) : e.setAttribute(t, s) })); const s = i.style || {}; return Object.keys(s).forEach((t => { e.style[t] = s[t] })), e.width = e.width, delete e.$chartjs, !0 } addEventListener(t, e, i) { this.removeEventListener(t, e); const s = t.$proxies || (t.$proxies = {}), n = { attach: bl, detach: _l, resize: xl }[e] || El; s[e] = n(t, e, i) } removeEventListener(t, e) { const i = t.$proxies || (t.$proxies = {}), s = i[e]; s && (({ attach: kl, detach: kl, resize: kl }[e] || gl)(t, e, s), i[e] = void 0) } getDevicePixelRatio() { return window.devicePixelRatio } getMaximumSize(t, e, i, s) { return function (t, e, i, s) { const n = Ma(t), o = Oa(n, "margin"), a = Aa(n.maxWidth, t, "clientWidth") || dn, r = Aa(n.maxHeight, t, "clientHeight") || dn, l = function (t, e, i) { let s, n; if (void 0 === e || void 0 === i) { const o = Ca(t); if (o) { const t = o.getBoundingClientRect(), a = Ma(o), r = Oa(a, "border", "width"), l = Oa(a, "padding"); e = t.width - l.width - r.width, i = t.height - l.height - r.height, s = Aa(a.maxWidth, o, "clientWidth"), n = Aa(a.maxHeight, o, "clientHeight") } else e = t.clientWidth, i = t.clientHeight } return { width: e, height: i, maxWidth: s || dn, maxHeight: n || dn } }(t, e, i); let { width: c, height: h } = l; if ("content-box" === n.boxSizing) { const t = Oa(n, "border", "width"), e = Oa(n, "padding"); c -= e.width + t.width, h -= e.height + t.height } return c = Math.max(0, c - o.width), h = Math.max(0, s ? Math.floor(c / s) : h - o.height), c = Ta(Math.min(c, a, l.maxWidth)), h = Ta(Math.min(h, r, l.maxHeight)), c && !h && (h = Ta(c / 2)), { width: c, height: h } }(t, e, i, s) } isAttached(t) { const e = Ca(t); return !(!e || !e.isConnected) } } class Al { constructor() { this._init = [] } notify(t, e, i, s) { "beforeInit" === e && (this._init = this._createDescriptors(t, !0), this._notify(this._init, t, "install")); const n = s ? this._descriptors(t).filter(s) : this._descriptors(t), o = this._notify(n, t, e, i); return "afterDestroy" === e && (this._notify(n, t, "stop"), this._notify(this._init, t, "uninstall")), o } _notify(t, e, i, s) { s = s || {}; for (const n of t) { const t = n.plugin; if (!1 === Us(t[i], [e, s, n.options], t) && s.cancelable) return !1 } return !0 } invalidate() { Ns(this._cache) || (this._oldCache = this._cache, this._cache = void 0) } _descriptors(t) { if (this._cache) return this._cache; const e = this._cache = this._createDescriptors(t); return this._notifyStateChanges(t), e } _createDescriptors(t, e) { const i = t && t.config, s = $s(i.options && i.options.plugins, {}), n = function (t) { const e = {}, i = [], s = Object.keys(Fr.plugins.items); for (let t = 0; t < s.length; t++)i.push(Fr.getPlugin(s[t])); const n = t.plugins || []; for (let t = 0; t < n.length; t++) { const s = n[t]; -1 === i.indexOf(s) && (i.push(s), e[s.id] = !0) } return { plugins: i, localIds: e } }(i); return !1 !== s || e ? function (t, { plugins: e, localIds: i }, s, n) { const o = [], a = t.getContext(); for (const r of e) { const e = r.id, l = Ml(s[e], n); null !== l && o.push({ plugin: r, options: Sl(t.config, { plugin: r, local: i[e] }, l, a) }) } return o }(t, n, s, e) : [] } _notifyStateChanges(t) { const e = this._oldCache || [], i = this._cache, s = (t, e) => t.filter((t => !e.some((e => t.plugin.id === e.plugin.id)))); this._notify(s(e, i), t, "stop"), this._notify(s(i, e), t, "start") } } function Ml(t, e) { return e || !1 !== t ? !0 === t ? {} : t : null } function Sl(t, { plugin: e, local: i }, s, n) { const o = t.pluginScopeKeys(e), a = t.getOptionScopes(s, o); return i && e.defaults && a.push(e.defaults), t.createResolver(a, n, [""], { scriptable: !1, indexable: !1, allKeys: !0 }) } function Ol(t, e) { const i = Do.datasets[t] || {}; return ((e.datasets || {})[t] || {}).indexAxis || e.indexAxis || i.indexAxis || "x" } function Pl(t, e) { return "x" === t || "y" === t ? t : e.axis || ("top" === (i = e.position) || "bottom" === i ? "x" : "left" === i || "right" === i ? "y" : void 0) || t.charAt(0).toLowerCase(); var i } function Tl(t) { const e = t.options || (t.options = {}); e.plugins = $s(e.plugins, {}), e.scales = function (t, e) { const i = Oo[t.type] || { scales: {} }, s = e.scales || {}, n = Ol(t.type, e), o = Object.create(null), a = Object.create(null); return Object.keys(s).forEach((t => { const e = s[t]; if (!Vs(e)) return console.error(`Invalid scale configuration for scale: ${t}`); if (e._proxy) return console.warn(`Ignoring resolver passed as options for scale: ${t}`); const r = Pl(t, e), l = function (t, e) { return t === e ? "_index_" : "_value_" }(r, n), c = i.scales || {}; o[r] = o[r] || t, a[t] = Js(Object.create(null), [{ axis: r }, e, c[r], c[l]]) })), t.data.datasets.forEach((i => { const n = i.type || t.type, r = i.indexAxis || Ol(n, e), l = (Oo[n] || {}).scales || {}; Object.keys(l).forEach((t => { const e = function (t, e) { let i = t; return "_index_" === t ? i = e : "_value_" === t && (i = "x" === e ? "y" : "x"), i }(t, r), n = i[e + "AxisID"] || o[e] || e; a[n] = a[n] || Object.create(null), Js(a[n], [{ axis: e }, s[n], l[t]]) })) })), Object.keys(a).forEach((t => { const e = a[t]; Js(e, [Do.scales[e.type], Do.scale]) })), a }(t, e) } function Ll(t) { return (t = t || {}).datasets = t.datasets || [], t.labels = t.labels || [], t } const Dl = new Map, Il = new Set; function Bl(t, e) { let i = Dl.get(t); return i || (i = e(), Dl.set(t, i), Il.add(i)), i } const Rl = (t, e, i) => { const s = sn(e, i); void 0 !== s && t.add(s) }; class zl { constructor(t) { this._config = function (t) { return (t = t || {}).data = Ll(t.data), Tl(t), t }(t), this._scopeCache = new Map, this._resolverCache = new Map } get platform() { return this._config.platform } get type() { return this._config.type } set type(t) { this._config.type = t } get data() { return this._config.data } set data(t) { this._config.data = Ll(t) } get options() { return this._config.options } set options(t) { this._config.options = t } get plugins() { return this._config.plugins } update() { const t = this._config; this.clearCache(), Tl(t) } clearCache() { this._scopeCache.clear(), this._resolverCache.clear() } datasetScopeKeys(t) { return Bl(t, (() => [[`datasets.${t}`, ""]])) } datasetAnimationScopeKeys(t, e) { return Bl(`${t}.transition.${e}`, (() => [[`datasets.${t}.transitions.${e}`, `transitions.${e}`], [`datasets.${t}`, ""]])) } datasetElementScopeKeys(t, e) { return Bl(`${t}-${e}`, (() => [[`datasets.${t}.elements.${e}`, `datasets.${t}`, `elements.${e}`, ""]])) } pluginScopeKeys(t) { const e = t.id; return Bl(`${this.type}-plugin-${e}`, (() => [[`plugins.${e}`, ...t.additionalOptionScopes || []]])) } _cachedScopes(t, e) { const i = this._scopeCache; let s = i.get(t); return s && !e || (s = new Map, i.set(t, s)), s } getOptionScopes(t, e, i) { const { options: s, type: n } = this, o = this._cachedScopes(t, i), a = o.get(e); if (a) return a; const r = new Set; e.forEach((e => { t && (r.add(t), e.forEach((e => Rl(r, t, e)))), e.forEach((t => Rl(r, s, t))), e.forEach((t => Rl(r, Oo[n] || {}, t))), e.forEach((t => Rl(r, Do, t))), e.forEach((t => Rl(r, Po, t))) })); const l = Array.from(r); return 0 === l.length && l.push(Object.create(null)), Il.has(e) && o.set(e, l), l } chartOptionScopes() { const { options: t, type: e } = this; return [t, Oo[e] || {}, Do.datasets[e] || {}, { type: e }, Do, Po] } resolveNamedOptions(t, e, i, s = [""]) { const n = { $shared: !0 }, { resolver: o, subPrefixes: a } = jl(this._resolverCache, t, s); let r = o; (function (t, e) { const { isScriptable: i, isIndexable: s } = aa(t); for (const n of e) { const e = i(n), o = s(n), a = (o || e) && t[n]; if (e && (an(a) || Nl(a)) || o && Fs(a)) return !0 } return !1 })(o, e) && (n.$shared = !1, r = oa(o, i = an(i) ? i() : i, this.createResolver(t, i, a))); for (const t of e) n[t] = r[t]; return n } createResolver(t, e, i = [""], s) { const { resolver: n } = jl(this._resolverCache, t, i); return Vs(e) ? oa(n, e, void 0, s) : n } } function jl(t, e, i) { let s = t.get(e); s || (s = new Map, t.set(e, s)); const n = i.join(); let o = s.get(n); return o || (o = { resolver: na(e, i), subPrefixes: i.filter((t => !t.toLowerCase().includes("hover"))) }, s.set(n, o)), o } const Nl = t => Vs(t) && Object.getOwnPropertyNames(t).reduce(((e, i) => e || an(t[i])), !1), Fl = ["top", "bottom", "left", "right", "chartArea"]; function Vl(t, e) { return "top" === t || "bottom" === t || -1 === Fl.indexOf(t) && "x" === e } function Hl(t, e) { return function (i, s) { return i[t] === s[t] ? i[e] - s[e] : i[t] - s[t] } } function Wl(t) { const e = t.chart, i = e.options.animation; e.notifyPlugins("afterRender"), Us(i && i.onComplete, [t], e) } function $l(t) { const e = t.chart, i = e.options.animation; Us(i && i.onProgress, [t], e) } function ql(t) { return Ea() && "string" == typeof t ? t = document.getElementById(t) : t && t.length && (t = t[0]), t && t.canvas && (t = t.canvas), t } const Ul = {}, Yl = t => { const e = ql(t); return Object.values(Ul).filter((t => t.canvas === e)).pop() }; function Xl(t, e, i) { const s = Object.keys(t); for (const n of s) { const s = +n; if (s >= e) { const o = t[n]; delete t[n], (i > 0 || s > e) && (t[s + i] = o) } } } class Kl { constructor(t, e) { const i = this.config = new zl(e), s = ql(t), n = Yl(s); if (n) throw new Error("Canvas is already in use. Chart with ID '" + n.id + "' must be destroyed before the canvas with ID '" + n.canvas.id + "' can be reused."); const o = i.createResolver(i.chartOptionScopes(), this.getContext()); this.platform = new (i.platform || function (t) { return !Ea() || "undefined" != typeof OffscreenCanvas && t instanceof OffscreenCanvas ? dl : Cl }(s)), this.platform.updateConfig(i); const a = this.platform.acquireContext(s, o.aspectRatio), r = a && a.canvas, l = r && r.height, c = r && r.width; this.id = js(), this.ctx = a, this.canvas = r, this.width = c, this.height = l, this._options = o, this._aspectRatio = this.aspectRatio, this._layers = [], this._metasets = [], this._stacks = void 0, this.boxes = [], this.currentDevicePixelRatio = void 0, this.chartArea = void 0, this._active = [], this._lastEvent = void 0, this._listeners = {}, this._responsiveListeners = void 0, this._sortedMetasets = [], this.scales = {}, this._plugins = new Al, this.$proxies = {}, this._hiddenIndices = {}, this.attached = !1, this._animationsDisabled = void 0, this.$context = void 0, this._doResize = function (t, e) { let i; return function (...s) { return e ? (clearTimeout(i), i = setTimeout(t, e, s)) : t.apply(this, s), e } }((t => this.update(t)), o.resizeDelay || 0), this._dataChanges = [], Ul[this.id] = this, a && r ? (Ka.listen(this, "complete", Wl), Ka.listen(this, "progress", $l), this._initialize(), this.attached && this.update()) : console.error("Failed to create chart: can't acquire context from the given item") } get aspectRatio() { const { options: { aspectRatio: t, maintainAspectRatio: e }, width: i, height: s, _aspectRatio: n } = this; return Ns(t) ? e && n ? n : s ? i / s : null : t } get data() { return this.config.data } set data(t) { this.config.data = t } get options() { return this._options } set options(t) { this.config.options = t } _initialize() { return this.notifyPlugins("beforeInit"), this.options.responsive ? this.resize() : La(this, this.options.devicePixelRatio), this.bindEvents(), this.notifyPlugins("afterInit"), this } clear() { return zo(this.canvas, this.ctx), this } stop() { return Ka.stop(this), this } resize(t, e) { Ka.running(this) ? this._resizeBeforeDraw = { width: t, height: e } : this._resize(t, e) } _resize(t, e) { const i = this.options, s = this.canvas, n = i.maintainAspectRatio && this.aspectRatio, o = this.platform.getMaximumSize(s, t, e, n), a = i.devicePixelRatio || this.platform.getDevicePixelRatio(), r = this.width ? "resize" : "attach"; this.width = o.width, this.height = o.height, this._aspectRatio = this.aspectRatio, La(this, a, !0) && (this.notifyPlugins("resize", { size: o }), Us(i.onResize, [this, o], this), this.attached && this._doResize(r) && this.render()) } ensureScalesHaveIDs() { Ys(this.options.scales || {}, ((t, e) => { t.id = e })) } buildOrUpdateScales() { const t = this.options, e = t.scales, i = this.scales, s = Object.keys(i).reduce(((t, e) => (t[e] = !1, t)), {}); let n = []; e && (n = n.concat(Object.keys(e).map((t => { const i = e[t], s = Pl(t, i), n = "r" === s, o = "x" === s; return { options: i, dposition: n ? "chartArea" : o ? "bottom" : "left", dtype: n ? "radialLinear" : o ? "category" : "linear" } })))), Ys(n, (e => { const n = e.options, o = n.id, a = Pl(o, n), r = $s(n.type, e.dtype); void 0 !== n.position && Vl(n.position, a) === Vl(e.dposition) || (n.position = e.dposition), s[o] = !0; let l = null; o in i && i[o].type === r ? l = i[o] : (l = new (Fr.getScale(r))({ id: o, type: r, ctx: this.ctx, chart: this }), i[l.id] = l), l.init(n, t) })), Ys(s, ((t, e) => { t || delete i[e] })), Ys(i, (t => { cl.configure(this, t, t.options), cl.addBox(this, t) })) } _updateMetasets() { const t = this._metasets, e = this.data.datasets.length, i = t.length; if (t.sort(((t, e) => t.index - e.index)), i > e) { for (let t = e; t < i; ++t)this._destroyDatasetMeta(t); t.splice(e, i - e) } this._sortedMetasets = t.slice(0).sort(Hl("order", "index")) } _removeUnreferencedMetasets() { const { _metasets: t, data: { datasets: e } } = this; t.length > e.length && delete this._stacks, t.forEach(((t, i) => { 0 === e.filter((e => e === t._dataset)).length && this._destroyDatasetMeta(i) })) } buildOrUpdateControllers() { const t = [], e = this.data.datasets; let i, s; for (this._removeUnreferencedMetasets(), i = 0, s = e.length; i < s; i++) { const s = e[i]; let n = this.getDatasetMeta(i); const o = s.type || this.config.type; if (n.type && n.type !== o && (this._destroyDatasetMeta(i), n = this.getDatasetMeta(i)), n.type = o, n.indexAxis = s.indexAxis || Ol(o, this.options), n.order = s.order || 0, n.index = i, n.label = "" + s.label, n.visible = this.isDatasetVisible(i), n.controller) n.controller.updateIndex(i), n.controller.linkScales(); else { const e = Fr.getController(o), { datasetElementType: s, dataElementType: a } = Do.datasets[o]; Object.assign(e.prototype, { dataElementType: Fr.getElement(a), datasetElementType: s && Fr.getElement(s) }), n.controller = new e(this, i), t.push(n.controller) } } return this._updateMetasets(), t } _resetElements() { Ys(this.data.datasets, ((t, e) => { this.getDatasetMeta(e).controller.reset() }), this) } reset() { this._resetElements(), this.notifyPlugins("reset") } update(t) { const e = this.config; e.update(); const i = this._options = e.createResolver(e.chartOptionScopes(), this.getContext()), s = this._animationsDisabled = !i.animation; if (this._updateScales(), this._checkEventBindings(), this._updateHiddenIndices(), this._plugins.invalidate(), !1 === this.notifyPlugins("beforeUpdate", { mode: t, cancelable: !0 })) return; const n = this.buildOrUpdateControllers(); this.notifyPlugins("beforeElementsUpdate"); let o = 0; for (let t = 0, e = this.data.datasets.length; t < e; t++) { const { controller: e } = this.getDatasetMeta(t), i = !s && -1 === n.indexOf(e); e.buildOrUpdateElements(i), o = Math.max(+e.getMaxOverflow(), o) } o = this._minPadding = i.layout.autoPadding ? o : 0, this._updateLayout(o), s || Ys(n, (t => { t.reset() })), this._updateDatasets(t), this.notifyPlugins("afterUpdate", { mode: t }), this._layers.sort(Hl("z", "_idx")); const { _active: a, _lastEvent: r } = this; r ? this._eventHandler(r, !0) : a.length && this._updateHoverStyles(a, a, !0), this.render() } _updateScales() { Ys(this.scales, (t => { cl.removeBox(this, t) })), this.ensureScalesHaveIDs(), this.buildOrUpdateScales() } _checkEventBindings() { const t = this.options, e = new Set(Object.keys(this._listeners)), i = new Set(t.events); rn(e, i) && !!this._responsiveListeners === t.responsive || (this.unbindEvents(), this.bindEvents()) } _updateHiddenIndices() { const { _hiddenIndices: t } = this, e = this._getUniformDataChanges() || []; for (const { method: i, start: s, count: n } of e) Xl(t, s, "_removeElements" === i ? -n : n) } _getUniformDataChanges() { const t = this._dataChanges; if (!t || !t.length) return; this._dataChanges = []; const e = this.data.datasets.length, i = e => new Set(t.filter((t => t[0] === e)).map(((t, e) => e + "," + t.splice(1).join(",")))), s = i(0); for (let t = 1; t < e; t++)if (!rn(s, i(t))) return; return Array.from(s).map((t => t.split(","))).map((t => ({ method: t[1], start: +t[2], count: +t[3] }))) } _updateLayout(t) { if (!1 === this.notifyPlugins("beforeLayout", { cancelable: !0 })) return; cl.update(this, this.width, this.height, t); const e = this.chartArea, i = e.width <= 0 || e.height <= 0; this._layers = [], Ys(this.boxes, (t => { i && "chartArea" === t.position || (t.configure && t.configure(), this._layers.push(...t._layers())) }), this), this._layers.forEach(((t, e) => { t._idx = e })), this.notifyPlugins("afterLayout") } _updateDatasets(t) { if (!1 !== this.notifyPlugins("beforeDatasetsUpdate", { mode: t, cancelable: !0 })) { for (let t = 0, e = this.data.datasets.length; t < e; ++t)this.getDatasetMeta(t).controller.configure(); for (let e = 0, i = this.data.datasets.length; e < i; ++e)this._updateDataset(e, an(t) ? t({ datasetIndex: e }) : t); this.notifyPlugins("afterDatasetsUpdate", { mode: t }) } } _updateDataset(t, e) { const i = this.getDatasetMeta(t), s = { meta: i, index: t, mode: e, cancelable: !0 }; !1 !== this.notifyPlugins("beforeDatasetUpdate", s) && (i.controller._update(e), s.cancelable = !1, this.notifyPlugins("afterDatasetUpdate", s)) } render() { !1 !== this.notifyPlugins("beforeRender", { cancelable: !0 }) && (Ka.has(this) ? this.attached && !Ka.running(this) && Ka.start(this) : (this.draw(), Wl({ chart: this }))) } draw() { let t; if (this._resizeBeforeDraw) { const { width: t, height: e } = this._resizeBeforeDraw; this._resize(t, e), this._resizeBeforeDraw = null } if (this.clear(), this.width <= 0 || this.height <= 0) return; if (!1 === this.notifyPlugins("beforeDraw", { cancelable: !0 })) return; const e = this._layers; for (t = 0; t < e.length && e[t].z <= 0; ++t)e[t].draw(this.chartArea); for (this._drawDatasets(); t < e.length; ++t)e[t].draw(this.chartArea); this.notifyPlugins("afterDraw") } _getSortedDatasetMetas(t) { const e = this._sortedMetasets, i = []; let s, n; for (s = 0, n = e.length; s < n; ++s) { const n = e[s]; t && !n.visible || i.push(n) } return i } getSortedVisibleDatasetMetas() { return this._getSortedDatasetMetas(!0) } _drawDatasets() { if (!1 === this.notifyPlugins("beforeDatasetsDraw", { cancelable: !0 })) return; const t = this.getSortedVisibleDatasetMetas(); for (let e = t.length - 1; e >= 0; --e)this._drawDataset(t[e]); this.notifyPlugins("afterDatasetsDraw") } _drawDataset(t) { const e = this.ctx, i = t._clip, s = !i.disabled, n = this.chartArea, o = { meta: t, index: t.index, cancelable: !0 }; !1 !== this.notifyPlugins("beforeDatasetDraw", o) && (s && Vo(e, { left: !1 === i.left ? 0 : n.left - i.left, right: !1 === i.right ? this.width : n.right + i.right, top: !1 === i.top ? 0 : n.top - i.top, bottom: !1 === i.bottom ? this.height : n.bottom + i.bottom }), t.controller.draw(), s && Ho(e), o.cancelable = !1, this.notifyPlugins("afterDatasetDraw", o)) } isPointInArea(t) { return Fo(t, this.chartArea, this._minPadding) } getElementsAtEventForMode(t, e, i, s) { const n = Qr.modes[e]; return "function" == typeof n ? n(this, t, i, s) : [] } getDatasetMeta(t) { const e = this.data.datasets[t], i = this._metasets; let s = i.filter((t => t && t._dataset === e)).pop(); return s || (s = { type: null, data: [], dataset: null, controller: null, hidden: null, xAxisID: null, yAxisID: null, order: e && e.order || 0, index: t, _dataset: e, _parsed: [], _sorted: !1 }, i.push(s)), s } getContext() { return this.$context || (this.$context = sa(null, { chart: this, type: "chart" })) } getVisibleDatasetCount() { return this.getSortedVisibleDatasetMetas().length } isDatasetVisible(t) { const e = this.data.datasets[t]; if (!e) return !1; const i = this.getDatasetMeta(t); return "boolean" == typeof i.hidden ? !i.hidden : !e.hidden } setDatasetVisibility(t, e) { this.getDatasetMeta(t).hidden = !e } toggleDataVisibility(t) { this._hiddenIndices[t] = !this._hiddenIndices[t] } getDataVisibility(t) { return !this._hiddenIndices[t] } _updateVisibility(t, e, i) { const s = i ? "show" : "hide", n = this.getDatasetMeta(t), o = n.controller._resolveAnimations(void 0, s); on(e) ? (n.data[e].hidden = !i, this.update()) : (this.setDatasetVisibility(t, i), o.update(n, { visible: i }), this.update((e => e.datasetIndex === t ? s : void 0))) } hide(t, e) { this._updateVisibility(t, e, !1) } show(t, e) { this._updateVisibility(t, e, !0) } _destroyDatasetMeta(t) { const e = this._metasets[t]; e && e.controller && e.controller._destroy(), delete this._metasets[t] } _stop() { let t, e; for (this.stop(), Ka.remove(this), t = 0, e = this.data.datasets.length; t < e; ++t)this._destroyDatasetMeta(t) } destroy() { this.notifyPlugins("beforeDestroy"); const { canvas: t, ctx: e } = this; this._stop(), this.config.clearCache(), t && (this.unbindEvents(), zo(t, e), this.platform.releaseContext(e), this.canvas = null, this.ctx = null), this.notifyPlugins("destroy"), delete Ul[this.id], this.notifyPlugins("afterDestroy") } toBase64Image(...t) { return this.canvas.toDataURL(...t) } bindEvents() { this.bindUserEvents(), this.options.responsive ? this.bindResponsiveEvents() : this.attached = !0 } bindUserEvents() { const t = this._listeners, e = this.platform, i = (i, s) => { e.addEventListener(this, i, s), t[i] = s }, s = (t, e, i) => { t.offsetX = e, t.offsetY = i, this._eventHandler(t) }; Ys(this.options.events, (t => i(t, s))) } bindResponsiveEvents() { this._responsiveListeners || (this._responsiveListeners = {}); const t = this._responsiveListeners, e = this.platform, i = (i, s) => { e.addEventListener(this, i, s), t[i] = s }, s = (i, s) => { t[i] && (e.removeEventListener(this, i, s), delete t[i]) }, n = (t, e) => { this.canvas && this.resize(t, e) }; let o; const a = () => { s("attach", a), this.attached = !0, this.resize(), i("resize", n), i("detach", o) }; o = () => { this.attached = !1, s("resize", n), this._stop(), this._resize(0, 0), i("attach", a) }, e.isAttached(this.canvas) ? a() : o() } unbindEvents() { Ys(this._listeners, ((t, e) => { this.platform.removeEventListener(this, e, t) })), this._listeners = {}, Ys(this._responsiveListeners, ((t, e) => { this.platform.removeEventListener(this, e, t) })), this._responsiveListeners = void 0 } updateHoverStyle(t, e, i) { const s = i ? "set" : "remove"; let n, o, a, r; for ("dataset" === e && (n = this.getDatasetMeta(t[0].datasetIndex), n.controller["_" + s + "DatasetHoverStyle"]()), a = 0, r = t.length; a < r; ++a) { o = t[a]; const e = o && this.getDatasetMeta(o.datasetIndex).controller; e && e[s + "HoverStyle"](o.element, o.datasetIndex, o.index) } } getActiveElements() { return this._active || [] } setActiveElements(t) { const e = this._active || [], i = t.map((({ datasetIndex: t, index: e }) => { const i = this.getDatasetMeta(t); if (!i) throw new Error("No dataset found at index " + t); return { datasetIndex: t, element: i.data[e], index: e } })); !Xs(i, e) && (this._active = i, this._lastEvent = null, this._updateHoverStyles(i, e)) } notifyPlugins(t, e, i) { return this._plugins.notify(this, t, e, i) } _updateHoverStyles(t, e, i) { const s = this.options.hover, n = (t, e) => t.filter((t => !e.some((e => t.datasetIndex === e.datasetIndex && t.index === e.index)))), o = n(e, t), a = i ? t : n(t, e); o.length && this.updateHoverStyle(o, s.mode, !1), a.length && s.mode && this.updateHoverStyle(a, s.mode, !0) } _eventHandler(t, e) { const i = { event: t, replay: e, cancelable: !0, inChartArea: this.isPointInArea(t) }, s = e => (e.options.events || this.options.events).includes(t.native.type); if (!1 === this.notifyPlugins("beforeEvent", i, s)) return; const n = this._handleEvent(t, e, i.inChartArea); return i.cancelable = !1, this.notifyPlugins("afterEvent", i, s), (n || i.changed) && this.render(), this } _handleEvent(t, e, i) { const { _active: s = [], options: n } = this, o = e, a = this._getActiveElements(t, s, i, o), r = function (t) { return "mouseup" === t.type || "click" === t.type || "contextmenu" === t.type }(t), l = function (t, e, i, s) { return i && "mouseout" !== t.type ? s ? e : t : null }(t, this._lastEvent, i, r); i && (this._lastEvent = null, Us(n.onHover, [t, a, this], this), r && Us(n.onClick, [t, a, this], this)); const c = !Xs(a, s); return (c || e) && (this._active = a, this._updateHoverStyles(a, s, e)), this._lastEvent = l, c } _getActiveElements(t, e, i, s) { if ("mouseout" === t.type) return []; if (!i) return e; const n = this.options.hover; return this.getElementsAtEventForMode(t, n.mode, n, s) } } const Zl = () => Ys(Kl.instances, (t => t._plugins.invalidate())), Ql = !0; function Gl(t, e, i) { const { startAngle: s, pixelMargin: n, x: o, y: a, outerRadius: r, innerRadius: l } = e; let c = n / r; t.beginPath(), t.arc(o, a, r, s - c, i + c), l > n ? (c = n / l, t.arc(o, a, l, i + c, s - c, !0)) : t.arc(o, a, n, i + pn, s - pn), t.closePath(), t.clip() } function Jl(t, e, i, s) { return { x: i + t * Math.cos(e), y: s + t * Math.sin(e) } } function tc(t, e, i, s, n, o) { const { x: a, y: r, startAngle: l, pixelMargin: c, innerRadius: h } = e, d = Math.max(e.outerRadius + s + i - c, 0), u = h > 0 ? h + s + i + c : 0; let p = 0; const f = n - l; if (s) { const t = ((h > 0 ? h - s : 0) + (d > 0 ? d - s : 0)) / 2; p = (f - (0 !== t ? f * t / (t + s) : f)) / 2 } const g = (f - Math.max(.001, f * d - i / ln) / d) / 2, m = l + g + p, b = n - g - p, { outerStart: _, outerEnd: y, innerStart: w, innerEnd: v } = function (t, e, i, s) { const n = Qo(t.options.borderRadius, ["outerStart", "outerEnd", "innerStart", "innerEnd"]), o = (i - e) / 2, a = Math.min(o, s * e / 2), r = t => { const e = (i - Math.min(o, t)) * s / 2; return Pn(t, 0, Math.min(o, e)) }; return { outerStart: r(n.outerStart), outerEnd: r(n.outerEnd), innerStart: Pn(n.innerStart, 0, a), innerEnd: Pn(n.innerEnd, 0, a) } }(e, u, d, b - m), x = d - _, k = d - y, E = m + _ / x, C = b - y / k, A = u + w, M = u + v, S = m + w / A, O = b - v / M; if (t.beginPath(), o) { if (t.arc(a, r, d, E, C), y > 0) { const e = Jl(k, C, a, r); t.arc(e.x, e.y, y, C, b + pn) } const e = Jl(M, b, a, r); if (t.lineTo(e.x, e.y), v > 0) { const e = Jl(M, O, a, r); t.arc(e.x, e.y, v, b + pn, O + Math.PI) } if (t.arc(a, r, u, b - v / u, m + w / u, !0), w > 0) { const e = Jl(A, S, a, r); t.arc(e.x, e.y, w, S + Math.PI, m - pn) } const i = Jl(x, m, a, r); if (t.lineTo(i.x, i.y), _ > 0) { const e = Jl(x, E, a, r); t.arc(e.x, e.y, _, m - pn, E) } } else { t.moveTo(a, r); const e = Math.cos(E) * d + a, i = Math.sin(E) * d + r; t.lineTo(e, i); const s = Math.cos(C) * d + a, n = Math.sin(C) * d + r; t.lineTo(s, n) } t.closePath() } Object.defineProperties(Kl, { defaults: { enumerable: Ql, value: Do }, instances: { enumerable: Ql, value: Ul }, overrides: { enumerable: Ql, value: Oo }, registry: { enumerable: Ql, value: Fr }, version: { enumerable: Ql, value: "3.9.1" }, getChart: { enumerable: Ql, value: Yl }, register: { enumerable: Ql, value: (...t) => { Fr.add(...t), Zl() } }, unregister: { enumerable: Ql, value: (...t) => { Fr.remove(...t), Zl() } } }); class ec extends Sr { constructor(t) { super(), this.options = void 0, this.circumference = void 0, this.startAngle = void 0, this.endAngle = void 0, this.innerRadius = void 0, this.outerRadius = void 0, this.pixelMargin = 0, this.fullCircles = 0, t && Object.assign(this, t) } inRange(t, e, i) { const s = this.getProps(["x", "y"], i), { angle: n, distance: o } = Cn(s, { x: t, y: e }), { startAngle: a, endAngle: r, innerRadius: l, outerRadius: c, circumference: h } = this.getProps(["startAngle", "endAngle", "innerRadius", "outerRadius", "circumference"], i), d = this.options.spacing / 2, u = $s(h, r - a) >= cn || On(n, a, r), p = Tn(o, l + d, c + d); return u && p } getCenterPoint(t) { const { x: e, y: i, startAngle: s, endAngle: n, innerRadius: o, outerRadius: a } = this.getProps(["x", "y", "startAngle", "endAngle", "innerRadius", "outerRadius", "circumference"], t), { offset: r, spacing: l } = this.options, c = (s + n) / 2, h = (o + a + l + r) / 2; return { x: e + Math.cos(c) * h, y: i + Math.sin(c) * h } } tooltipPosition(t) { return this.getCenterPoint(t) } draw(t) { const { options: e, circumference: i } = this, s = (e.offset || 0) / 2, n = (e.spacing || 0) / 2, o = e.circular; if (this.pixelMargin = "inner" === e.borderAlign ? .33 : 0, this.fullCircles = i > cn ? Math.floor(i / cn) : 0, 0 === i || this.innerRadius < 0 || this.outerRadius < 0) return; t.save(); let a = 0; if (s) { a = s / 2; const e = (this.startAngle + this.endAngle) / 2; t.translate(Math.cos(e) * a, Math.sin(e) * a), this.circumference >= ln && (a = s) } t.fillStyle = e.backgroundColor, t.strokeStyle = e.borderColor; const r = function (t, e, i, s, n) { const { fullCircles: o, startAngle: a, circumference: r } = e; let l = e.endAngle; if (o) { tc(t, e, i, s, a + cn, n); for (let e = 0; e < o; ++e)t.fill(); isNaN(r) || (l = a + r % cn, r % cn == 0 && (l += cn)) } return tc(t, e, i, s, l, n), t.fill(), l }(t, this, a, n, o); (function (t, e, i, s, n, o) { const { options: a } = e, { borderWidth: r, borderJoinStyle: l } = a, c = "inner" === a.borderAlign; r && (c ? (t.lineWidth = 2 * r, t.lineJoin = l || "round") : (t.lineWidth = r, t.lineJoin = l || "bevel"), e.fullCircles && function (t, e, i) { const { x: s, y: n, startAngle: o, pixelMargin: a, fullCircles: r } = e, l = Math.max(e.outerRadius - a, 0), c = e.innerRadius + a; let h; for (i && Gl(t, e, o + cn), t.beginPath(), t.arc(s, n, c, o + cn, o, !0), h = 0; h < r; ++h)t.stroke(); for (t.beginPath(), t.arc(s, n, l, o, o + cn), h = 0; h < r; ++h)t.stroke() }(t, e, c), c && Gl(t, e, n), tc(t, e, i, s, n, o), t.stroke()) })(t, this, a, n, r, o), t.restore() } } function ic(t, e, i = e) { t.lineCap = $s(i.borderCapStyle, e.borderCapStyle), t.setLineDash($s(i.borderDash, e.borderDash)), t.lineDashOffset = $s(i.borderDashOffset, e.borderDashOffset), t.lineJoin = $s(i.borderJoinStyle, e.borderJoinStyle), t.lineWidth = $s(i.borderWidth, e.borderWidth), t.strokeStyle = $s(i.borderColor, e.borderColor) } function sc(t, e, i) { t.lineTo(i.x, i.y) } function nc(t, e, i = {}) { const s = t.length, { start: n = 0, end: o = s - 1 } = i, { start: a, end: r } = e, l = Math.max(n, a), c = Math.min(o, r), h = n < a && o < a || n > r && o > r; return { count: s, start: l, loop: e.loop, ilen: c < l && !h ? s + c - l : c - l } } function oc(t, e, i, s) { const { points: n, options: o } = e, { count: a, start: r, loop: l, ilen: c } = nc(n, i, s), h = function (t) { return t.stepped ? Wo : t.tension || "monotone" === t.cubicInterpolationMode ? $o : sc }(o); let d, u, p, { move: f = !0, reverse: g } = s || {}; for (d = 0; d <= c; ++d)u = n[(r + (g ? c - d : d)) % a], u.skip || (f ? (t.moveTo(u.x, u.y), f = !1) : h(t, p, u, g, o.stepped), p = u); return l && (u = n[(r + (g ? c : 0)) % a], h(t, p, u, g, o.stepped)), !!l } function ac(t, e, i, s) { const n = e.points, { count: o, start: a, ilen: r } = nc(n, i, s), { move: l = !0, reverse: c } = s || {}; let h, d, u, p, f, g, m = 0, b = 0; const _ = t => (a + (c ? r - t : t)) % o, y = () => { p !== f && (t.lineTo(m, f), t.lineTo(m, p), t.lineTo(m, g)) }; for (l && (d = n[_(0)], t.moveTo(d.x, d.y)), h = 0; h <= r; ++h) { if (d = n[_(h)], d.skip) continue; const e = d.x, i = d.y, s = 0 | e; s === u ? (i < p ? p = i : i > f && (f = i), m = (b * m + e) / ++b) : (y(), t.lineTo(e, i), u = s, b = 0, p = f = i), g = i } y() } function rc(t) { const e = t.options, i = e.borderDash && e.borderDash.length; return t._decimated || t._loop || e.tension || "monotone" === e.cubicInterpolationMode || e.stepped || i ? oc : ac } ec.id = "arc", ec.defaults = { borderAlign: "center", borderColor: "#fff", borderJoinStyle: void 0, borderRadius: 0, borderWidth: 2, offset: 0, spacing: 0, angle: void 0, circular: !0 }, ec.defaultRoutes = { backgroundColor: "backgroundColor" }; const lc = "function" == typeof Path2D; class cc extends Sr { constructor(t) { super(), this.animated = !0, this.options = void 0, this._chart = void 0, this._loop = void 0, this._fullLoop = void 0, this._path = void 0, this._points = void 0, this._segments = void 0, this._decimated = !1, this._pointsUpdated = !1, this._datasetIndex = void 0, t && Object.assign(this, t) } updateControlPoints(t, e) { const i = this.options; if ((i.tension || "monotone" === i.cubicInterpolationMode) && !i.stepped && !this._pointsUpdated) { const s = i.spanGaps ? this._loop : this._fullLoop; ka(this._points, i, t, s, e), this._pointsUpdated = !0 } } set points(t) { this._points = t, delete this._segments, delete this._path, this._pointsUpdated = !1 } get points() { return this._points } get segments() { return this._segments || (this._segments = function (t, e) { const i = t.points, s = t.options.spanGaps, n = i.length; if (!n) return []; const o = !!t._loop, { start: a, end: r } = function (t, e, i, s) { let n = 0, o = e - 1; if (i && !s) for (; n < e && !t[n].skip;)n++; for (; n < e && t[n].skip;)n++; for (n %= e, i && (o += n); o > n && t[o % e].skip;)o--; return o %= e, { start: n, end: o } }(i, n, o, s); return function (t, e, i, s) { return s && s.setContext && i ? function (t, e, i, s) { const n = t._chart.getContext(), o = Ya(t.options), { _datasetIndex: a, options: { spanGaps: r } } = t, l = i.length, c = []; let h = o, d = e[0].start, u = d; function p(t, e, s, n) { const o = r ? -1 : 1; if (t !== e) { for (t += l; i[t % l].skip;)t -= o; for (; i[e % l].skip;)e += o; t % l != e % l && (c.push({ start: t % l, end: e % l, loop: s, style: n }), h = n, d = e % l) } } for (const t of e) { d = r ? d : t.start; let e, o = i[d % l]; for (u = d + 1; u <= t.end; u++) { const r = i[u % l]; e = Ya(s.setContext(sa(n, { type: "segment", p0: o, p1: r, p0DataIndex: (u - 1) % l, p1DataIndex: u % l, datasetIndex: a }))), Xa(e, h) && p(d, u - 1, t.loop, h), o = r, h = e } d < u - 1 && p(d, u - 1, t.loop, h) } return c }(t, e, i, s) : e }(t, !0 === s ? [{ start: a, end: r, loop: o }] : function (t, e, i, s) { const n = t.length, o = []; let a, r = e, l = t[e]; for (a = e + 1; a <= i; ++a) { const i = t[a % n]; i.skip || i.stop ? l.skip || (s = !1, o.push({ start: e % n, end: (a - 1) % n, loop: s }), e = r = i.stop ? a : null) : (r = a, l.skip && (e = a)), l = i } return null !== r && o.push({ start: e % n, end: r % n, loop: s }), o }(i, a, r < a ? r + n : r, !!t._fullLoop && 0 === a && r === n - 1), i, e) }(this, this.options.segment)) } first() { const t = this.segments, e = this.points; return t.length && e[t[0].start] } last() { const t = this.segments, e = this.points, i = t.length; return i && e[t[i - 1].end] } interpolate(t, e) { const i = this.options, s = t[e], n = this.points, o = Ua(this, { property: e, start: s, end: s }); if (!o.length) return; const a = [], r = function (t) { return t.stepped ? Ra : t.tension || "monotone" === t.cubicInterpolationMode ? za : Ba }(i); let l, c; for (l = 0, c = o.length; l < c; ++l) { const { start: c, end: h } = o[l], d = n[c], u = n[h]; if (d === u) { a.push(d); continue } const p = r(d, u, Math.abs((s - d[e]) / (u[e] - d[e])), i.stepped); p[e] = t[e], a.push(p) } return 1 === a.length ? a[0] : a } pathSegment(t, e, i) { return rc(this)(t, this, e, i) } path(t, e, i) { const s = this.segments, n = rc(this); let o = this._loop; e = e || 0, i = i || this.points.length - e; for (const a of s) o &= n(t, this, a, { start: e, end: e + i - 1 }); return !!o } draw(t, e, i, s) { const n = this.options || {}; (this.points || []).length && n.borderWidth && (t.save(), function (t, e, i, s) { lc && !e.options.segment ? function (t, e, i, s) { let n = e._path; n || (n = e._path = new Path2D, e.path(n, i, s) && n.closePath()), ic(t, e.options), t.stroke(n) }(t, e, i, s) : function (t, e, i, s) { const { segments: n, options: o } = e, a = rc(e); for (const r of n) ic(t, o, r.style), t.beginPath(), a(t, e, r, { start: i, end: i + s - 1 }) && t.closePath(), t.stroke() }(t, e, i, s) }(t, this, i, s), t.restore()), this.animated && (this._pointsUpdated = !1, this._path = void 0) } } function hc(t, e, i, s) { const n = t.options, { [i]: o } = t.getProps([i], s); return Math.abs(e - o) < n.radius + n.hitRadius } cc.id = "line", cc.defaults = { borderCapStyle: "butt", borderDash: [], borderDashOffset: 0, borderJoinStyle: "miter", borderWidth: 3, capBezierPoints: !0, cubicInterpolationMode: "default", fill: !1, spanGaps: !1, stepped: !1, tension: 0 }, cc.defaultRoutes = { backgroundColor: "backgroundColor", borderColor: "borderColor" }, cc.descriptors = { _scriptable: !0, _indexable: t => "borderDash" !== t && "fill" !== t }; class dc extends Sr { constructor(t) { super(), this.options = void 0, this.parsed = void 0, this.skip = void 0, this.stop = void 0, t && Object.assign(this, t) } inRange(t, e, i) { const s = this.options, { x: n, y: o } = this.getProps(["x", "y"], i); return Math.pow(t - n, 2) + Math.pow(e - o, 2) < Math.pow(s.hitRadius + s.radius, 2) } inXRange(t, e) { return hc(this, t, "x", e) } inYRange(t, e) { return hc(this, t, "y", e) } getCenterPoint(t) { const { x: e, y: i } = this.getProps(["x", "y"], t); return { x: e, y: i } } size(t) { let e = (t = t || this.options || {}).radius || 0; return e = Math.max(e, e && t.hoverRadius || 0), 2 * (e + (e && t.borderWidth || 0)) } draw(t, e) { const i = this.options; this.skip || i.radius < .1 || !Fo(this, e, this.size(i) / 2) || (t.strokeStyle = i.borderColor, t.lineWidth = i.borderWidth, t.fillStyle = i.backgroundColor, jo(t, i, this.x, this.y)) } getRange() { const t = this.options || {}; return t.radius + t.hitRadius } } function uc(t, e) { const { x: i, y: s, base: n, width: o, height: a } = t.getProps(["x", "y", "base", "width", "height"], e); let r, l, c, h, d; return t.horizontal ? (d = a / 2, r = Math.min(i, n), l = Math.max(i, n), c = s - d, h = s + d) : (d = o / 2, r = i - d, l = i + d, c = Math.min(s, n), h = Math.max(s, n)), { left: r, top: c, right: l, bottom: h } } function pc(t, e, i, s) { return t ? 0 : Pn(e, i, s) } function fc(t, e, i, s) { const n = null === e, o = null === i, a = t && !(n && o) && uc(t, s); return a && (n || Tn(e, a.left, a.right)) && (o || Tn(i, a.top, a.bottom)) } function gc(t, e) { t.rect(e.x, e.y, e.w, e.h) } function mc(t, e, i = {}) { const s = t.x !== i.x ? -e : 0, n = t.y !== i.y ? -e : 0, o = (t.x + t.w !== i.x + i.w ? e : 0) - s, a = (t.y + t.h !== i.y + i.h ? e : 0) - n; return { x: t.x + s, y: t.y + n, w: t.w + o, h: t.h + a, radius: t.radius } } dc.id = "point", dc.defaults = { borderWidth: 1, hitRadius: 1, hoverBorderWidth: 1, hoverRadius: 4, pointStyle: "circle", radius: 3, rotation: 0 }, dc.defaultRoutes = { backgroundColor: "backgroundColor", borderColor: "borderColor" }; class bc extends Sr { constructor(t) { super(), this.options = void 0, this.horizontal = void 0, this.base = void 0, this.width = void 0, this.height = void 0, this.inflateAmount = void 0, t && Object.assign(this, t) } draw(t) { const { inflateAmount: e, options: { borderColor: i, backgroundColor: s } } = this, { inner: n, outer: o } = function (t) { const e = uc(t), i = e.right - e.left, s = e.bottom - e.top, n = function (t, e, i) { const s = t.options.borderWidth, n = t.borderSkipped, o = Go(s); return { t: pc(n.top, o.top, 0, i), r: pc(n.right, o.right, 0, e), b: pc(n.bottom, o.bottom, 0, i), l: pc(n.left, o.left, 0, e) } }(t, i / 2, s / 2), o = function (t, e, i) { const { enableBorderRadius: s } = t.getProps(["enableBorderRadius"]), n = t.options.borderRadius, o = Jo(n), a = Math.min(e, i), r = t.borderSkipped, l = s || Vs(n); return { topLeft: pc(!l || r.top || r.left, o.topLeft, 0, a), topRight: pc(!l || r.top || r.right, o.topRight, 0, a), bottomLeft: pc(!l || r.bottom || r.left, o.bottomLeft, 0, a), bottomRight: pc(!l || r.bottom || r.right, o.bottomRight, 0, a) } }(t, i / 2, s / 2); return { outer: { x: e.left, y: e.top, w: i, h: s, radius: o }, inner: { x: e.left + n.l, y: e.top + n.t, w: i - n.l - n.r, h: s - n.t - n.b, radius: { topLeft: Math.max(0, o.topLeft - Math.max(n.t, n.l)), topRight: Math.max(0, o.topRight - Math.max(n.t, n.r)), bottomLeft: Math.max(0, o.bottomLeft - Math.max(n.b, n.l)), bottomRight: Math.max(0, o.bottomRight - Math.max(n.b, n.r)) } } } }(this), a = (r = o.radius).topLeft || r.topRight || r.bottomLeft || r.bottomRight ? Yo : gc; var r; t.save(), o.w === n.w && o.h === n.h || (t.beginPath(), a(t, mc(o, e, n)), t.clip(), a(t, mc(n, -e, o)), t.fillStyle = i, t.fill("evenodd")), t.beginPath(), a(t, mc(n, e)), t.fillStyle = s, t.fill(), t.restore() } inRange(t, e, i) { return fc(this, t, e, i) } inXRange(t, e) { return fc(this, t, null, e) } inYRange(t, e) { return fc(this, null, t, e) } getCenterPoint(t) { const { x: e, y: i, base: s, horizontal: n } = this.getProps(["x", "y", "base", "horizontal"], t); return { x: n ? (e + s) / 2 : e, y: n ? i : (i + s) / 2 } } getRange(t) { return "x" === t ? this.width / 2 : this.height / 2 } } bc.id = "bar", bc.defaults = { borderSkipped: "start", borderWidth: 0, borderRadius: 0, inflateAmount: "auto", pointStyle: void 0 }, bc.defaultRoutes = { backgroundColor: "backgroundColor", borderColor: "borderColor" }; var _c = Object.freeze({ __proto__: null, ArcElement: ec, LineElement: cc, PointElement: dc, BarElement: bc }); function yc(t) { if (t._decimated) { const e = t._data; delete t._decimated, delete t._data, Object.defineProperty(t, "data", { value: e }) } } function wc(t) { t.data.datasets.forEach((t => { yc(t) })) } var vc = { id: "decimation", defaults: { algorithm: "min-max", enabled: !1 }, beforeElementsUpdate: (t, e, i) => { if (!i.enabled) return void wc(t); const s = t.width; t.data.datasets.forEach(((e, n) => { const { _data: o, indexAxis: a } = e, r = t.getDatasetMeta(n), l = o || e.data; if ("y" === ia([a, t.options.indexAxis])) return; if (!r.controller.supportsDecimation) return; const c = t.scales[r.xAxisID]; if ("linear" !== c.type && "time" !== c.type) return; if (t.options.parsing) return; let h, { start: d, count: u } = function (t, e) { const i = e.length; let s, n = 0; const { iScale: o } = t, { min: a, max: r, minDefined: l, maxDefined: c } = o.getUserBounds(); return l && (n = Pn(Dn(e, o.axis, a).lo, 0, i - 1)), s = c ? Pn(Dn(e, o.axis, r).hi + 1, n, i) - n : i - n, { start: n, count: s } }(r, l); if (u <= (i.threshold || 4 * s)) yc(e); else { switch (Ns(o) && (e._data = l, delete e.data, Object.defineProperty(e, "data", { configurable: !0, enumerable: !0, get: function () { return this._decimated }, set: function (t) { this._data = t } })), i.algorithm) { case "lttb": h = function (t, e, i, s, n) { const o = n.samples || s; if (o >= i) return t.slice(e, e + i); const a = [], r = (i - 2) / (o - 2); let l = 0; const c = e + i - 1; let h, d, u, p, f, g = e; for (a[l++] = t[g], h = 0; h < o - 2; h++) { let s, n = 0, o = 0; const c = Math.floor((h + 1) * r) + 1 + e, m = Math.min(Math.floor((h + 2) * r) + 1, i) + e, b = m - c; for (s = c; s < m; s++)n += t[s].x, o += t[s].y; n /= b, o /= b; const _ = Math.floor(h * r) + 1 + e, y = Math.min(Math.floor((h + 1) * r) + 1, i) + e, { x: w, y: v } = t[g]; for (u = p = -1, s = _; s < y; s++)p = .5 * Math.abs((w - n) * (t[s].y - v) - (w - t[s].x) * (o - v)), p > u && (u = p, d = t[s], f = s); a[l++] = d, g = f } return a[l++] = t[c], a }(l, d, u, s, i); break; case "min-max": h = function (t, e, i, s) { let n, o, a, r, l, c, h, d, u, p, f = 0, g = 0; const m = [], b = e + i - 1, _ = t[e].x, y = t[b].x - _; for (n = e; n < e + i; ++n) { o = t[n], a = (o.x - _) / y * s, r = o.y; const e = 0 | a; if (e === l) r < u ? (u = r, c = n) : r > p && (p = r, h = n), f = (g * f + o.x) / ++g; else { const i = n - 1; if (!Ns(c) && !Ns(h)) { const e = Math.min(c, h), s = Math.max(c, h); e !== d && e !== i && m.push({ ...t[e], x: f }), s !== d && s !== i && m.push({ ...t[s], x: f }) } n > 0 && i !== d && m.push(t[i]), m.push(o), l = e, g = 0, u = p = r, c = h = d = n } } return m }(l, d, u, s); break; default: throw new Error(`Unsupported decimation algorithm '${i.algorithm}'`) }e._decimated = h } })) }, destroy(t) { wc(t) } }; function xc(t, e, i, s) { if (s) return; let n = e[t], o = i[t]; return "angle" === t && (n = Sn(n), o = Sn(o)), { property: t, start: n, end: o } } function kc(t, e, i) { for (; e > t; e--) { const t = i[e]; if (!isNaN(t.x) && !isNaN(t.y)) break } return e } function Ec(t, e, i, s) { return t && e ? s(t[i], e[i]) : t ? t[i] : e ? e[i] : 0 } function Cc(t, e) { let i = [], s = !1; return Fs(t) ? (s = !0, i = t) : i = function (t, e) { const { x: i = null, y: s = null } = t || {}, n = e.points, o = []; return e.segments.forEach((({ start: t, end: e }) => { e = kc(t, e, n); const a = n[t], r = n[e]; null !== s ? (o.push({ x: a.x, y: s }), o.push({ x: r.x, y: s })) : null !== i && (o.push({ x: i, y: a.y }), o.push({ x: i, y: r.y })) })), o }(t, e), i.length ? new cc({ points: i, options: { tension: 0 }, _loop: s, _fullLoop: s }) : null } function Ac(t) { return t && !1 !== t.fill } function Mc(t, e, i) { let s = t[e].fill; const n = [e]; let o; if (!i) return s; for (; !1 !== s && -1 === n.indexOf(s);) { if (!Hs(s)) return s; if (o = t[s], !o) return !1; if (o.visible) return s; n.push(s), s = o.fill } return !1 } function Sc(t, e, i) { const s = function (t) { const e = t.options, i = e.fill; let s = $s(i && i.target, i); return void 0 === s && (s = !!e.backgroundColor), !1 !== s && null !== s && (!0 === s ? "origin" : s) }(t); if (Vs(s)) return !isNaN(s.value) && s; let n = parseFloat(s); return Hs(n) && Math.floor(n) === n ? function (t, e, i, s) { return "-" !== t && "+" !== t || (i = e + i), !(i === e || i < 0 || i >= s) && i }(s[0], e, n, i) : ["origin", "start", "end", "stack", "shape"].indexOf(s) >= 0 && s } function Oc(t, e, i) { const s = []; for (let n = 0; n < i.length; n++) { const o = i[n], { first: a, last: r, point: l } = Pc(o, e, "x"); if (!(!l || a && r)) if (a) s.unshift(l); else if (t.push(l), !r) break } t.push(...s) } function Pc(t, e, i) { const s = t.interpolate(e, i); if (!s) return {}; const n = s[i], o = t.segments, a = t.points; let r = !1, l = !1; for (let t = 0; t < o.length; t++) { const e = o[t], s = a[e.start][i], c = a[e.end][i]; if (Tn(n, s, c)) { r = n === s, l = n === c; break } } return { first: r, last: l, point: s } } class Tc { constructor(t) { this.x = t.x, this.y = t.y, this.radius = t.radius } pathSegment(t, e, i) { const { x: s, y: n, radius: o } = this; return e = e || { start: 0, end: cn }, t.arc(s, n, o, e.end, e.start, !0), !i.bounds } interpolate(t) { const { x: e, y: i, radius: s } = this, n = t.angle; return { x: e + Math.cos(n) * s, y: i + Math.sin(n) * s, angle: n } } } function Lc(t, e, i) { const s = function (t) { const { chart: e, fill: i, line: s } = t; if (Hs(i)) return function (t, e) { const i = t.getDatasetMeta(e); return i && t.isDatasetVisible(e) ? i.dataset : null }(e, i); if ("stack" === i) return function (t) { const { scale: e, index: i, line: s } = t, n = [], o = s.segments, a = s.points, r = function (t, e) { const i = [], s = t.getMatchingVisibleMetas("line"); for (let t = 0; t < s.length; t++) { const n = s[t]; if (n.index === e) break; n.hidden || i.unshift(n.dataset) } return i }(e, i); r.push(Cc({ x: null, y: e.bottom }, s)); for (let t = 0; t < o.length; t++) { const e = o[t]; for (let t = e.start; t <= e.end; t++)Oc(n, a[t], r) } return new cc({ points: n, options: {} }) }(t); if ("shape" === i) return !0; const n = function (t) { return (t.scale || {}).getPointPositionForValue ? function (t) { const { scale: e, fill: i } = t, s = e.options, n = e.getLabels().length, o = s.reverse ? e.max : e.min, a = function (t, e, i) { let s; return s = "start" === t ? i : "end" === t ? e.options.reverse ? e.min : e.max : Vs(t) ? t.value : e.getBaseValue(), s }(i, e, o), r = []; if (s.grid.circular) { const t = e.getPointPositionForValue(0, o); return new Tc({ x: t.x, y: t.y, radius: e.getDistanceFromCenterForValue(a) }) } for (let t = 0; t < n; ++t)r.push(e.getPointPositionForValue(t, a)); return r }(t) : function (t) { const { scale: e = {}, fill: i } = t, s = function (t, e) { let i = null; return "start" === t ? i = e.bottom : "end" === t ? i = e.top : Vs(t) ? i = e.getPixelForValue(t.value) : e.getBasePixel && (i = e.getBasePixel()), i }(i, e); if (Hs(s)) { const t = e.isHorizontal(); return { x: t ? s : null, y: t ? null : s } } return null }(t) }(t); return n instanceof Tc ? n : Cc(n, s) }(e), { line: n, scale: o, axis: a } = e, r = n.options, l = r.fill, c = r.backgroundColor, { above: h = c, below: d = c } = l || {}; s && n.points.length && (Vo(t, i), function (t, e) { const { line: i, target: s, above: n, below: o, area: a, scale: r } = e, l = i._loop ? "angle" : e.axis; t.save(), "x" === l && o !== n && (Dc(t, s, a.top), Ic(t, { line: i, target: s, color: n, scale: r, property: l }), t.restore(), t.save(), Dc(t, s, a.bottom)), Ic(t, { line: i, target: s, color: o, scale: r, property: l }), t.restore() }(t, { line: n, target: s, above: h, below: d, area: i, scale: o, axis: a }), Ho(t)) } function Dc(t, e, i) { const { segments: s, points: n } = e; let o = !0, a = !1; t.beginPath(); for (const r of s) { const { start: s, end: l } = r, c = n[s], h = n[kc(s, l, n)]; o ? (t.moveTo(c.x, c.y), o = !1) : (t.lineTo(c.x, i), t.lineTo(c.x, c.y)), a = !!e.pathSegment(t, r, { move: a }), a ? t.closePath() : t.lineTo(h.x, i) } t.lineTo(e.first().x, i), t.closePath(), t.clip() } function Ic(t, e) { const { line: i, target: s, property: n, color: o, scale: a } = e, r = function (t, e, i) { const s = t.segments, n = t.points, o = e.points, a = []; for (const t of s) { let { start: s, end: r } = t; r = kc(s, r, n); const l = xc(i, n[s], n[r], t.loop); if (!e.segments) { a.push({ source: t, target: l, start: n[s], end: n[r] }); continue } const c = Ua(e, l); for (const e of c) { const s = xc(i, o[e.start], o[e.end], e.loop), r = qa(t, n, s); for (const t of r) a.push({ source: t, target: e, start: { [i]: Ec(l, s, "start", Math.max) }, end: { [i]: Ec(l, s, "end", Math.min) } }) } } return a }(i, s, n); for (const { source: e, target: l, start: c, end: h } of r) { const { style: { backgroundColor: r = o } = {} } = e, d = !0 !== s; t.save(), t.fillStyle = r, Bc(t, a, d && xc(n, c, h)), t.beginPath(); const u = !!i.pathSegment(t, e); let p; if (d) { u ? t.closePath() : Rc(t, s, h, n); const e = !!s.pathSegment(t, l, { move: u, reverse: !0 }); p = u && e, p || Rc(t, s, c, n) } t.closePath(), t.fill(p ? "evenodd" : "nonzero"), t.restore() } } function Bc(t, e, i) { const { top: s, bottom: n } = e.chart.chartArea, { property: o, start: a, end: r } = i || {}; "x" === o && (t.beginPath(), t.rect(a, s, r - a, n - s), t.clip()) } function Rc(t, e, i, s) { const n = e.interpolate(i, s); n && t.lineTo(n.x, n.y) } var zc = { id: "filler", afterDatasetsUpdate(t, e, i) { const s = (t.data.datasets || []).length, n = []; let o, a, r, l; for (a = 0; a < s; ++a)o = t.getDatasetMeta(a), r = o.dataset, l = null, r && r.options && r instanceof cc && (l = { visible: t.isDatasetVisible(a), index: a, fill: Sc(r, a, s), chart: t, axis: o.controller.options.indexAxis, scale: o.vScale, line: r }), o.$filler = l, n.push(l); for (a = 0; a < s; ++a)l = n[a], l && !1 !== l.fill && (l.fill = Mc(n, a, i.propagate)) }, beforeDraw(t, e, i) { const s = "beforeDraw" === i.drawTime, n = t.getSortedVisibleDatasetMetas(), o = t.chartArea; for (let e = n.length - 1; e >= 0; --e) { const i = n[e].$filler; i && (i.line.updateControlPoints(o, i.axis), s && i.fill && Lc(t.ctx, i, o)) } }, beforeDatasetsDraw(t, e, i) { if ("beforeDatasetsDraw" !== i.drawTime) return; const s = t.getSortedVisibleDatasetMetas(); for (let e = s.length - 1; e >= 0; --e) { const i = s[e].$filler; Ac(i) && Lc(t.ctx, i, t.chartArea) } }, beforeDatasetDraw(t, e, i) { const s = e.meta.$filler; Ac(s) && "beforeDatasetDraw" === i.drawTime && Lc(t.ctx, s, t.chartArea) }, defaults: { propagate: !0, drawTime: "beforeDatasetDraw" } }; const jc = (t, e) => { let { boxHeight: i = e, boxWidth: s = e } = t; return t.usePointStyle && (i = Math.min(i, e), s = t.pointStyleWidth || Math.min(s, e)), { boxWidth: s, boxHeight: i, itemHeight: Math.max(e, i) } }; class Nc extends Sr { constructor(t) { super(), this._added = !1, this.legendHitBoxes = [], this._hoveredItem = null, this.doughnutMode = !1, this.chart = t.chart, this.options = t.options, this.ctx = t.ctx, this.legendItems = void 0, this.columnSizes = void 0, this.lineWidths = void 0, this.maxHeight = void 0, this.maxWidth = void 0, this.top = void 0, this.bottom = void 0, this.left = void 0, this.right = void 0, this.height = void 0, this.width = void 0, this._margins = void 0, this.position = void 0, this.weight = void 0, this.fullSize = void 0 } update(t, e, i) { this.maxWidth = t, this.maxHeight = e, this._margins = i, this.setDimensions(), this.buildLabels(), this.fit() } setDimensions() { this.isHorizontal() ? (this.width = this.maxWidth, this.left = this._margins.left, this.right = this.width) : (this.height = this.maxHeight, this.top = this._margins.top, this.bottom = this.height) } buildLabels() { const t = this.options.labels || {}; let e = Us(t.generateLabels, [this.chart], this) || []; t.filter && (e = e.filter((e => t.filter(e, this.chart.data)))), t.sort && (e = e.sort(((e, i) => t.sort(e, i, this.chart.data)))), this.options.reverse && e.reverse(), this.legendItems = e } fit() { const { options: t, ctx: e } = this; if (!t.display) return void (this.width = this.height = 0); const i = t.labels, s = ea(i.font), n = s.size, o = this._computeTitleHeight(), { boxWidth: a, itemHeight: r } = jc(i, n); let l, c; e.font = s.string, this.isHorizontal() ? (l = this.maxWidth, c = this._fitRows(o, n, a, r) + 10) : (c = this.maxHeight, l = this._fitCols(o, n, a, r) + 10), this.width = Math.min(l, t.maxWidth || this.maxWidth), this.height = Math.min(c, t.maxHeight || this.maxHeight) } _fitRows(t, e, i, s) { const { ctx: n, maxWidth: o, options: { labels: { padding: a } } } = this, r = this.legendHitBoxes = [], l = this.lineWidths = [0], c = s + a; let h = t; n.textAlign = "left", n.textBaseline = "middle"; let d = -1, u = -c; return this.legendItems.forEach(((t, p) => { const f = i + e / 2 + n.measureText(t.text).width; (0 === p || l[l.length - 1] + f + 2 * a > o) && (h += c, l[l.length - (p > 0 ? 0 : 1)] = 0, u += c, d++), r[p] = { left: 0, top: u, row: d, width: f, height: s }, l[l.length - 1] += f + a })), h } _fitCols(t, e, i, s) { const { ctx: n, maxHeight: o, options: { labels: { padding: a } } } = this, r = this.legendHitBoxes = [], l = this.columnSizes = [], c = o - t; let h = a, d = 0, u = 0, p = 0, f = 0; return this.legendItems.forEach(((t, o) => { const g = i + e / 2 + n.measureText(t.text).width; o > 0 && u + s + 2 * a > c && (h += d + a, l.push({ width: d, height: u }), p += d + a, f++, d = u = 0), r[o] = { left: p, top: u, col: f, width: g, height: s }, d = Math.max(d, g), u += s + a })), h += d, l.push({ width: d, height: u }), h } adjustHitBoxes() { if (!this.options.display) return; const t = this._computeTitleHeight(), { legendHitBoxes: e, options: { align: i, labels: { padding: s }, rtl: n } } = this, o = Fa(n, this.left, this.width); if (this.isHorizontal()) { let n = 0, a = Vn(i, this.left + s, this.right - this.lineWidths[n]); for (const r of e) n !== r.row && (n = r.row, a = Vn(i, this.left + s, this.right - this.lineWidths[n])), r.top += this.top + t + s, r.left = o.leftForLtr(o.x(a), r.width), a += r.width + s } else { let n = 0, a = Vn(i, this.top + t + s, this.bottom - this.columnSizes[n].height); for (const r of e) r.col !== n && (n = r.col, a = Vn(i, this.top + t + s, this.bottom - this.columnSizes[n].height)), r.top = a, r.left += this.left + s, r.left = o.leftForLtr(o.x(r.left), r.width), a += r.height + s } } isHorizontal() { return "top" === this.options.position || "bottom" === this.options.position } draw() { if (this.options.display) { const t = this.ctx; Vo(t, this), this._draw(), Ho(t) } } _draw() { const { options: t, columnSizes: e, lineWidths: i, ctx: s } = this, { align: n, labels: o } = t, a = Do.color, r = Fa(t.rtl, this.left, this.width), l = ea(o.font), { color: c, padding: h } = o, d = l.size, u = d / 2; let p; this.drawTitle(), s.textAlign = r.textAlign("left"), s.textBaseline = "middle", s.lineWidth = .5, s.font = l.string; const { boxWidth: f, boxHeight: g, itemHeight: m } = jc(o, d), b = this.isHorizontal(), _ = this._computeTitleHeight(); p = b ? { x: Vn(n, this.left + h, this.right - i[0]), y: this.top + h + _, line: 0 } : { x: this.left + h, y: Vn(n, this.top + _ + h, this.bottom - e[0].height), line: 0 }, Va(this.ctx, t.textDirection); const y = m + h; this.legendItems.forEach(((w, v) => { s.strokeStyle = w.fontColor || c, s.fillStyle = w.fontColor || c; const x = s.measureText(w.text).width, k = r.textAlign(w.textAlign || (w.textAlign = o.textAlign)), E = f + u + x; let C = p.x, A = p.y; r.setWidth(this.width), b ? v > 0 && C + E + h > this.right && (A = p.y += y, p.line++, C = p.x = Vn(n, this.left + h, this.right - i[p.line])) : v > 0 && A + y > this.bottom && (C = p.x = C + e[p.line].width + h, p.line++, A = p.y = Vn(n, this.top + _ + h, this.bottom - e[p.line].height)), function (t, e, i) { if (isNaN(f) || f <= 0 || isNaN(g) || g < 0) return; s.save(); const n = $s(i.lineWidth, 1); if (s.fillStyle = $s(i.fillStyle, a), s.lineCap = $s(i.lineCap, "butt"), s.lineDashOffset = $s(i.lineDashOffset, 0), s.lineJoin = $s(i.lineJoin, "miter"), s.lineWidth = n, s.strokeStyle = $s(i.strokeStyle, a), s.setLineDash($s(i.lineDash, [])), o.usePointStyle) { const a = { radius: g * Math.SQRT2 / 2, pointStyle: i.pointStyle, rotation: i.rotation, borderWidth: n }, l = r.xPlus(t, f / 2); No(s, a, l, e + u, o.pointStyleWidth && f) } else { const o = e + Math.max((d - g) / 2, 0), a = r.leftForLtr(t, f), l = Jo(i.borderRadius); s.beginPath(), Object.values(l).some((t => 0 !== t)) ? Yo(s, { x: a, y: o, w: f, h: g, radius: l }) : s.rect(a, o, f, g), s.fill(), 0 !== n && s.stroke() } s.restore() }(r.x(C), A, w), C = ((t, e, i, s) => t === (s ? "left" : "right") ? i : "center" === t ? (e + i) / 2 : e)(k, C + f + u, b ? C + E : this.right, t.rtl), function (t, e, i) { qo(s, i.text, t, e + m / 2, l, { strikethrough: i.hidden, textAlign: r.textAlign(i.textAlign) }) }(r.x(C), A, w), b ? p.x += E + h : p.y += y })), Ha(this.ctx, t.textDirection) } drawTitle() { const t = this.options, e = t.title, i = ea(e.font), s = ta(e.padding); if (!e.display) return; const n = Fa(t.rtl, this.left, this.width), o = this.ctx, a = e.position, r = i.size / 2, l = s.top + r; let c, h = this.left, d = this.width; if (this.isHorizontal()) d = Math.max(...this.lineWidths), c = this.top + l, h = Vn(t.align, h, this.right - d); else { const e = this.columnSizes.reduce(((t, e) => Math.max(t, e.height)), 0); c = l + Vn(t.align, this.top, this.bottom - e - t.labels.padding - this._computeTitleHeight()) } const u = Vn(a, h, h + d); o.textAlign = n.textAlign(Fn(a)), o.textBaseline = "middle", o.strokeStyle = e.color, o.fillStyle = e.color, o.font = i.string, qo(o, e.text, u, c, i) } _computeTitleHeight() { const t = this.options.title, e = ea(t.font), i = ta(t.padding); return t.display ? e.lineHeight + i.height : 0 } _getLegendItemAt(t, e) { let i, s, n; if (Tn(t, this.left, this.right) && Tn(e, this.top, this.bottom)) for (n = this.legendHitBoxes, i = 0; i < n.length; ++i)if (s = n[i], Tn(t, s.left, s.left + s.width) && Tn(e, s.top, s.top + s.height)) return this.legendItems[i]; return null } handleEvent(t) { const e = this.options; if (!function (t, e) { return !("mousemove" !== t && "mouseout" !== t || !e.onHover && !e.onLeave) || !(!e.onClick || "click" !== t && "mouseup" !== t) }(t.type, e)) return; const i = this._getLegendItemAt(t.x, t.y); if ("mousemove" === t.type || "mouseout" === t.type) { const o = this._hoveredItem, a = (n = i, null !== (s = o) && null !== n && s.datasetIndex === n.datasetIndex && s.index === n.index); o && !a && Us(e.onLeave, [t, o, this], this), this._hoveredItem = i, i && !a && Us(e.onHover, [t, i, this], this) } else i && Us(e.onClick, [t, i, this], this); var s, n } } var Fc = { id: "legend", _element: Nc, start(t, e, i) { const s = t.legend = new Nc({ ctx: t.ctx, options: i, chart: t }); cl.configure(t, s, i), cl.addBox(t, s) }, stop(t) { cl.removeBox(t, t.legend), delete t.legend }, beforeUpdate(t, e, i) { const s = t.legend; cl.configure(t, s, i), s.options = i }, afterUpdate(t) { const e = t.legend; e.buildLabels(), e.adjustHitBoxes() }, afterEvent(t, e) { e.replay || t.legend.handleEvent(e.event) }, defaults: { display: !0, position: "top", align: "center", fullSize: !0, reverse: !1, weight: 1e3, onClick(t, e, i) { const s = e.datasetIndex, n = i.chart; n.isDatasetVisible(s) ? (n.hide(s), e.hidden = !0) : (n.show(s), e.hidden = !1) }, onHover: null, onLeave: null, labels: { color: t => t.chart.options.color, boxWidth: 40, padding: 10, generateLabels(t) { const e = t.data.datasets, { labels: { usePointStyle: i, pointStyle: s, textAlign: n, color: o } } = t.legend.options; return t._getSortedDatasetMetas().map((t => { const a = t.controller.getStyle(i ? 0 : void 0), r = ta(a.borderWidth); return { text: e[t.index].label, fillStyle: a.backgroundColor, fontColor: o, hidden: !t.visible, lineCap: a.borderCapStyle, lineDash: a.borderDash, lineDashOffset: a.borderDashOffset, lineJoin: a.borderJoinStyle, lineWidth: (r.width + r.height) / 4, strokeStyle: a.borderColor, pointStyle: s || a.pointStyle, rotation: a.rotation, textAlign: n || a.textAlign, borderRadius: 0, datasetIndex: t.index } }), this) } }, title: { color: t => t.chart.options.color, display: !1, position: "center", text: "" } }, descriptors: { _scriptable: t => !t.startsWith("on"), labels: { _scriptable: t => !["generateLabels", "filter", "sort"].includes(t) } } }; class Vc extends Sr { constructor(t) { super(), this.chart = t.chart, this.options = t.options, this.ctx = t.ctx, this._padding = void 0, this.top = void 0, this.bottom = void 0, this.left = void 0, this.right = void 0, this.width = void 0, this.height = void 0, this.position = void 0, this.weight = void 0, this.fullSize = void 0 } update(t, e) { const i = this.options; if (this.left = 0, this.top = 0, !i.display) return void (this.width = this.height = this.right = this.bottom = 0); this.width = this.right = t, this.height = this.bottom = e; const s = Fs(i.text) ? i.text.length : 1; this._padding = ta(i.padding); const n = s * ea(i.font).lineHeight + this._padding.height; this.isHorizontal() ? this.height = n : this.width = n } isHorizontal() { const t = this.options.position; return "top" === t || "bottom" === t } _drawArgs(t) { const { top: e, left: i, bottom: s, right: n, options: o } = this, a = o.align; let r, l, c, h = 0; return this.isHorizontal() ? (l = Vn(a, i, n), c = e + t, r = n - i) : ("left" === o.position ? (l = i + t, c = Vn(a, s, e), h = -.5 * ln) : (l = n - t, c = Vn(a, e, s), h = .5 * ln), r = s - e), { titleX: l, titleY: c, maxWidth: r, rotation: h } } draw() { const t = this.ctx, e = this.options; if (!e.display) return; const i = ea(e.font), s = i.lineHeight / 2 + this._padding.top, { titleX: n, titleY: o, maxWidth: a, rotation: r } = this._drawArgs(s); qo(t, e.text, 0, 0, i, { color: e.color, maxWidth: a, rotation: r, textAlign: Fn(e.align), textBaseline: "middle", translation: [n, o] }) } } var Hc = { id: "title", _element: Vc, start(t, e, i) { !function (t, e) { const i = new Vc({ ctx: t.ctx, options: e, chart: t }); cl.configure(t, i, e), cl.addBox(t, i), t.titleBlock = i }(t, i) }, stop(t) { const e = t.titleBlock; cl.removeBox(t, e), delete t.titleBlock }, beforeUpdate(t, e, i) { const s = t.titleBlock; cl.configure(t, s, i), s.options = i }, defaults: { align: "center", display: !1, font: { weight: "bold" }, fullSize: !0, padding: 10, position: "top", text: "", weight: 2e3 }, defaultRoutes: { color: "color" }, descriptors: { _scriptable: !0, _indexable: !1 } }; const Wc = new WeakMap; var $c = { id: "subtitle", start(t, e, i) { const s = new Vc({ ctx: t.ctx, options: i, chart: t }); cl.configure(t, s, i), cl.addBox(t, s), Wc.set(t, s) }, stop(t) { cl.removeBox(t, Wc.get(t)), Wc.delete(t) }, beforeUpdate(t, e, i) { const s = Wc.get(t); cl.configure(t, s, i), s.options = i }, defaults: { align: "center", display: !1, font: { weight: "normal" }, fullSize: !0, padding: 0, position: "top", text: "", weight: 1500 }, defaultRoutes: { color: "color" }, descriptors: { _scriptable: !0, _indexable: !1 } }; const qc = { average(t) { if (!t.length) return !1; let e, i, s = 0, n = 0, o = 0; for (e = 0, i = t.length; e < i; ++e) { const i = t[e].element; if (i && i.hasValue()) { const t = i.tooltipPosition(); s += t.x, n += t.y, ++o } } return { x: s / o, y: n / o } }, nearest(t, e) { if (!t.length) return !1; let i, s, n, o = e.x, a = e.y, r = Number.POSITIVE_INFINITY; for (i = 0, s = t.length; i < s; ++i) { const s = t[i].element; if (s && s.hasValue()) { const t = An(e, s.getCenterPoint()); t < r && (r = t, n = s) } } if (n) { const t = n.tooltipPosition(); o = t.x, a = t.y } return { x: o, y: a } } }; function Uc(t, e) { return e && (Fs(e) ? Array.prototype.push.apply(t, e) : t.push(e)), t } function Yc(t) { return ("string" == typeof t || t instanceof String) && t.indexOf("\n") > -1 ? t.split("\n") : t } function Xc(t, e) { const { element: i, datasetIndex: s, index: n } = e, o = t.getDatasetMeta(s).controller, { label: a, value: r } = o.getLabelAndValue(n); return { chart: t, label: a, parsed: o.getParsed(n), raw: t.data.datasets[s].data[n], formattedValue: r, dataset: o.getDataset(), dataIndex: n, datasetIndex: s, element: i } } function Kc(t, e) { const i = t.chart.ctx, { body: s, footer: n, title: o } = t, { boxWidth: a, boxHeight: r } = e, l = ea(e.bodyFont), c = ea(e.titleFont), h = ea(e.footerFont), d = o.length, u = n.length, p = s.length, f = ta(e.padding); let g = f.height, m = 0, b = s.reduce(((t, e) => t + e.before.length + e.lines.length + e.after.length), 0); b += t.beforeBody.length + t.afterBody.length, d && (g += d * c.lineHeight + (d - 1) * e.titleSpacing + e.titleMarginBottom), b && (g += p * (e.displayColors ? Math.max(r, l.lineHeight) : l.lineHeight) + (b - p) * l.lineHeight + (b - 1) * e.bodySpacing), u && (g += e.footerMarginTop + u * h.lineHeight + (u - 1) * e.footerSpacing); let _ = 0; const y = function (t) { m = Math.max(m, i.measureText(t).width + _) }; return i.save(), i.font = c.string, Ys(t.title, y), i.font = l.string, Ys(t.beforeBody.concat(t.afterBody), y), _ = e.displayColors ? a + 2 + e.boxPadding : 0, Ys(s, (t => { Ys(t.before, y), Ys(t.lines, y), Ys(t.after, y) })), _ = 0, i.font = h.string, Ys(t.footer, y), i.restore(), m += f.width, { width: m, height: g } } function Zc(t, e, i, s) { const { x: n, width: o } = i, { width: a, chartArea: { left: r, right: l } } = t; let c = "center"; return "center" === s ? c = n <= (r + l) / 2 ? "left" : "right" : n <= o / 2 ? c = "left" : n >= a - o / 2 && (c = "right"), function (t, e, i, s) { const { x: n, width: o } = s, a = i.caretSize + i.caretPadding; return "left" === t && n + o + a > e.width || "right" === t && n - o - a < 0 || void 0 }(c, t, e, i) && (c = "center"), c } function Qc(t, e, i) { const s = i.yAlign || e.yAlign || function (t, e) { const { y: i, height: s } = e; return i < s / 2 ? "top" : i > t.height - s / 2 ? "bottom" : "center" }(t, i); return { xAlign: i.xAlign || e.xAlign || Zc(t, e, i, s), yAlign: s } } function Gc(t, e, i, s) { const { caretSize: n, caretPadding: o, cornerRadius: a } = t, { xAlign: r, yAlign: l } = i, c = n + o, { topLeft: h, topRight: d, bottomLeft: u, bottomRight: p } = Jo(a); let f = function (t, e) { let { x: i, width: s } = t; return "right" === e ? i -= s : "center" === e && (i -= s / 2), i }(e, r); const g = function (t, e, i) { let { y: s, height: n } = t; return "top" === e ? s += i : s -= "bottom" === e ? n + i : n / 2, s }(e, l, c); return "center" === l ? "left" === r ? f += c : "right" === r && (f -= c) : "left" === r ? f -= Math.max(h, u) + n : "right" === r && (f += Math.max(d, p) + n), { x: Pn(f, 0, s.width - e.width), y: Pn(g, 0, s.height - e.height) } } function Jc(t, e, i) { const s = ta(i.padding); return "center" === e ? t.x + t.width / 2 : "right" === e ? t.x + t.width - s.right : t.x + s.left } function th(t) { return Uc([], Yc(t)) } function eh(t, e) { const i = e && e.dataset && e.dataset.tooltip && e.dataset.tooltip.callbacks; return i ? t.override(i) : t } class ih extends Sr { constructor(t) { super(), this.opacity = 0, this._active = [], this._eventPosition = void 0, this._size = void 0, this._cachedAnimations = void 0, this._tooltipItems = [], this.$animations = void 0, this.$context = void 0, this.chart = t.chart || t._chart, this._chart = this.chart, this.options = t.options, this.dataPoints = void 0, this.title = void 0, this.beforeBody = void 0, this.body = void 0, this.afterBody = void 0, this.footer = void 0, this.xAlign = void 0, this.yAlign = void 0, this.x = void 0, this.y = void 0, this.height = void 0, this.width = void 0, this.caretX = void 0, this.caretY = void 0, this.labelColors = void 0, this.labelPointStyles = void 0, this.labelTextColors = void 0 } initialize(t) { this.options = t, this._cachedAnimations = void 0, this.$context = void 0 } _resolveAnimations() { const t = this._cachedAnimations; if (t) return t; const e = this.chart, i = this.options.setContext(this.getContext()), s = i.enabled && e.options.animation && i.animations, n = new tr(this.chart, s); return s._cacheable && (this._cachedAnimations = Object.freeze(n)), n } getContext() { return this.$context || (this.$context = (this, sa(this.chart.getContext(), { tooltip: this, tooltipItems: this._tooltipItems, type: "tooltip" }))) } getTitle(t, e) { const { callbacks: i } = e, s = i.beforeTitle.apply(this, [t]), n = i.title.apply(this, [t]), o = i.afterTitle.apply(this, [t]); let a = []; return a = Uc(a, Yc(s)), a = Uc(a, Yc(n)), a = Uc(a, Yc(o)), a } getBeforeBody(t, e) { return th(e.callbacks.beforeBody.apply(this, [t])) } getBody(t, e) { const { callbacks: i } = e, s = []; return Ys(t, (t => { const e = { before: [], lines: [], after: [] }, n = eh(i, t); Uc(e.before, Yc(n.beforeLabel.call(this, t))), Uc(e.lines, n.label.call(this, t)), Uc(e.after, Yc(n.afterLabel.call(this, t))), s.push(e) })), s } getAfterBody(t, e) { return th(e.callbacks.afterBody.apply(this, [t])) } getFooter(t, e) { const { callbacks: i } = e, s = i.beforeFooter.apply(this, [t]), n = i.footer.apply(this, [t]), o = i.afterFooter.apply(this, [t]); let a = []; return a = Uc(a, Yc(s)), a = Uc(a, Yc(n)), a = Uc(a, Yc(o)), a } _createItems(t) { const e = this._active, i = this.chart.data, s = [], n = [], o = []; let a, r, l = []; for (a = 0, r = e.length; a < r; ++a)l.push(Xc(this.chart, e[a])); return t.filter && (l = l.filter(((e, s, n) => t.filter(e, s, n, i)))), t.itemSort && (l = l.sort(((e, s) => t.itemSort(e, s, i)))), Ys(l, (e => { const i = eh(t.callbacks, e); s.push(i.labelColor.call(this, e)), n.push(i.labelPointStyle.call(this, e)), o.push(i.labelTextColor.call(this, e)) })), this.labelColors = s, this.labelPointStyles = n, this.labelTextColors = o, this.dataPoints = l, l } update(t, e) { const i = this.options.setContext(this.getContext()), s = this._active; let n, o = []; if (s.length) { const t = qc[i.position].call(this, s, this._eventPosition); o = this._createItems(i), this.title = this.getTitle(o, i), this.beforeBody = this.getBeforeBody(o, i), this.body = this.getBody(o, i), this.afterBody = this.getAfterBody(o, i), this.footer = this.getFooter(o, i); const e = this._size = Kc(this, i), a = Object.assign({}, t, e), r = Qc(this.chart, i, a), l = Gc(i, a, r, this.chart); this.xAlign = r.xAlign, this.yAlign = r.yAlign, n = { opacity: 1, x: l.x, y: l.y, width: e.width, height: e.height, caretX: t.x, caretY: t.y } } else 0 !== this.opacity && (n = { opacity: 0 }); this._tooltipItems = o, this.$context = void 0, n && this._resolveAnimations().update(this, n), t && i.external && i.external.call(this, { chart: this.chart, tooltip: this, replay: e }) } drawCaret(t, e, i, s) { const n = this.getCaretPosition(t, i, s); e.lineTo(n.x1, n.y1), e.lineTo(n.x2, n.y2), e.lineTo(n.x3, n.y3) } getCaretPosition(t, e, i) { const { xAlign: s, yAlign: n } = this, { caretSize: o, cornerRadius: a } = i, { topLeft: r, topRight: l, bottomLeft: c, bottomRight: h } = Jo(a), { x: d, y: u } = t, { width: p, height: f } = e; let g, m, b, _, y, w; return "center" === n ? (y = u + f / 2, "left" === s ? (g = d, m = g - o, _ = y + o, w = y - o) : (g = d + p, m = g + o, _ = y - o, w = y + o), b = g) : (m = "left" === s ? d + Math.max(r, c) + o : "right" === s ? d + p - Math.max(l, h) - o : this.caretX, "top" === n ? (_ = u, y = _ - o, g = m - o, b = m + o) : (_ = u + f, y = _ + o, g = m + o, b = m - o), w = _), { x1: g, x2: m, x3: b, y1: _, y2: y, y3: w } } drawTitle(t, e, i) { const s = this.title, n = s.length; let o, a, r; if (n) { const l = Fa(i.rtl, this.x, this.width); for (t.x = Jc(this, i.titleAlign, i), e.textAlign = l.textAlign(i.titleAlign), e.textBaseline = "middle", o = ea(i.titleFont), a = i.titleSpacing, e.fillStyle = i.titleColor, e.font = o.string, r = 0; r < n; ++r)e.fillText(s[r], l.x(t.x), t.y + o.lineHeight / 2), t.y += o.lineHeight + a, r + 1 === n && (t.y += i.titleMarginBottom - a) } } _drawColorBox(t, e, i, s, n) { const o = this.labelColors[i], a = this.labelPointStyles[i], { boxHeight: r, boxWidth: l, boxPadding: c } = n, h = ea(n.bodyFont), d = Jc(this, "left", n), u = s.x(d), p = r < h.lineHeight ? (h.lineHeight - r) / 2 : 0, f = e.y + p; if (n.usePointStyle) { const e = { radius: Math.min(l, r) / 2, pointStyle: a.pointStyle, rotation: a.rotation, borderWidth: 1 }, i = s.leftForLtr(u, l) + l / 2, c = f + r / 2; t.strokeStyle = n.multiKeyBackground, t.fillStyle = n.multiKeyBackground, jo(t, e, i, c), t.strokeStyle = o.borderColor, t.fillStyle = o.backgroundColor, jo(t, e, i, c) } else { t.lineWidth = Vs(o.borderWidth) ? Math.max(...Object.values(o.borderWidth)) : o.borderWidth || 1, t.strokeStyle = o.borderColor, t.setLineDash(o.borderDash || []), t.lineDashOffset = o.borderDashOffset || 0; const e = s.leftForLtr(u, l - c), i = s.leftForLtr(s.xPlus(u, 1), l - c - 2), a = Jo(o.borderRadius); Object.values(a).some((t => 0 !== t)) ? (t.beginPath(), t.fillStyle = n.multiKeyBackground, Yo(t, { x: e, y: f, w: l, h: r, radius: a }), t.fill(), t.stroke(), t.fillStyle = o.backgroundColor, t.beginPath(), Yo(t, { x: i, y: f + 1, w: l - 2, h: r - 2, radius: a }), t.fill()) : (t.fillStyle = n.multiKeyBackground, t.fillRect(e, f, l, r), t.strokeRect(e, f, l, r), t.fillStyle = o.backgroundColor, t.fillRect(i, f + 1, l - 2, r - 2)) } t.fillStyle = this.labelTextColors[i] } drawBody(t, e, i) { const { body: s } = this, { bodySpacing: n, bodyAlign: o, displayColors: a, boxHeight: r, boxWidth: l, boxPadding: c } = i, h = ea(i.bodyFont); let d = h.lineHeight, u = 0; const p = Fa(i.rtl, this.x, this.width), f = function (i) { e.fillText(i, p.x(t.x + u), t.y + d / 2), t.y += d + n }, g = p.textAlign(o); let m, b, _, y, w, v, x; for (e.textAlign = o, e.textBaseline = "middle", e.font = h.string, t.x = Jc(this, g, i), e.fillStyle = i.bodyColor, Ys(this.beforeBody, f), u = a && "right" !== g ? "center" === o ? l / 2 + c : l + 2 + c : 0, y = 0, v = s.length; y < v; ++y) { for (m = s[y], b = this.labelTextColors[y], e.fillStyle = b, Ys(m.before, f), _ = m.lines, a && _.length && (this._drawColorBox(e, t, y, p, i), d = Math.max(h.lineHeight, r)), w = 0, x = _.length; w < x; ++w)f(_[w]), d = h.lineHeight; Ys(m.after, f) } u = 0, d = h.lineHeight, Ys(this.afterBody, f), t.y -= n } drawFooter(t, e, i) { const s = this.footer, n = s.length; let o, a; if (n) { const r = Fa(i.rtl, this.x, this.width); for (t.x = Jc(this, i.footerAlign, i), t.y += i.footerMarginTop, e.textAlign = r.textAlign(i.footerAlign), e.textBaseline = "middle", o = ea(i.footerFont), e.fillStyle = i.footerColor, e.font = o.string, a = 0; a < n; ++a)e.fillText(s[a], r.x(t.x), t.y + o.lineHeight / 2), t.y += o.lineHeight + i.footerSpacing } } drawBackground(t, e, i, s) { const { xAlign: n, yAlign: o } = this, { x: a, y: r } = t, { width: l, height: c } = i, { topLeft: h, topRight: d, bottomLeft: u, bottomRight: p } = Jo(s.cornerRadius); e.fillStyle = s.backgroundColor, e.strokeStyle = s.borderColor, e.lineWidth = s.borderWidth, e.beginPath(), e.moveTo(a + h, r), "top" === o && this.drawCaret(t, e, i, s), e.lineTo(a + l - d, r), e.quadraticCurveTo(a + l, r, a + l, r + d), "center" === o && "right" === n && this.drawCaret(t, e, i, s), e.lineTo(a + l, r + c - p), e.quadraticCurveTo(a + l, r + c, a + l - p, r + c), "bottom" === o && this.drawCaret(t, e, i, s), e.lineTo(a + u, r + c), e.quadraticCurveTo(a, r + c, a, r + c - u), "center" === o && "left" === n && this.drawCaret(t, e, i, s), e.lineTo(a, r + h), e.quadraticCurveTo(a, r, a + h, r), e.closePath(), e.fill(), s.borderWidth > 0 && e.stroke() } _updateAnimationTarget(t) { const e = this.chart, i = this.$animations, s = i && i.x, n = i && i.y; if (s || n) { const i = qc[t.position].call(this, this._active, this._eventPosition); if (!i) return; const o = this._size = Kc(this, t), a = Object.assign({}, i, this._size), r = Qc(e, t, a), l = Gc(t, a, r, e); s._to === l.x && n._to === l.y || (this.xAlign = r.xAlign, this.yAlign = r.yAlign, this.width = o.width, this.height = o.height, this.caretX = i.x, this.caretY = i.y, this._resolveAnimations().update(this, l)) } } _willRender() { return !!this.opacity } draw(t) { const e = this.options.setContext(this.getContext()); let i = this.opacity; if (!i) return; this._updateAnimationTarget(e); const s = { width: this.width, height: this.height }, n = { x: this.x, y: this.y }; i = Math.abs(i) < .001 ? 0 : i; const o = ta(e.padding), a = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length; e.enabled && a && (t.save(), t.globalAlpha = i, this.drawBackground(n, t, s, e), Va(t, e.textDirection), n.y += o.top, this.drawTitle(n, t, e), this.drawBody(n, t, e), this.drawFooter(n, t, e), Ha(t, e.textDirection), t.restore()) } getActiveElements() { return this._active || [] } setActiveElements(t, e) { const i = this._active, s = t.map((({ datasetIndex: t, index: e }) => { const i = this.chart.getDatasetMeta(t); if (!i) throw new Error("Cannot find a dataset at index " + t); return { datasetIndex: t, element: i.data[e], index: e } })), n = !Xs(i, s), o = this._positionChanged(s, e); (n || o) && (this._active = s, this._eventPosition = e, this._ignoreReplayEvents = !0, this.update(!0)) } handleEvent(t, e, i = !0) { if (e && this._ignoreReplayEvents) return !1; this._ignoreReplayEvents = !1; const s = this.options, n = this._active || [], o = this._getActiveElements(t, n, e, i), a = this._positionChanged(o, t), r = e || !Xs(o, n) || a; return r && (this._active = o, (s.enabled || s.external) && (this._eventPosition = { x: t.x, y: t.y }, this.update(!0, e))), r } _getActiveElements(t, e, i, s) { const n = this.options; if ("mouseout" === t.type) return []; if (!s) return e; const o = this.chart.getElementsAtEventForMode(t, n.mode, n, i); return n.reverse && o.reverse(), o } _positionChanged(t, e) { const { caretX: i, caretY: s, options: n } = this, o = qc[n.position].call(this, t, e); return !1 !== o && (i !== o.x || s !== o.y) } } ih.positioners = qc; var sh = { id: "tooltip", _element: ih, positioners: qc, afterInit(t, e, i) { i && (t.tooltip = new ih({ chart: t, options: i })) }, beforeUpdate(t, e, i) { t.tooltip && t.tooltip.initialize(i) }, reset(t, e, i) { t.tooltip && t.tooltip.initialize(i) }, afterDraw(t) { const e = t.tooltip; if (e && e._willRender()) { const i = { tooltip: e }; if (!1 === t.notifyPlugins("beforeTooltipDraw", i)) return; e.draw(t.ctx), t.notifyPlugins("afterTooltipDraw", i) } }, afterEvent(t, e) { if (t.tooltip) { const i = e.replay; t.tooltip.handleEvent(e.event, i, e.inChartArea) && (e.changed = !0) } }, defaults: { enabled: !0, external: null, position: "average", backgroundColor: "rgba(0,0,0,0.8)", titleColor: "#fff", titleFont: { weight: "bold" }, titleSpacing: 2, titleMarginBottom: 6, titleAlign: "left", bodyColor: "#fff", bodySpacing: 2, bodyFont: {}, bodyAlign: "left", footerColor: "#fff", footerSpacing: 2, footerMarginTop: 6, footerFont: { weight: "bold" }, footerAlign: "left", padding: 6, caretPadding: 2, caretSize: 5, cornerRadius: 6, boxHeight: (t, e) => e.bodyFont.size, boxWidth: (t, e) => e.bodyFont.size, multiKeyBackground: "#fff", displayColors: !0, boxPadding: 0, borderColor: "rgba(0,0,0,0)", borderWidth: 0, animation: { duration: 400, easing: "easeOutQuart" }, animations: { numbers: { type: "number", properties: ["x", "y", "width", "height", "caretX", "caretY"] }, opacity: { easing: "linear", duration: 200 } }, callbacks: { beforeTitle: zs, title(t) { if (t.length > 0) { const e = t[0], i = e.chart.data.labels, s = i ? i.length : 0; if (this && this.options && "dataset" === this.options.mode) return e.dataset.label || ""; if (e.label) return e.label; if (s > 0 && e.dataIndex < s) return i[e.dataIndex] } return "" }, afterTitle: zs, beforeBody: zs, beforeLabel: zs, label(t) { if (this && this.options && "dataset" === this.options.mode) return t.label + ": " + t.formattedValue || t.formattedValue; let e = t.dataset.label || ""; e && (e += ": "); const i = t.formattedValue; return Ns(i) || (e += i), e }, labelColor(t) { const e = t.chart.getDatasetMeta(t.datasetIndex).controller.getStyle(t.dataIndex); return { borderColor: e.borderColor, backgroundColor: e.backgroundColor, borderWidth: e.borderWidth, borderDash: e.borderDash, borderDashOffset: e.borderDashOffset, borderRadius: 0 } }, labelTextColor() { return this.options.bodyColor }, labelPointStyle(t) { const e = t.chart.getDatasetMeta(t.datasetIndex).controller.getStyle(t.dataIndex); return { pointStyle: e.pointStyle, rotation: e.rotation } }, afterLabel: zs, afterBody: zs, beforeFooter: zs, footer: zs, afterFooter: zs } }, defaultRoutes: { bodyFont: "font", footerFont: "font", titleFont: "font" }, descriptors: { _scriptable: t => "filter" !== t && "itemSort" !== t && "external" !== t, _indexable: !1, callbacks: { _scriptable: !1, _indexable: !1 }, animation: { _fallback: !1 }, animations: { _fallback: "animation" } }, additionalOptionScopes: ["interaction"] }, nh = Object.freeze({ __proto__: null, Decimation: vc, Filler: zc, Legend: Fc, SubTitle: $c, Title: Hc, Tooltip: sh }); class oh extends jr { constructor(t) { super(t), this._startValue = void 0, this._valueRange = 0, this._addedLabels = [] } init(t) { const e = this._addedLabels; if (e.length) { const t = this.getLabels(); for (const { index: i, label: s } of e) t[i] === s && t.splice(i, 1); this._addedLabels = [] } super.init(t) } parse(t, e) { if (Ns(t)) return null; const i = this.getLabels(); return ((t, e) => null === t ? null : Pn(Math.round(t), 0, e))(e = isFinite(e) && i[e] === t ? e : function (t, e, i, s) { const n = t.indexOf(e); return -1 === n ? ((t, e, i, s) => ("string" == typeof e ? (i = t.push(e) - 1, s.unshift({ index: i, label: e })) : isNaN(e) && (i = null), i))(t, e, i, s) : n !== t.lastIndexOf(e) ? i : n }(i, t, $s(e, t), this._addedLabels), i.length - 1) } determineDataLimits() { const { minDefined: t, maxDefined: e } = this.getUserBounds(); let { min: i, max: s } = this.getMinMax(!0); "ticks" === this.options.bounds && (t || (i = 0), e || (s = this.getLabels().length - 1)), this.min = i, this.max = s } buildTicks() { const t = this.min, e = this.max, i = this.options.offset, s = []; let n = this.getLabels(); n = 0 === t && e === n.length - 1 ? n : n.slice(t, e + 1), this._valueRange = Math.max(n.length - (i ? 0 : 1), 1), this._startValue = this.min - (i ? .5 : 0); for (let i = t; i <= e; i++)s.push({ value: i }); return s } getLabelForValue(t) { const e = this.getLabels(); return t >= 0 && t < e.length ? e[t] : t } configure() { super.configure(), this.isHorizontal() || (this._reversePixels = !this._reversePixels) } getPixelForValue(t) { return "number" != typeof t && (t = this.parse(t)), null === t ? NaN : this.getPixelForDecimal((t - this._startValue) / this._valueRange) } getPixelForTick(t) { const e = this.ticks; return t < 0 || t > e.length - 1 ? null : this.getPixelForValue(e[t].value) } getValueForPixel(t) { return Math.round(this._startValue + this.getDecimalForPixel(t) * this._valueRange) } getBasePixel() { return this.bottom } } function ah(t, e, { horizontal: i, minRotation: s }) { const n = xn(s), o = (i ? Math.sin(n) : Math.cos(n)) || .001, a = .75 * e * ("" + t).length; return Math.min(e / o, a) } oh.id = "category", oh.defaults = { ticks: { callback: oh.prototype.getLabelForValue } }; class rh extends jr { constructor(t) { super(t), this.start = void 0, this.end = void 0, this._startValue = void 0, this._endValue = void 0, this._valueRange = 0 } parse(t, e) { return Ns(t) || ("number" == typeof t || t instanceof Number) && !isFinite(+t) ? null : +t } handleTickRangeOptions() { const { beginAtZero: t } = this.options, { minDefined: e, maxDefined: i } = this.getUserBounds(); let { min: s, max: n } = this; const o = t => s = e ? s : t, a = t => n = i ? n : t; if (t) { const t = bn(s), e = bn(n); t < 0 && e < 0 ? a(0) : t > 0 && e > 0 && o(0) } if (s === n) { let e = 1; (n >= Number.MAX_SAFE_INTEGER || s <= Number.MIN_SAFE_INTEGER) && (e = Math.abs(.05 * n)), a(n + e), t || o(s - e) } this.min = s, this.max = n } getTickLimit() { const t = this.options.ticks; let e, { maxTicksLimit: i, stepSize: s } = t; return s ? (e = Math.ceil(this.max / s) - Math.floor(this.min / s) + 1, e > 1e3 && (console.warn(`scales.${this.id}.ticks.stepSize: ${s} would result generating up to ${e} ticks. Limiting to 1000.`), e = 1e3)) : (e = this.computeTickLimit(), i = i || 11), i && (e = Math.min(i, e)), e } computeTickLimit() { return Number.POSITIVE_INFINITY } buildTicks() { const t = this.options, e = t.ticks; let i = this.getTickLimit(); i = Math.max(2, i); const s = function (t, e) { const i = [], { bounds: s, step: n, min: o, max: a, precision: r, count: l, maxTicks: c, maxDigits: h, includeBounds: d } = t, u = n || 1, p = c - 1, { min: f, max: g } = e, m = !Ns(o), b = !Ns(a), _ = !Ns(l), y = (g - f) / (h + 1); let w, v, x, k, E = _n((g - f) / p / u) * u; if (E < 1e-14 && !m && !b) return [{ value: f }, { value: g }]; k = Math.ceil(g / E) - Math.floor(f / E), k > p && (E = _n(k * E / p / u) * u), Ns(r) || (w = Math.pow(10, r), E = Math.ceil(E * w) / w), "ticks" === s ? (v = Math.floor(f / E) * E, x = Math.ceil(g / E) * E) : (v = f, x = g), m && b && n && function (t, e) { const i = Math.round(t); return i - e <= t && i + e >= t }((a - o) / n, E / 1e3) ? (k = Math.round(Math.min((a - o) / E, c)), E = (a - o) / k, v = o, x = a) : _ ? (v = m ? o : v, x = b ? a : x, k = l - 1, E = (x - v) / k) : (k = (x - v) / E, k = wn(k, Math.round(k), E / 1e3) ? Math.round(k) : Math.ceil(k)); const C = Math.max(En(E), En(v)); w = Math.pow(10, Ns(r) ? C : r), v = Math.round(v * w) / w, x = Math.round(x * w) / w; let A = 0; for (m && (d && v !== o ? (i.push({ value: o }), v < o && A++, wn(Math.round((v + A * E) * w) / w, o, ah(o, y, t)) && A++) : v < o && A++); A < k; ++A)i.push({ value: Math.round((v + A * E) * w) / w }); return b && d && x !== a ? i.length && wn(i[i.length - 1].value, a, ah(a, y, t)) ? i[i.length - 1].value = a : i.push({ value: a }) : b && x !== a || i.push({ value: x }), i }({ maxTicks: i, bounds: t.bounds, min: t.min, max: t.max, precision: e.precision, step: e.stepSize, count: e.count, maxDigits: this._maxDigits(), horizontal: this.isHorizontal(), minRotation: e.minRotation || 0, includeBounds: !1 !== e.includeBounds }, this._range || this); return "ticks" === t.bounds && vn(s, this, "value"), t.reverse ? (s.reverse(), this.start = this.max, this.end = this.min) : (this.start = this.min, this.end = this.max), s } configure() { const t = this.ticks; let e = this.min, i = this.max; if (super.configure(), this.options.offset && t.length) { const s = (i - e) / Math.max(t.length - 1, 1) / 2; e -= s, i += s } this._startValue = e, this._endValue = i, this._valueRange = i - e } getLabelForValue(t) { return Na(t, this.chart.options.locale, this.options.ticks.format) } } class lh extends rh { determineDataLimits() { const { min: t, max: e } = this.getMinMax(!0); this.min = Hs(t) ? t : 0, this.max = Hs(e) ? e : 1, this.handleTickRangeOptions() } computeTickLimit() { const t = this.isHorizontal(), e = t ? this.width : this.height, i = xn(this.options.ticks.minRotation), s = (t ? Math.sin(i) : Math.cos(i)) || .001, n = this._resolveTickFontOptions(0); return Math.ceil(e / Math.min(40, n.lineHeight / s)) } getPixelForValue(t) { return null === t ? NaN : this.getPixelForDecimal((t - this._startValue) / this._valueRange) } getValueForPixel(t) { return this._startValue + this.getDecimalForPixel(t) * this._valueRange } } function ch(t) { return 1 == t / Math.pow(10, Math.floor(mn(t))) } lh.id = "linear", lh.defaults = { ticks: { callback: Pr.formatters.numeric } }; class hh extends jr { constructor(t) { super(t), this.start = void 0, this.end = void 0, this._startValue = void 0, this._valueRange = 0 } parse(t, e) { const i = rh.prototype.parse.apply(this, [t, e]); if (0 !== i) return Hs(i) && i > 0 ? i : null; this._zero = !0 } determineDataLimits() { const { min: t, max: e } = this.getMinMax(!0); this.min = Hs(t) ? Math.max(0, t) : null, this.max = Hs(e) ? Math.max(0, e) : null, this.options.beginAtZero && (this._zero = !0), this.handleTickRangeOptions() } handleTickRangeOptions() { const { minDefined: t, maxDefined: e } = this.getUserBounds(); let i = this.min, s = this.max; const n = e => i = t ? i : e, o = t => s = e ? s : t, a = (t, e) => Math.pow(10, Math.floor(mn(t)) + e); i === s && (i <= 0 ? (n(1), o(10)) : (n(a(i, -1)), o(a(s, 1)))), i <= 0 && n(a(s, -1)), s <= 0 && o(a(i, 1)), this._zero && this.min !== this._suggestedMin && i === a(this.min, 0) && n(a(i, -1)), this.min = i, this.max = s } buildTicks() { const t = this.options, e = function (t, e) { const i = Math.floor(mn(e.max)), s = Math.ceil(e.max / Math.pow(10, i)), n = []; let o = Ws(t.min, Math.pow(10, Math.floor(mn(e.min)))), a = Math.floor(mn(o)), r = Math.floor(o / Math.pow(10, a)), l = a < 0 ? Math.pow(10, Math.abs(a)) : 1; do { n.push({ value: o, major: ch(o) }), ++r, 10 === r && (r = 1, ++a, l = a >= 0 ? 1 : l), o = Math.round(r * Math.pow(10, a) * l) / l } while (a < i || a === i && r < s); const c = Ws(t.max, o); return n.push({ value: c, major: ch(o) }), n }({ min: this._userMin, max: this._userMax }, this); return "ticks" === t.bounds && vn(e, this, "value"), t.reverse ? (e.reverse(), this.start = this.max, this.end = this.min) : (this.start = this.min, this.end = this.max), e } getLabelForValue(t) { return void 0 === t ? "0" : Na(t, this.chart.options.locale, this.options.ticks.format) } configure() { const t = this.min; super.configure(), this._startValue = mn(t), this._valueRange = mn(this.max) - mn(t) } getPixelForValue(t) { return void 0 !== t && 0 !== t || (t = this.min), null === t || isNaN(t) ? NaN : this.getPixelForDecimal(t === this.min ? 0 : (mn(t) - this._startValue) / this._valueRange) } getValueForPixel(t) { const e = this.getDecimalForPixel(t); return Math.pow(10, this._startValue + e * this._valueRange) } } function dh(t) { const e = t.ticks; if (e.display && t.display) { const t = ta(e.backdropPadding); return $s(e.font && e.font.size, Do.font.size) + t.height } return 0 } function uh(t, e, i, s, n) { return t === s || t === n ? { start: e - i / 2, end: e + i / 2 } : t < s || t > n ? { start: e - i, end: e } : { start: e, end: e + i } } function ph(t, e, i, s, n) { const o = Math.abs(Math.sin(i)), a = Math.abs(Math.cos(i)); let r = 0, l = 0; s.start < e.l ? (r = (e.l - s.start) / o, t.l = Math.min(t.l, e.l - r)) : s.end > e.r && (r = (s.end - e.r) / o, t.r = Math.max(t.r, e.r + r)), n.start < e.t ? (l = (e.t - n.start) / a, t.t = Math.min(t.t, e.t - l)) : n.end > e.b && (l = (n.end - e.b) / a, t.b = Math.max(t.b, e.b + l)) } function fh(t) { return 0 === t || 180 === t ? "center" : t < 180 ? "left" : "right" } function gh(t, e, i) { return 90 === i || 270 === i ? t -= e / 2 : (i > 270 || i < 90) && (t -= e), t } function mh(t, e, i, s) { const { ctx: n } = t; if (i) n.arc(t.xCenter, t.yCenter, e, 0, cn); else { let i = t.getPointPosition(0, e); n.moveTo(i.x, i.y); for (let o = 1; o < s; o++)i = t.getPointPosition(o, e), n.lineTo(i.x, i.y) } } hh.id = "logarithmic", hh.defaults = { ticks: { callback: Pr.formatters.logarithmic, major: { enabled: !0 } } }; class bh extends rh { constructor(t) { super(t), this.xCenter = void 0, this.yCenter = void 0, this.drawingArea = void 0, this._pointLabels = [], this._pointLabelItems = [] } setDimensions() { const t = this._padding = ta(dh(this.options) / 2), e = this.width = this.maxWidth - t.width, i = this.height = this.maxHeight - t.height; this.xCenter = Math.floor(this.left + e / 2 + t.left), this.yCenter = Math.floor(this.top + i / 2 + t.top), this.drawingArea = Math.floor(Math.min(e, i) / 2) } determineDataLimits() { const { min: t, max: e } = this.getMinMax(!1); this.min = Hs(t) && !isNaN(t) ? t : 0, this.max = Hs(e) && !isNaN(e) ? e : 0, this.handleTickRangeOptions() } computeTickLimit() { return Math.ceil(this.drawingArea / dh(this.options)) } generateTickLabels(t) { rh.prototype.generateTickLabels.call(this, t), this._pointLabels = this.getLabels().map(((t, e) => { const i = Us(this.options.pointLabels.callback, [t, e], this); return i || 0 === i ? i : "" })).filter(((t, e) => this.chart.getDataVisibility(e))) } fit() { const t = this.options; t.display && t.pointLabels.display ? function (t) { const e = { l: t.left + t._padding.left, r: t.right - t._padding.right, t: t.top + t._padding.top, b: t.bottom - t._padding.bottom }, i = Object.assign({}, e), s = [], n = [], o = t._pointLabels.length, a = t.options.pointLabels, r = a.centerPointLabels ? ln / o : 0; for (let d = 0; d < o; d++) { const o = a.setContext(t.getPointLabelContext(d)); n[d] = o.padding; const u = t.getPointPosition(d, t.drawingArea + n[d], r), p = ea(o.font), f = (l = t.ctx, c = p, h = Fs(h = t._pointLabels[d]) ? h : [h], { w: Bo(l, c.string, h), h: h.length * c.lineHeight }); s[d] = f; const g = Sn(t.getIndexAngle(d) + r), m = Math.round(kn(g)); ph(i, e, g, uh(m, u.x, f.w, 0, 180), uh(m, u.y, f.h, 90, 270)) } var l, c, h; t.setCenterPoint(e.l - i.l, i.r - e.r, e.t - i.t, i.b - e.b), t._pointLabelItems = function (t, e, i) { const s = [], n = t._pointLabels.length, o = t.options, a = dh(o) / 2, r = t.drawingArea, l = o.pointLabels.centerPointLabels ? ln / n : 0; for (let o = 0; o < n; o++) { const n = t.getPointPosition(o, r + a + i[o], l), u = Math.round(kn(Sn(n.angle + pn))), p = e[o], f = gh(n.y, p.h, u), g = fh(u), m = (c = n.x, h = p.w, "right" === (d = g) ? c -= h : "center" === d && (c -= h / 2), c); s.push({ x: n.x, y: f, textAlign: g, left: m, top: f, right: m + p.w, bottom: f + p.h }) } var c, h, d; return s }(t, s, n) }(this) : this.setCenterPoint(0, 0, 0, 0) } setCenterPoint(t, e, i, s) { this.xCenter += Math.floor((t - e) / 2), this.yCenter += Math.floor((i - s) / 2), this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(t, e, i, s)) } getIndexAngle(t) { return Sn(t * (cn / (this._pointLabels.length || 1)) + xn(this.options.startAngle || 0)) } getDistanceFromCenterForValue(t) { if (Ns(t)) return NaN; const e = this.drawingArea / (this.max - this.min); return this.options.reverse ? (this.max - t) * e : (t - this.min) * e } getValueForDistanceFromCenter(t) { if (Ns(t)) return NaN; const e = t / (this.drawingArea / (this.max - this.min)); return this.options.reverse ? this.max - e : this.min + e } getPointLabelContext(t) { const e = this._pointLabels || []; if (t >= 0 && t < e.length) { const i = e[t]; return function (t, e, i) { return sa(t, { label: i, index: e, type: "pointLabel" }) }(this.getContext(), t, i) } } getPointPosition(t, e, i = 0) { const s = this.getIndexAngle(t) - pn + i; return { x: Math.cos(s) * e + this.xCenter, y: Math.sin(s) * e + this.yCenter, angle: s } } getPointPositionForValue(t, e) { return this.getPointPosition(t, this.getDistanceFromCenterForValue(e)) } getBasePosition(t) { return this.getPointPositionForValue(t || 0, this.getBaseValue()) } getPointLabelPosition(t) { const { left: e, top: i, right: s, bottom: n } = this._pointLabelItems[t]; return { left: e, top: i, right: s, bottom: n } } drawBackground() { const { backgroundColor: t, grid: { circular: e } } = this.options; if (t) { const i = this.ctx; i.save(), i.beginPath(), mh(this, this.getDistanceFromCenterForValue(this._endValue), e, this._pointLabels.length), i.closePath(), i.fillStyle = t, i.fill(), i.restore() } } drawGrid() { const t = this.ctx, e = this.options, { angleLines: i, grid: s } = e, n = this._pointLabels.length; let o, a, r; if (e.pointLabels.display && function (t, e) { const { ctx: i, options: { pointLabels: s } } = t; for (let n = e - 1; n >= 0; n--) { const e = s.setContext(t.getPointLabelContext(n)), o = ea(e.font), { x: a, y: r, textAlign: l, left: c, top: h, right: d, bottom: u } = t._pointLabelItems[n], { backdropColor: p } = e; if (!Ns(p)) { const t = Jo(e.borderRadius), s = ta(e.backdropPadding); i.fillStyle = p; const n = c - s.left, o = h - s.top, a = d - c + s.width, r = u - h + s.height; Object.values(t).some((t => 0 !== t)) ? (i.beginPath(), Yo(i, { x: n, y: o, w: a, h: r, radius: t }), i.fill()) : i.fillRect(n, o, a, r) } qo(i, t._pointLabels[n], a, r + o.lineHeight / 2, o, { color: e.color, textAlign: l, textBaseline: "middle" }) } }(this, n), s.display && this.ticks.forEach(((t, e) => { 0 !== e && (a = this.getDistanceFromCenterForValue(t.value), function (t, e, i, s) { const n = t.ctx, o = e.circular, { color: a, lineWidth: r } = e; !o && !s || !a || !r || i < 0 || (n.save(), n.strokeStyle = a, n.lineWidth = r, n.setLineDash(e.borderDash), n.lineDashOffset = e.borderDashOffset, n.beginPath(), mh(t, i, o, s), n.closePath(), n.stroke(), n.restore()) }(this, s.setContext(this.getContext(e - 1)), a, n)) })), i.display) { for (t.save(), o = n - 1; o >= 0; o--) { const s = i.setContext(this.getPointLabelContext(o)), { color: n, lineWidth: l } = s; l && n && (t.lineWidth = l, t.strokeStyle = n, t.setLineDash(s.borderDash), t.lineDashOffset = s.borderDashOffset, a = this.getDistanceFromCenterForValue(e.ticks.reverse ? this.min : this.max), r = this.getPointPosition(o, a), t.beginPath(), t.moveTo(this.xCenter, this.yCenter), t.lineTo(r.x, r.y), t.stroke()) } t.restore() } } drawBorder() { } drawLabels() { const t = this.ctx, e = this.options, i = e.ticks; if (!i.display) return; const s = this.getIndexAngle(0); let n, o; t.save(), t.translate(this.xCenter, this.yCenter), t.rotate(s), t.textAlign = "center", t.textBaseline = "middle", this.ticks.forEach(((s, a) => { if (0 === a && !e.reverse) return; const r = i.setContext(this.getContext(a)), l = ea(r.font); if (n = this.getDistanceFromCenterForValue(this.ticks[a].value), r.showLabelBackdrop) { t.font = l.string, o = t.measureText(s.label).width, t.fillStyle = r.backdropColor; const e = ta(r.backdropPadding); t.fillRect(-o / 2 - e.left, -n - l.size / 2 - e.top, o + e.width, l.size + e.height) } qo(t, s.label, 0, -n, l, { color: r.color }) })), t.restore() } drawTitle() { } } bh.id = "radialLinear", bh.defaults = { display: !0, animate: !0, position: "chartArea", angleLines: { display: !0, lineWidth: 1, borderDash: [], borderDashOffset: 0 }, grid: { circular: !1 }, startAngle: 0, ticks: { showLabelBackdrop: !0, callback: Pr.formatters.numeric }, pointLabels: { backdropColor: void 0, backdropPadding: 2, display: !0, font: { size: 10 }, callback: t => t, padding: 5, centerPointLabels: !1 } }, bh.defaultRoutes = { "angleLines.color": "borderColor", "pointLabels.color": "color", "ticks.color": "color" }, bh.descriptors = { angleLines: { _fallback: "grid" } }; const _h = { millisecond: { common: !0, size: 1, steps: 1e3 }, second: { common: !0, size: 1e3, steps: 60 }, minute: { common: !0, size: 6e4, steps: 60 }, hour: { common: !0, size: 36e5, steps: 24 }, day: { common: !0, size: 864e5, steps: 30 }, week: { common: !1, size: 6048e5, steps: 4 }, month: { common: !0, size: 2628e6, steps: 12 }, quarter: { common: !1, size: 7884e6, steps: 4 }, year: { common: !0, size: 3154e7 } }, yh = Object.keys(_h); function wh(t, e) { return t - e } function vh(t, e) { if (Ns(e)) return null; const i = t._adapter, { parser: s, round: n, isoWeekday: o } = t._parseOpts; let a = e; return "function" == typeof s && (a = s(a)), Hs(a) || (a = "string" == typeof s ? i.parse(a, s) : i.parse(a)), null === a ? null : (n && (a = "week" !== n || !yn(o) && !0 !== o ? i.startOf(a, n) : i.startOf(a, "isoWeek", o)), +a) } function xh(t, e, i, s) { const n = yh.length; for (let o = yh.indexOf(t); o < n - 1; ++o) { const t = _h[yh[o]], n = t.steps ? t.steps : Number.MAX_SAFE_INTEGER; if (t.common && Math.ceil((i - e) / (n * t.size)) <= s) return yh[o] } return yh[n - 1] } function kh(t, e, i) { if (i) { if (i.length) { const { lo: s, hi: n } = Ln(i, e); t[i[s] >= e ? i[s] : i[n]] = !0 } } else t[e] = !0 } function Eh(t, e, i) { const s = [], n = {}, o = e.length; let a, r; for (a = 0; a < o; ++a)r = e[a], n[r] = a, s.push({ value: r, major: !1 }); return 0 !== o && i ? function (t, e, i, s) { const n = t._adapter, o = +n.startOf(e[0].value, s), a = e[e.length - 1].value; let r, l; for (r = o; r <= a; r = +n.add(r, 1, s))l = i[r], l >= 0 && (e[l].major = !0); return e }(t, s, n, i) : s } class Ch extends jr { constructor(t) { super(t), this._cache = { data: [], labels: [], all: [] }, this._unit = "day", this._majorUnit = void 0, this._offsets = {}, this._normalized = !1, this._parseOpts = void 0 } init(t, e) { const i = t.time || (t.time = {}), s = this._adapter = new qr._date(t.adapters.date); s.init(e), Js(i.displayFormats, s.formats()), this._parseOpts = { parser: i.parser, round: i.round, isoWeekday: i.isoWeekday }, super.init(t), this._normalized = e.normalized } parse(t, e) { return void 0 === t ? null : vh(this, t) } beforeLayout() { super.beforeLayout(), this._cache = { data: [], labels: [], all: [] } } determineDataLimits() { const t = this.options, e = this._adapter, i = t.time.unit || "day"; let { min: s, max: n, minDefined: o, maxDefined: a } = this.getUserBounds(); function r(t) { o || isNaN(t.min) || (s = Math.min(s, t.min)), a || isNaN(t.max) || (n = Math.max(n, t.max)) } o && a || (r(this._getLabelBounds()), "ticks" === t.bounds && "labels" === t.ticks.source || r(this.getMinMax(!1))), s = Hs(s) && !isNaN(s) ? s : +e.startOf(Date.now(), i), n = Hs(n) && !isNaN(n) ? n : +e.endOf(Date.now(), i) + 1, this.min = Math.min(s, n - 1), this.max = Math.max(s + 1, n) } _getLabelBounds() { const t = this.getLabelTimestamps(); let e = Number.POSITIVE_INFINITY, i = Number.NEGATIVE_INFINITY; return t.length && (e = t[0], i = t[t.length - 1]), { min: e, max: i } } buildTicks() { const t = this.options, e = t.time, i = t.ticks, s = "labels" === i.source ? this.getLabelTimestamps() : this._generate(); "ticks" === t.bounds && s.length && (this.min = this._userMin || s[0], this.max = this._userMax || s[s.length - 1]); const n = this.min, o = function (t, e, i) { let s = 0, n = t.length; for (; s < n && t[s] < e;)s++; for (; n > s && t[n - 1] > i;)n--; return s > 0 || n < t.length ? t.slice(s, n) : t }(s, n, this.max); return this._unit = e.unit || (i.autoSkip ? xh(e.minUnit, this.min, this.max, this._getLabelCapacity(n)) : function (t, e, i, s, n) { for (let o = yh.length - 1; o >= yh.indexOf(i); o--) { const i = yh[o]; if (_h[i].common && t._adapter.diff(n, s, i) >= e - 1) return i } return yh[i ? yh.indexOf(i) : 0] }(this, o.length, e.minUnit, this.min, this.max)), this._majorUnit = i.major.enabled && "year" !== this._unit ? function (t) { for (let e = yh.indexOf(t) + 1, i = yh.length; e < i; ++e)if (_h[yh[e]].common) return yh[e] }(this._unit) : void 0, this.initOffsets(s), t.reverse && o.reverse(), Eh(this, o, this._majorUnit) } afterAutoSkip() { this.options.offsetAfterAutoskip && this.initOffsets(this.ticks.map((t => +t.value))) } initOffsets(t) { let e, i, s = 0, n = 0; this.options.offset && t.length && (e = this.getDecimalForValue(t[0]), s = 1 === t.length ? 1 - e : (this.getDecimalForValue(t[1]) - e) / 2, i = this.getDecimalForValue(t[t.length - 1]), n = 1 === t.length ? i : (i - this.getDecimalForValue(t[t.length - 2])) / 2); const o = t.length < 3 ? .5 : .25; s = Pn(s, 0, o), n = Pn(n, 0, o), this._offsets = { start: s, end: n, factor: 1 / (s + 1 + n) } } _generate() { const t = this._adapter, e = this.min, i = this.max, s = this.options, n = s.time, o = n.unit || xh(n.minUnit, e, i, this._getLabelCapacity(e)), a = $s(n.stepSize, 1), r = "week" === o && n.isoWeekday, l = yn(r) || !0 === r, c = {}; let h, d, u = e; if (l && (u = +t.startOf(u, "isoWeek", r)), u = +t.startOf(u, l ? "day" : o), t.diff(i, e, o) > 1e5 * a) throw new Error(e + " and " + i + " are too far apart with stepSize of " + a + " " + o); const p = "data" === s.ticks.source && this.getDataTimestamps(); for (h = u, d = 0; h < i; h = +t.add(h, a, o), d++)kh(c, h, p); return h !== i && "ticks" !== s.bounds && 1 !== d || kh(c, h, p), Object.keys(c).sort(((t, e) => t - e)).map((t => +t)) } getLabelForValue(t) { const e = this._adapter, i = this.options.time; return i.tooltipFormat ? e.format(t, i.tooltipFormat) : e.format(t, i.displayFormats.datetime) } _tickFormatFunction(t, e, i, s) { const n = this.options, o = n.time.displayFormats, a = this._unit, r = this._majorUnit, l = a && o[a], c = r && o[r], h = i[e], d = r && c && h && h.major, u = this._adapter.format(t, s || (d ? c : l)), p = n.ticks.callback; return p ? Us(p, [u, e, i], this) : u } generateTickLabels(t) { let e, i, s; for (e = 0, i = t.length; e < i; ++e)s = t[e], s.label = this._tickFormatFunction(s.value, e, t) } getDecimalForValue(t) { return null === t ? NaN : (t - this.min) / (this.max - this.min) } getPixelForValue(t) { const e = this._offsets, i = this.getDecimalForValue(t); return this.getPixelForDecimal((e.start + i) * e.factor) } getValueForPixel(t) { const e = this._offsets, i = this.getDecimalForPixel(t) / e.factor - e.end; return this.min + i * (this.max - this.min) } _getLabelSize(t) { const e = this.options.ticks, i = this.ctx.measureText(t).width, s = xn(this.isHorizontal() ? e.maxRotation : e.minRotation), n = Math.cos(s), o = Math.sin(s), a = this._resolveTickFontOptions(0).size; return { w: i * n + a * o, h: i * o + a * n } } _getLabelCapacity(t) { const e = this.options.time, i = e.displayFormats, s = i[e.unit] || i.millisecond, n = this._tickFormatFunction(t, 0, Eh(this, [t], this._majorUnit), s), o = this._getLabelSize(n), a = Math.floor(this.isHorizontal() ? this.width / o.w : this.height / o.h) - 1; return a > 0 ? a : 1 } getDataTimestamps() { let t, e, i = this._cache.data || []; if (i.length) return i; const s = this.getMatchingVisibleMetas(); if (this._normalized && s.length) return this._cache.data = s[0].controller.getAllParsedValues(this); for (t = 0, e = s.length; t < e; ++t)i = i.concat(s[t].controller.getAllParsedValues(this)); return this._cache.data = this.normalize(i) } getLabelTimestamps() { const t = this._cache.labels || []; let e, i; if (t.length) return t; const s = this.getLabels(); for (e = 0, i = s.length; e < i; ++e)t.push(vh(this, s[e])); return this._cache.labels = this._normalized ? t : this.normalize(t) } normalize(t) { return zn(t.sort(wh)) } } function Ah(t, e, i) { let s, n, o, a, r = 0, l = t.length - 1; i ? (e >= t[r].pos && e <= t[l].pos && ({ lo: r, hi: l } = Dn(t, "pos", e)), ({ pos: s, time: o } = t[r]), ({ pos: n, time: a } = t[l])) : (e >= t[r].time && e <= t[l].time && ({ lo: r, hi: l } = Dn(t, "time", e)), ({ time: s, pos: o } = t[r]), ({ time: n, pos: a } = t[l])); const c = n - s; return c ? o + (a - o) * (e - s) / c : o } Ch.id = "time", Ch.defaults = { bounds: "data", adapters: {}, time: { parser: !1, unit: !1, round: !1, isoWeekday: !1, minUnit: "millisecond", displayFormats: {} }, ticks: { source: "auto", major: { enabled: !1 } } }; class Mh extends Ch { constructor(t) { super(t), this._table = [], this._minPos = void 0, this._tableRange = void 0 } initOffsets() { const t = this._getTimestampsForTable(), e = this._table = this.buildLookupTable(t); this._minPos = Ah(e, this.min), this._tableRange = Ah(e, this.max) - this._minPos, super.initOffsets(t) } buildLookupTable(t) { const { min: e, max: i } = this, s = [], n = []; let o, a, r, l, c; for (o = 0, a = t.length; o < a; ++o)l = t[o], l >= e && l <= i && s.push(l); if (s.length < 2) return [{ time: e, pos: 0 }, { time: i, pos: 1 }]; for (o = 0, a = s.length; o < a; ++o)c = s[o + 1], r = s[o - 1], l = s[o], Math.round((c + r) / 2) !== l && n.push({ time: l, pos: o / (a - 1) }); return n } _getTimestampsForTable() { let t = this._cache.all || []; if (t.length) return t; const e = this.getDataTimestamps(), i = this.getLabelTimestamps(); return t = e.length && i.length ? this.normalize(e.concat(i)) : e.length ? e : i, t = this._cache.all = t, t } getDecimalForValue(t) { return (Ah(this._table, t) - this._minPos) / this._tableRange } getValueForPixel(t) { const e = this._offsets, i = this.getDecimalForPixel(t) / e.factor - e.end; return Ah(this._table, i * this._tableRange + this._minPos, !0) } } Mh.id = "timeseries", Mh.defaults = Ch.defaults; const Sh = [Hr, _c, nh, Object.freeze({ __proto__: null, CategoryScale: oh, LinearScale: lh, LogarithmicScale: hh, RadialLinearScale: bh, TimeScale: Ch, TimeSeriesScale: Mh })]; Kl.register(...Sh); let Oh = {}; if (document.getElementById("comites")) { for (let md = 0; md < parseInt(document.getElementById("comites").value); md++) { var Ph = "valgra_" + md, Th = "grafico_" + md; if (document.getElementById(Ph)) { const bd = JSON.parse(document.getElementById(Ph).value); gd(document.getElementById(Th).getContext("2d"), bd) } } function gd(t, e) { Oh = new Kl(t, { type: "doughnut", data: { labels: ["En proceso", "Vencen este mes", "Vencidos"], datasets: [{ label: "Estado de los acuerdos", data: [{ estado: "1", url: "", total: { total: e.proceso } }, { estado: "2", url: "", total: { total: e.porvencer } }, { estado: "3", url: "", total: { total: e.vencidos } }], backgroundColor: ["rgba(17, 153, 142, 0.3)", "rgba(255, 224, 0, 0.3)", "rgba(237, 33, 58, 0.3)"], borderColor: ["rgba(17, 153, 142, 1)", "rgba(255, 224, 0, 1)", "rgba(237, 33, 58, 1)"], borderWidth: 1 }] }, options: { parsing: { key: "total.total" } } }) } document.addEventListener("click", (function (t) { if (t.target.getAttribute("id")) { const e = t.target.getAttribute("id"), i = "valgra_" + e.substr(8, 2), s = document.getElementById("comite_" + e).value, n = document.getElementById("pagina").value, o = (JSON.parse(document.getElementById(i).value), Oh.getElementsAtEventForMode(t, "nearest", { intersect: !0 }, !0)); if (o.length) { const t = o[0]; Oh.data.datasets[t.datasetIndex].data[t.index].estado, "todos" != s && (location.href = n + "/?id=" + s) } } })) } })() })();